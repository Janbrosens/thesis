
Enclave/encl.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 ba 6f 01 00    	push   0x16fba(%rip)        # 17fc0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 bc 6f 01 00    	jmp    *0x16fbc(%rip)        # 17fc8 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 ba 6f 01 00    	jmp    *0x16fba(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 d2 6f 01 00    	jmp    *0x16fd2(%rip)        # 17ff0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002000 <trts_access_version_dummy1>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 8d 05 45 62 01 00 	lea    0x16245(%rip),%rax        # 18250 <sgx_trts_version>
    200b:	c6 00 73             	movb   $0x73,(%rax)
    200e:	c3                   	ret    
    200f:	90                   	nop

0000000000002010 <tstdc_access_version_dummy1>:
    2010:	f3 0f 1e fa          	endbr64 
    2014:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a0e0 <sgx_tstdc_version>
    201b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a0e0 <sgx_tstdc_version>
    2022:	c3                   	ret    
    2023:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    202a:	00 00 00 
    202d:	0f 1f 00             	nopl   (%rax)

0000000000002030 <tcrypto_access_version_dummy1>:
    2030:	f3 0f 1e fa          	endbr64 
    2034:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a100 <sgx_tcrypto_version>
    203b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a100 <sgx_tcrypto_version>
    2042:	c3                   	ret    
    2043:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    204a:	00 00 00 
    204d:	0f 1f 00             	nopl   (%rax)

0000000000002050 <tservice_access_version_dummy1>:
    2050:	f3 0f 1e fa          	endbr64 
    2054:	c6 05 c5 80 01 00 73 	movb   $0x73,0x180c5(%rip)        # 1a120 <sgx_tservice_version>
    205b:	48 8d 05 be 80 01 00 	lea    0x180be(%rip),%rax        # 1a120 <sgx_tservice_version>
    2062:	c3                   	ret    

0000000000002063 <ecall_lookup>:
    2063:	f3 0f 1e fa          	endbr64 
    2067:	83 3d f2 80 01 00 09 	cmpl   $0x9,0x180f2(%rip)        # 1a160 <idx>
    206e:	7f 22                	jg     2092 <ecall_lookup+0x2f>
    2070:	50                   	push   %rax
    2071:	48 8d 3d 88 0f 01 00 	lea    0x10f88(%rip),%rdi        # 13000 <second_phase+0xc50>
    2078:	31 c0                	xor    %eax,%eax
    207a:	e8 1f 20 00 00       	call   409e <ocall_print>
    207f:	48 63 15 da 80 01 00 	movslq 0x180da(%rip),%rdx        # 1a160 <idx>
    2086:	48 8d 05 73 5f 01 00 	lea    0x15f73(%rip),%rax        # 18000 <array>
    208d:	8b 04 90             	mov    (%rax,%rdx,4),%eax
    2090:	5a                   	pop    %rdx
    2091:	c3                   	ret    
    2092:	b8 0f 27 00 00       	mov    $0x270f,%eax
    2097:	c3                   	ret    

0000000000002098 <ecall_increase>:
    2098:	f3 0f 1e fa          	endbr64 
    209c:	ff 05 be 80 01 00    	incl   0x180be(%rip)        # 1a160 <idx>
    20a2:	c3                   	ret    
    20a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20aa:	00 00 00 
    20ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20b4:	00 00 00 
    20b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20be:	00 00 00 
    20c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20c8:	00 00 00 
    20cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20d2:	00 00 00 
    20d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20dc:	00 00 00 
    20df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20e6:	00 00 00 
    20e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20f0:	00 00 00 
    20f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    20fa:	00 00 00 
    20fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2104:	00 00 00 
    2107:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    210e:	00 00 00 
    2111:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2118:	00 00 00 
    211b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2122:	00 00 00 
    2125:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    212c:	00 00 00 
    212f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2136:	00 00 00 
    2139:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2140:	00 00 00 
    2143:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    214a:	00 00 00 
    214d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2154:	00 00 00 
    2157:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    215e:	00 00 00 
    2161:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2168:	00 00 00 
    216b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2172:	00 00 00 
    2175:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    217c:	00 00 00 
    217f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2186:	00 00 00 
    2189:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2190:	00 00 00 
    2193:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    219a:	00 00 00 
    219d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21a4:	00 00 00 
    21a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ae:	00 00 00 
    21b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21b8:	00 00 00 
    21bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21c2:	00 00 00 
    21c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21cc:	00 00 00 
    21cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21d6:	00 00 00 
    21d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21e0:	00 00 00 
    21e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21ea:	00 00 00 
    21ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21f4:	00 00 00 
    21f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    21fe:	00 00 00 
    2201:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2208:	00 00 00 
    220b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2212:	00 00 00 
    2215:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    221c:	00 00 00 
    221f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2226:	00 00 00 
    2229:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2230:	00 00 00 
    2233:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    223a:	00 00 00 
    223d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2244:	00 00 00 
    2247:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    224e:	00 00 00 
    2251:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2258:	00 00 00 
    225b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2262:	00 00 00 
    2265:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    226c:	00 00 00 
    226f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2276:	00 00 00 
    2279:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2280:	00 00 00 
    2283:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    228a:	00 00 00 
    228d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2294:	00 00 00 
    2297:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    229e:	00 00 00 
    22a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22a8:	00 00 00 
    22ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22b2:	00 00 00 
    22b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22bc:	00 00 00 
    22bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22c6:	00 00 00 
    22c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22d0:	00 00 00 
    22d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22da:	00 00 00 
    22dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22e4:	00 00 00 
    22e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22ee:	00 00 00 
    22f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    22f8:	00 00 00 
    22fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2302:	00 00 00 
    2305:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    230c:	00 00 00 
    230f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2316:	00 00 00 
    2319:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2320:	00 00 00 
    2323:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    232a:	00 00 00 
    232d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2334:	00 00 00 
    2337:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    233e:	00 00 00 
    2341:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2348:	00 00 00 
    234b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2352:	00 00 00 
    2355:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    235c:	00 00 00 
    235f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2366:	00 00 00 
    2369:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2370:	00 00 00 
    2373:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    237a:	00 00 00 
    237d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2384:	00 00 00 
    2387:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    238e:	00 00 00 
    2391:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2398:	00 00 00 
    239b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23a2:	00 00 00 
    23a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ac:	00 00 00 
    23af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23b6:	00 00 00 
    23b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23c0:	00 00 00 
    23c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23ca:	00 00 00 
    23cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23d4:	00 00 00 
    23d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23de:	00 00 00 
    23e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23e8:	00 00 00 
    23eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23f2:	00 00 00 
    23f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    23fc:	00 00 00 
    23ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2406:	00 00 00 
    2409:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2410:	00 00 00 
    2413:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    241a:	00 00 00 
    241d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2424:	00 00 00 
    2427:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    242e:	00 00 00 
    2431:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2438:	00 00 00 
    243b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2442:	00 00 00 
    2445:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    244c:	00 00 00 
    244f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2456:	00 00 00 
    2459:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2460:	00 00 00 
    2463:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    246a:	00 00 00 
    246d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2474:	00 00 00 
    2477:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    247e:	00 00 00 
    2481:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2488:	00 00 00 
    248b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2492:	00 00 00 
    2495:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    249c:	00 00 00 
    249f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24a6:	00 00 00 
    24a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24b0:	00 00 00 
    24b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ba:	00 00 00 
    24bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24c4:	00 00 00 
    24c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ce:	00 00 00 
    24d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24d8:	00 00 00 
    24db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24e2:	00 00 00 
    24e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24ec:	00 00 00 
    24ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    24f6:	00 00 00 
    24f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2500:	00 00 00 
    2503:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    250a:	00 00 00 
    250d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2514:	00 00 00 
    2517:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    251e:	00 00 00 
    2521:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2528:	00 00 00 
    252b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2532:	00 00 00 
    2535:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    253c:	00 00 00 
    253f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2546:	00 00 00 
    2549:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2550:	00 00 00 
    2553:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    255a:	00 00 00 
    255d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2564:	00 00 00 
    2567:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    256e:	00 00 00 
    2571:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2578:	00 00 00 
    257b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2582:	00 00 00 
    2585:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    258c:	00 00 00 
    258f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2596:	00 00 00 
    2599:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25a0:	00 00 00 
    25a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25aa:	00 00 00 
    25ad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25b4:	00 00 00 
    25b7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25be:	00 00 00 
    25c1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25c8:	00 00 00 
    25cb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25d2:	00 00 00 
    25d5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25dc:	00 00 00 
    25df:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25e6:	00 00 00 
    25e9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25f0:	00 00 00 
    25f3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    25fa:	00 00 00 
    25fd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2604:	00 00 00 
    2607:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    260e:	00 00 00 
    2611:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2618:	00 00 00 
    261b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2622:	00 00 00 
    2625:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    262c:	00 00 00 
    262f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2636:	00 00 00 
    2639:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2640:	00 00 00 
    2643:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    264a:	00 00 00 
    264d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2654:	00 00 00 
    2657:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    265e:	00 00 00 
    2661:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2668:	00 00 00 
    266b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2672:	00 00 00 
    2675:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    267c:	00 00 00 
    267f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2686:	00 00 00 
    2689:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2690:	00 00 00 
    2693:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    269a:	00 00 00 
    269d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26a4:	00 00 00 
    26a7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ae:	00 00 00 
    26b1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26b8:	00 00 00 
    26bb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26c2:	00 00 00 
    26c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26cc:	00 00 00 
    26cf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26d6:	00 00 00 
    26d9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26e0:	00 00 00 
    26e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26ea:	00 00 00 
    26ed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26f4:	00 00 00 
    26f7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    26fe:	00 00 00 
    2701:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2708:	00 00 00 
    270b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2712:	00 00 00 
    2715:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    271c:	00 00 00 
    271f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2726:	00 00 00 
    2729:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2730:	00 00 00 
    2733:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    273a:	00 00 00 
    273d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2744:	00 00 00 
    2747:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    274e:	00 00 00 
    2751:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2758:	00 00 00 
    275b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2762:	00 00 00 
    2765:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    276c:	00 00 00 
    276f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2776:	00 00 00 
    2779:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2780:	00 00 00 
    2783:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    278a:	00 00 00 
    278d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2794:	00 00 00 
    2797:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    279e:	00 00 00 
    27a1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27a8:	00 00 00 
    27ab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27b2:	00 00 00 
    27b5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27bc:	00 00 00 
    27bf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27c6:	00 00 00 
    27c9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27d0:	00 00 00 
    27d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27da:	00 00 00 
    27dd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27e4:	00 00 00 
    27e7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27ee:	00 00 00 
    27f1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27f8:	00 00 00 
    27fb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2802:	00 00 00 
    2805:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    280c:	00 00 00 
    280f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2816:	00 00 00 
    2819:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2820:	00 00 00 
    2823:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    282a:	00 00 00 
    282d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2834:	00 00 00 
    2837:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    283e:	00 00 00 
    2841:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2848:	00 00 00 
    284b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2852:	00 00 00 
    2855:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    285c:	00 00 00 
    285f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2866:	00 00 00 
    2869:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2870:	00 00 00 
    2873:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    287a:	00 00 00 
    287d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2884:	00 00 00 
    2887:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    288e:	00 00 00 
    2891:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2898:	00 00 00 
    289b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28a2:	00 00 00 
    28a5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ac:	00 00 00 
    28af:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28b6:	00 00 00 
    28b9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28c0:	00 00 00 
    28c3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28ca:	00 00 00 
    28cd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28d4:	00 00 00 
    28d7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28de:	00 00 00 
    28e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28e8:	00 00 00 
    28eb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28f2:	00 00 00 
    28f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    28fc:	00 00 00 
    28ff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2906:	00 00 00 
    2909:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2910:	00 00 00 
    2913:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    291a:	00 00 00 
    291d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2924:	00 00 00 
    2927:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    292e:	00 00 00 
    2931:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2938:	00 00 00 
    293b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2942:	00 00 00 
    2945:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    294c:	00 00 00 
    294f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2956:	00 00 00 
    2959:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2960:	00 00 00 
    2963:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    296a:	00 00 00 
    296d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2974:	00 00 00 
    2977:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    297e:	00 00 00 
    2981:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2988:	00 00 00 
    298b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2992:	00 00 00 
    2995:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    299c:	00 00 00 
    299f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29a6:	00 00 00 
    29a9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29b0:	00 00 00 
    29b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ba:	00 00 00 
    29bd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29c4:	00 00 00 
    29c7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ce:	00 00 00 
    29d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29d8:	00 00 00 
    29db:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29e2:	00 00 00 
    29e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29ec:	00 00 00 
    29ef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    29f6:	00 00 00 
    29f9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a00:	00 00 00 
    2a03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a0a:	00 00 00 
    2a0d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a14:	00 00 00 
    2a17:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a1e:	00 00 00 
    2a21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a28:	00 00 00 
    2a2b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a32:	00 00 00 
    2a35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a3c:	00 00 00 
    2a3f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a46:	00 00 00 
    2a49:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a50:	00 00 00 
    2a53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a5a:	00 00 00 
    2a5d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a64:	00 00 00 
    2a67:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a6e:	00 00 00 
    2a71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a78:	00 00 00 
    2a7b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a82:	00 00 00 
    2a85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a8c:	00 00 00 
    2a8f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a96:	00 00 00 
    2a99:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aa0:	00 00 00 
    2aa3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2aaa:	00 00 00 
    2aad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ab4:	00 00 00 
    2ab7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2abe:	00 00 00 
    2ac1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ac8:	00 00 00 
    2acb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ad2:	00 00 00 
    2ad5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2adc:	00 00 00 
    2adf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ae6:	00 00 00 
    2ae9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2af0:	00 00 00 
    2af3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2afa:	00 00 00 
    2afd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b04:	00 00 00 
    2b07:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b0e:	00 00 00 
    2b11:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b18:	00 00 00 
    2b1b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b22:	00 00 00 
    2b25:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b2c:	00 00 00 
    2b2f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b36:	00 00 00 
    2b39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b40:	00 00 00 
    2b43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b4a:	00 00 00 
    2b4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b54:	00 00 00 
    2b57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b5e:	00 00 00 
    2b61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b68:	00 00 00 
    2b6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b72:	00 00 00 
    2b75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b7c:	00 00 00 
    2b7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b86:	00 00 00 
    2b89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b90:	00 00 00 
    2b93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b9a:	00 00 00 
    2b9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ba4:	00 00 00 
    2ba7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bae:	00 00 00 
    2bb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bb8:	00 00 00 
    2bbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bc2:	00 00 00 
    2bc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bcc:	00 00 00 
    2bcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bd6:	00 00 00 
    2bd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2be0:	00 00 00 
    2be3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bea:	00 00 00 
    2bed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bf4:	00 00 00 
    2bf7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2bfe:	00 00 00 
    2c01:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c08:	00 00 00 
    2c0b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c12:	00 00 00 
    2c15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c1c:	00 00 00 
    2c1f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c26:	00 00 00 
    2c29:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c30:	00 00 00 
    2c33:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c3a:	00 00 00 
    2c3d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c44:	00 00 00 
    2c47:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c4e:	00 00 00 
    2c51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c58:	00 00 00 
    2c5b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c62:	00 00 00 
    2c65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c6c:	00 00 00 
    2c6f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c76:	00 00 00 
    2c79:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c80:	00 00 00 
    2c83:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c8a:	00 00 00 
    2c8d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c94:	00 00 00 
    2c97:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c9e:	00 00 00 
    2ca1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ca8:	00 00 00 
    2cab:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cb2:	00 00 00 
    2cb5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cbc:	00 00 00 
    2cbf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cc6:	00 00 00 
    2cc9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cd0:	00 00 00 
    2cd3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cda:	00 00 00 
    2cdd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ce4:	00 00 00 
    2ce7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cee:	00 00 00 
    2cf1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cf8:	00 00 00 
    2cfb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d02:	00 00 00 
    2d05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d0c:	00 00 00 
    2d0f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d16:	00 00 00 
    2d19:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d20:	00 00 00 
    2d23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d2a:	00 00 00 
    2d2d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d34:	00 00 00 
    2d37:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d3e:	00 00 00 
    2d41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d48:	00 00 00 
    2d4b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d52:	00 00 00 
    2d55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d5c:	00 00 00 
    2d5f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d66:	00 00 00 
    2d69:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d70:	00 00 00 
    2d73:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d7a:	00 00 00 
    2d7d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d84:	00 00 00 
    2d87:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d8e:	00 00 00 
    2d91:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2d98:	00 00 00 
    2d9b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2da2:	00 00 00 
    2da5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dac:	00 00 00 
    2daf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2db6:	00 00 00 
    2db9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dc0:	00 00 00 
    2dc3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dca:	00 00 00 
    2dcd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dd4:	00 00 00 
    2dd7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dde:	00 00 00 
    2de1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2de8:	00 00 00 
    2deb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2df2:	00 00 00 
    2df5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dfc:	00 00 00 
    2dff:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e06:	00 00 00 
    2e09:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e10:	00 00 00 
    2e13:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e1a:	00 00 00 
    2e1d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e24:	00 00 00 
    2e27:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e2e:	00 00 00 
    2e31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e38:	00 00 00 
    2e3b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e42:	00 00 00 
    2e45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e4c:	00 00 00 
    2e4f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e56:	00 00 00 
    2e59:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e60:	00 00 00 
    2e63:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e6a:	00 00 00 
    2e6d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e74:	00 00 00 
    2e77:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e7e:	00 00 00 
    2e81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e88:	00 00 00 
    2e8b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e92:	00 00 00 
    2e95:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2e9c:	00 00 00 
    2e9f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ea6:	00 00 00 
    2ea9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eb0:	00 00 00 
    2eb3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eba:	00 00 00 
    2ebd:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ec4:	00 00 00 
    2ec7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ece:	00 00 00 
    2ed1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ed8:	00 00 00 
    2edb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ee2:	00 00 00 
    2ee5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2eec:	00 00 00 
    2eef:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ef6:	00 00 00 
    2ef9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f00:	00 00 00 
    2f03:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f0a:	00 00 00 
    2f0d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f14:	00 00 00 
    2f17:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f1e:	00 00 00 
    2f21:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f28:	00 00 00 
    2f2b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f32:	00 00 00 
    2f35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f3c:	00 00 00 
    2f3f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f46:	00 00 00 
    2f49:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f50:	00 00 00 
    2f53:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f5a:	00 00 00 
    2f5d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f64:	00 00 00 
    2f67:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f6e:	00 00 00 
    2f71:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f78:	00 00 00 
    2f7b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f82:	00 00 00 
    2f85:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f8c:	00 00 00 
    2f8f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f96:	00 00 00 
    2f99:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fa0:	00 00 00 
    2fa3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2faa:	00 00 00 
    2fad:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fb4:	00 00 00 
    2fb7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fbe:	00 00 00 
    2fc1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fc8:	00 00 00 
    2fcb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fd2:	00 00 00 
    2fd5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fdc:	00 00 00 
    2fdf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2fe6:	00 00 00 
    2fe9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ff0:	00 00 00 
    2ff3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2ffa:	00 00 00 
    2ffd:	0f 1f 00             	nopl   (%rax)

0000000000003000 <test_dummy>:
    3000:	b8 00 00 00 00       	mov    $0x0,%eax
    3005:	c3                   	ret    
	...

0000000000004006 <sgx_ecall_increase>:
    4006:	f3 0f 1e fa          	endbr64 
    400a:	48 85 ff             	test   %rdi,%rdi
    400d:	75 0a                	jne    4019 <sgx_ecall_increase+0x13>
    400f:	50                   	push   %rax
    4010:	e8 83 e0 ff ff       	call   2098 <ecall_increase>
    4015:	31 c0                	xor    %eax,%eax
    4017:	5a                   	pop    %rdx
    4018:	c3                   	ret    
    4019:	b8 02 00 00 00       	mov    $0x2,%eax
    401e:	c3                   	ret    

000000000000401f <sgx_ecall_lookup>:
    401f:	f3 0f 1e fa          	endbr64 
    4023:	48 85 ff             	test   %rdi,%rdi
    4026:	74 70                	je     4098 <sgx_ecall_lookup+0x79>
    4028:	53                   	push   %rbx
    4029:	be 04 00 00 00       	mov    $0x4,%esi
    402e:	48 89 fb             	mov    %rdi,%rbx
    4031:	48 83 ec 10          	sub    $0x10,%rsp
    4035:	e8 66 1a 00 00       	call   5aa0 <sgx_is_outside_enclave>
    403a:	85 c0                	test   %eax,%eax
    403c:	75 07                	jne    4045 <sgx_ecall_lookup+0x26>
    403e:	b8 02 00 00 00       	mov    $0x2,%eax
    4043:	eb 4d                	jmp    4092 <sgx_ecall_lookup+0x73>
    4045:	0f ae e8             	lfence 
    4048:	48 89 da             	mov    %rbx,%rdx
    404b:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    4050:	b9 04 00 00 00       	mov    $0x4,%ecx
    4055:	be 04 00 00 00       	mov    $0x4,%esi
    405a:	e8 a1 ca 00 00       	call   10b00 <memcpy_s>
    405f:	89 c2                	mov    %eax,%edx
    4061:	b8 01 00 00 00       	mov    $0x1,%eax
    4066:	85 d2                	test   %edx,%edx
    4068:	75 28                	jne    4092 <sgx_ecall_lookup+0x73>
    406a:	e8 f4 df ff ff       	call   2063 <ecall_lookup>
    406f:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    4074:	b9 04 00 00 00       	mov    $0x4,%ecx
    4079:	48 89 df             	mov    %rbx,%rdi
    407c:	be 04 00 00 00       	mov    $0x4,%esi
    4081:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4085:	e8 f6 ca 00 00       	call   10b80 <memcpy_verw_s>
    408a:	85 c0                	test   %eax,%eax
    408c:	0f 95 c0             	setne  %al
    408f:	0f b6 c0             	movzbl %al,%eax
    4092:	48 83 c4 10          	add    $0x10,%rsp
    4096:	5b                   	pop    %rbx
    4097:	c3                   	ret    
    4098:	b8 02 00 00 00       	mov    $0x2,%eax
    409d:	c3                   	ret    

000000000000409e <ocall_print>:
    409e:	f3 0f 1e fa          	endbr64 
    40a2:	41 55                	push   %r13
    40a4:	41 54                	push   %r12
    40a6:	55                   	push   %rbp
    40a7:	31 ed                	xor    %ebp,%ebp
    40a9:	53                   	push   %rbx
    40aa:	48 89 fb             	mov    %rdi,%rbx
    40ad:	48 83 ec 28          	sub    $0x28,%rsp
    40b1:	48 85 ff             	test   %rdi,%rdi
    40b4:	74 09                	je     40bf <ocall_print+0x21>
    40b6:	e8 f5 c7 00 00       	call   108b0 <strlen>
    40bb:	48 8d 68 01          	lea    0x1(%rax),%rbp
    40bf:	31 c9                	xor    %ecx,%ecx
    40c1:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    40c6:	48 85 db             	test   %rbx,%rbx
    40c9:	74 1c                	je     40e7 <ocall_print+0x49>
    40cb:	48 89 ee             	mov    %rbp,%rsi
    40ce:	48 89 df             	mov    %rbx,%rdi
    40d1:	49 89 ed             	mov    %rbp,%r13
    40d4:	e8 67 19 00 00       	call   5a40 <sgx_is_within_enclave>
    40d9:	85 c0                	test   %eax,%eax
    40db:	75 0d                	jne    40ea <ocall_print+0x4c>
    40dd:	b8 02 00 00 00       	mov    $0x2,%eax
    40e2:	e9 95 00 00 00       	jmp    417c <ocall_print+0xde>
    40e7:	45 31 ed             	xor    %r13d,%r13d
    40ea:	49 8d 7d 08          	lea    0x8(%r13),%rdi
    40ee:	48 39 ef             	cmp    %rbp,%rdi
    40f1:	73 05                	jae    40f8 <ocall_print+0x5a>
    40f3:	48 85 db             	test   %rbx,%rbx
    40f6:	75 e5                	jne    40dd <ocall_print+0x3f>
    40f8:	e8 03 1a 00 00       	call   5b00 <sgx_ocalloc>
    40fd:	49 89 c4             	mov    %rax,%r12
    4100:	48 85 c0             	test   %rax,%rax
    4103:	75 13                	jne    4118 <ocall_print+0x7a>
    4105:	31 d2                	xor    %edx,%edx
    4107:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    410c:	e8 cf 1a 00 00       	call   5be0 <sgx_ocfree>
    4111:	b8 01 00 00 00       	mov    $0x1,%eax
    4116:	eb 64                	jmp    417c <ocall_print+0xde>
    4118:	48 8d 40 08          	lea    0x8(%rax),%rax
    411c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4121:	48 85 db             	test   %rbx,%rbx
    4124:	74 39                	je     415f <ocall_print+0xc1>
    4126:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    412b:	b9 08 00 00 00       	mov    $0x8,%ecx
    4130:	be 08 00 00 00       	mov    $0x8,%esi
    4135:	4c 89 e7             	mov    %r12,%rdi
    4138:	e8 43 ca 00 00       	call   10b80 <memcpy_verw_s>
    413d:	85 c0                	test   %eax,%eax
    413f:	75 cb                	jne    410c <ocall_print+0x6e>
    4141:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    4146:	48 89 e9             	mov    %rbp,%rcx
    4149:	48 89 da             	mov    %rbx,%rdx
    414c:	4c 89 ee             	mov    %r13,%rsi
    414f:	e8 2c ca 00 00       	call   10b80 <memcpy_verw_s>
    4154:	85 c0                	test   %eax,%eax
    4156:	75 b4                	jne    410c <ocall_print+0x6e>
    4158:	48 01 6c 24 18       	add    %rbp,0x18(%rsp)
    415d:	eb 06                	jmp    4165 <ocall_print+0xc7>
    415f:	31 c0                	xor    %eax,%eax
    4161:	49 89 04 24          	mov    %rax,(%r12)
    4165:	4c 89 e6             	mov    %r12,%rsi
    4168:	31 ff                	xor    %edi,%edi
    416a:	e8 81 2f 00 00       	call   70f0 <sgx_ocall>
    416f:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    4173:	e8 68 1a 00 00       	call   5be0 <sgx_ocfree>
    4178:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    417c:	48 83 c4 28          	add    $0x28,%rsp
    4180:	5b                   	pop    %rbx
    4181:	5d                   	pop    %rbp
    4182:	41 5c                	pop    %r12
    4184:	41 5d                	pop    %r13
    4186:	c3                   	ret    

0000000000004187 <ocall_print_address>:
    4187:	f3 0f 1e fa          	endbr64 
    418b:	41 55                	push   %r13
    418d:	41 54                	push   %r12
    418f:	45 31 e4             	xor    %r12d,%r12d
    4192:	55                   	push   %rbp
    4193:	53                   	push   %rbx
    4194:	48 89 fb             	mov    %rdi,%rbx
    4197:	48 83 ec 28          	sub    $0x28,%rsp
    419b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    41a0:	48 85 ff             	test   %rdi,%rdi
    41a3:	74 09                	je     41ae <ocall_print_address+0x27>
    41a5:	e8 06 c7 00 00       	call   108b0 <strlen>
    41aa:	4c 8d 60 01          	lea    0x1(%rax),%r12
    41ae:	31 c9                	xor    %ecx,%ecx
    41b0:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    41b5:	48 85 db             	test   %rbx,%rbx
    41b8:	74 1c                	je     41d6 <ocall_print_address+0x4f>
    41ba:	4c 89 e6             	mov    %r12,%rsi
    41bd:	48 89 df             	mov    %rbx,%rdi
    41c0:	4d 89 e5             	mov    %r12,%r13
    41c3:	e8 78 18 00 00       	call   5a40 <sgx_is_within_enclave>
    41c8:	85 c0                	test   %eax,%eax
    41ca:	75 0d                	jne    41d9 <ocall_print_address+0x52>
    41cc:	b8 02 00 00 00       	mov    $0x2,%eax
    41d1:	e9 b7 00 00 00       	jmp    428d <ocall_print_address+0x106>
    41d6:	45 31 ed             	xor    %r13d,%r13d
    41d9:	49 8d 7d 10          	lea    0x10(%r13),%rdi
    41dd:	4c 39 e7             	cmp    %r12,%rdi
    41e0:	73 05                	jae    41e7 <ocall_print_address+0x60>
    41e2:	48 85 db             	test   %rbx,%rbx
    41e5:	75 e5                	jne    41cc <ocall_print_address+0x45>
    41e7:	e8 14 19 00 00       	call   5b00 <sgx_ocalloc>
    41ec:	48 89 c5             	mov    %rax,%rbp
    41ef:	48 85 c0             	test   %rax,%rax
    41f2:	75 16                	jne    420a <ocall_print_address+0x83>
    41f4:	31 d2                	xor    %edx,%edx
    41f6:	48 89 54 24 18       	mov    %rdx,0x18(%rsp)
    41fb:	e8 e0 19 00 00       	call   5be0 <sgx_ocfree>
    4200:	b8 01 00 00 00       	mov    $0x1,%eax
    4205:	e9 83 00 00 00       	jmp    428d <ocall_print_address+0x106>
    420a:	48 8d 40 10          	lea    0x10(%rax),%rax
    420e:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4213:	48 85 db             	test   %rbx,%rbx
    4216:	74 39                	je     4251 <ocall_print_address+0xca>
    4218:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    421d:	b9 08 00 00 00       	mov    $0x8,%ecx
    4222:	be 08 00 00 00       	mov    $0x8,%esi
    4227:	48 89 ef             	mov    %rbp,%rdi
    422a:	e8 51 c9 00 00       	call   10b80 <memcpy_verw_s>
    422f:	85 c0                	test   %eax,%eax
    4231:	75 c8                	jne    41fb <ocall_print_address+0x74>
    4233:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    4238:	4c 89 e1             	mov    %r12,%rcx
    423b:	48 89 da             	mov    %rbx,%rdx
    423e:	4c 89 ee             	mov    %r13,%rsi
    4241:	e8 3a c9 00 00       	call   10b80 <memcpy_verw_s>
    4246:	85 c0                	test   %eax,%eax
    4248:	75 b1                	jne    41fb <ocall_print_address+0x74>
    424a:	4c 01 64 24 18       	add    %r12,0x18(%rsp)
    424f:	eb 06                	jmp    4257 <ocall_print_address+0xd0>
    4251:	31 c0                	xor    %eax,%eax
    4253:	48 89 45 00          	mov    %rax,0x0(%rbp)
    4257:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    425c:	48 8d 7d 08          	lea    0x8(%rbp),%rdi
    4260:	b9 08 00 00 00       	mov    $0x8,%ecx
    4265:	be 08 00 00 00       	mov    $0x8,%esi
    426a:	e8 11 c9 00 00       	call   10b80 <memcpy_verw_s>
    426f:	85 c0                	test   %eax,%eax
    4271:	75 88                	jne    41fb <ocall_print_address+0x74>
    4273:	48 89 ee             	mov    %rbp,%rsi
    4276:	bf 01 00 00 00       	mov    $0x1,%edi
    427b:	e8 70 2e 00 00       	call   70f0 <sgx_ocall>
    4280:	89 44 24 04          	mov    %eax,0x4(%rsp)
    4284:	e8 57 19 00 00       	call   5be0 <sgx_ocfree>
    4289:	8b 44 24 04          	mov    0x4(%rsp),%eax
    428d:	48 83 c4 28          	add    $0x28,%rsp
    4291:	5b                   	pop    %rbx
    4292:	5d                   	pop    %rbp
    4293:	41 5c                	pop    %r12
    4295:	41 5d                	pop    %r13
    4297:	c3                   	ret    
    4298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    429f:	00 

00000000000042a0 <register_value_select>:
    42a0:	89 f1                	mov    %esi,%ecx
    42a2:	31 c0                	xor    %eax,%eax
    42a4:	48 83 f9 00          	cmp    $0x0,%rcx
    42a8:	48 0f 44 07          	cmove  (%rdi),%rax
    42ac:	48 83 f9 01          	cmp    $0x1,%rcx
    42b0:	48 0f 44 47 08       	cmove  0x8(%rdi),%rax
    42b5:	48 83 f9 02          	cmp    $0x2,%rcx
    42b9:	48 0f 44 47 10       	cmove  0x10(%rdi),%rax
    42be:	48 83 f9 03          	cmp    $0x3,%rcx
    42c2:	48 0f 44 47 18       	cmove  0x18(%rdi),%rax
    42c7:	48 83 f9 04          	cmp    $0x4,%rcx
    42cb:	48 0f 44 47 20       	cmove  0x20(%rdi),%rax
    42d0:	48 83 f9 05          	cmp    $0x5,%rcx
    42d4:	48 0f 44 47 28       	cmove  0x28(%rdi),%rax
    42d9:	48 83 f9 06          	cmp    $0x6,%rcx
    42dd:	48 0f 44 47 30       	cmove  0x30(%rdi),%rax
    42e2:	48 83 f9 07          	cmp    $0x7,%rcx
    42e6:	48 0f 44 47 38       	cmove  0x38(%rdi),%rax
    42eb:	48 83 f9 08          	cmp    $0x8,%rcx
    42ef:	48 0f 44 47 40       	cmove  0x40(%rdi),%rax
    42f4:	48 83 f9 09          	cmp    $0x9,%rcx
    42f8:	48 0f 44 47 48       	cmove  0x48(%rdi),%rax
    42fd:	48 83 f9 0a          	cmp    $0xa,%rcx
    4301:	48 0f 44 47 50       	cmove  0x50(%rdi),%rax
    4306:	48 83 f9 0b          	cmp    $0xb,%rcx
    430a:	48 0f 44 47 58       	cmove  0x58(%rdi),%rax
    430f:	48 83 f9 0c          	cmp    $0xc,%rcx
    4313:	48 0f 44 47 60       	cmove  0x60(%rdi),%rax
    4318:	48 83 f9 0d          	cmp    $0xd,%rcx
    431c:	48 0f 44 47 68       	cmove  0x68(%rdi),%rax
    4321:	48 83 f9 0e          	cmp    $0xe,%rcx
    4325:	48 0f 44 47 70       	cmove  0x70(%rdi),%rax
    432a:	48 83 f9 0f          	cmp    $0xf,%rcx
    432e:	48 0f 44 47 78       	cmove  0x78(%rdi),%rax
    4333:	c3                   	ret    
    4334:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    433b:	00 00 00 
    433e:	66 90                	xchg   %ax,%ax

0000000000004340 <ct_decode>:
    4340:	f3 0f 1e fa          	endbr64 
    4344:	55                   	push   %rbp
    4345:	48 89 e5             	mov    %rsp,%rbp
    4348:	41 57                	push   %r15
    434a:	41 56                	push   %r14
    434c:	41 55                	push   %r13
    434e:	41 54                	push   %r12
    4350:	53                   	push   %rbx
    4351:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    4355:	48 81 ec 40 05 00 00 	sub    $0x540,%rsp
    435c:	48 89 7c 24 78       	mov    %rdi,0x78(%rsp)
    4361:	48 89 74 24 50       	mov    %rsi,0x50(%rsp)
    4366:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    436d:	00 00 
    436f:	48 89 84 24 38 05 00 	mov    %rax,0x538(%rsp)
    4376:	00 
    4377:	31 c0                	xor    %eax,%eax
    4379:	48 8d 84 24 00 01 00 	lea    0x100(%rsp),%rax
    4380:	00 
    4381:	f6 05 ab 3a 01 00 08 	testb  $0x8,0x13aab(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    4388:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    438d:	0f 84 fd 0f 00 00    	je     5390 <ct_decode+0x1050>
    4393:	62 f1 7c 48 29 00    	vmovaps %zmm0,(%rax)
    4399:	62 f1 7c 48 29 48 01 	vmovaps %zmm1,0x40(%rax)
    43a0:	62 f1 7c 48 29 50 02 	vmovaps %zmm2,0x80(%rax)
    43a7:	62 f1 7c 48 29 58 03 	vmovaps %zmm3,0xc0(%rax)
    43ae:	62 f1 7c 48 29 60 04 	vmovaps %zmm4,0x100(%rax)
    43b5:	62 f1 7c 48 29 68 05 	vmovaps %zmm5,0x140(%rax)
    43bc:	62 f1 7c 48 29 70 06 	vmovaps %zmm6,0x180(%rax)
    43c3:	62 f1 7c 48 29 78 07 	vmovaps %zmm7,0x1c0(%rax)
    43ca:	62 71 7c 48 29 40 08 	vmovaps %zmm8,0x200(%rax)
    43d1:	62 71 7c 48 29 48 09 	vmovaps %zmm9,0x240(%rax)
    43d8:	62 71 7c 48 29 50 0a 	vmovaps %zmm10,0x280(%rax)
    43df:	62 71 7c 48 29 58 0b 	vmovaps %zmm11,0x2c0(%rax)
    43e6:	62 71 7c 48 29 60 0c 	vmovaps %zmm12,0x300(%rax)
    43ed:	62 71 7c 48 29 68 0d 	vmovaps %zmm13,0x340(%rax)
    43f4:	62 71 7c 48 29 70 0e 	vmovaps %zmm14,0x380(%rax)
    43fb:	62 71 7c 48 29 78 0f 	vmovaps %zmm15,0x3c0(%rax)
    4402:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    4407:	31 c9                	xor    %ecx,%ecx
    4409:	ba f0 0f 00 00       	mov    $0xff0,%edx
    440e:	48 be f0 f0 f0 f0 f0 	movabs $0xf0f0f0f0f0f0f0f0,%rsi
    4415:	f0 f0 f0 
    4418:	c4 e1 f9 6e c6       	vmovq  %rsi,%xmm0
    441d:	c5 f9 6f 25 1b 3d 01 	vmovdqa 0x13d1b(%rip),%xmm4        # 18140 <standard>
    4424:	00 
    4425:	49 bb 80 80 80 80 80 	movabs $0x8080808080808080,%r11
    442c:	80 80 80 
    442f:	c4 e3 5d 38 25 07 3c 	vinserti128 $0x1,0x13c07(%rip),%ymm4,%ymm4        # 18040 <extended>
    4436:	01 00 01 
    4439:	4c 8b b7 88 00 00 00 	mov    0x88(%rdi),%r14
    4440:	c4 e2 7d 59 c0       	vpbroadcastq %xmm0,%ymm0
    4445:	c5 79 6f 2d 13 3d 01 	vmovdqa 0x13d13(%rip),%xmm13        # 18160 <standard+0x20>
    444c:	00 
    444d:	48 bf ff ff ff ff ff 	movabs $0xffffffffffff,%rdi
    4454:	ff 00 00 
    4457:	c4 63 15 38 2d ff 3b 	vinserti128 $0x1,0x13bff(%rip),%ymm13,%ymm13        # 18060 <extended+0x20>
    445e:	01 00 01 
    4461:	c5 79 6f 25 27 3d 01 	vmovdqa 0x13d27(%rip),%xmm12        # 18190 <standard+0x50>
    4468:	00 
    4469:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    446f:	41 b8 03 00 00 00    	mov    $0x3,%r8d
    4475:	4c 89 f0             	mov    %r14,%rax
    4478:	c5 79 6f 1d 20 3d 01 	vmovdqa 0x13d20(%rip),%xmm11        # 181a0 <standard+0x60>
    447f:	00 
    4480:	c4 63 1d 38 25 06 3c 	vinserti128 $0x1,0x13c06(%rip),%ymm12,%ymm12        # 18090 <extended+0x50>
    4487:	01 00 01 
    448a:	4c 89 74 24 68       	mov    %r14,0x68(%rsp)
    448f:	25 ff 0f 00 00       	and    $0xfff,%eax
    4494:	c5 79 6f 15 14 3d 01 	vmovdqa 0x13d14(%rip),%xmm10        # 181b0 <standard+0x70>
    449b:	00 
    449c:	c4 63 25 38 1d fa 3b 	vinserti128 $0x1,0x13bfa(%rip),%ymm11,%ymm11        # 180a0 <extended+0x60>
    44a3:	01 00 01 
    44a6:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    44ac:	c5 79 6f 0d 0c 3d 01 	vmovdqa 0x13d0c(%rip),%xmm9        # 181c0 <standard+0x80>
    44b3:	00 
    44b4:	c4 63 2d 38 15 f2 3b 	vinserti128 $0x1,0x13bf2(%rip),%ymm10,%ymm10        # 180b0 <extended+0x70>
    44bb:	01 00 01 
    44be:	0f 96 c1             	setbe  %cl
    44c1:	c5 79 6f 05 07 3d 01 	vmovdqa 0x13d07(%rip),%xmm8        # 181d0 <standard+0x90>
    44c8:	00 
    44c9:	c4 63 35 38 0d ed 3b 	vinserti128 $0x1,0x13bed(%rip),%ymm9,%ymm9        # 180c0 <extended+0x80>
    44d0:	01 00 01 
    44d3:	48 83 f9 00          	cmp    $0x0,%rcx
    44d7:	48 0f 45 d0          	cmovne %rax,%rdx
    44db:	31 c9                	xor    %ecx,%ecx
    44dd:	48 3d f0 0f 00 00    	cmp    $0xff0,%rax
    44e3:	c4 63 3d 38 05 e3 3b 	vinserti128 $0x1,0x13be3(%rip),%ymm8,%ymm8        # 180d0 <extended+0x90>
    44ea:	01 00 01 
    44ed:	c5 79 6f 3d 0b 3d 01 	vmovdqa 0x13d0b(%rip),%xmm15        # 18200 <standard+0xc0>
    44f4:	00 
    44f5:	0f 97 c1             	seta   %cl
    44f8:	45 31 e4             	xor    %r12d,%r12d
    44fb:	2d f0 0f 00 00       	sub    $0xff0,%eax
    4500:	44 89 e3             	mov    %r12d,%ebx
    4503:	45 89 e7             	mov    %r12d,%r15d
    4506:	48 83 f9 00          	cmp    $0x0,%rcx
    450a:	0f 45 d8             	cmovne %eax,%ebx
    450d:	4c 89 f0             	mov    %r14,%rax
    4510:	89 5c 24 4c          	mov    %ebx,0x4c(%rsp)
    4514:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    451a:	48 09 d0             	or     %rdx,%rax
    451d:	c5 fa 6f 28          	vmovdqu (%rax),%xmm5
    4521:	48 63 c3             	movslq %ebx,%rax
    4524:	bb 02 00 00 00       	mov    $0x2,%ebx
    4529:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    452e:	b8 10 00 00 00       	mov    $0x10,%eax
    4533:	41 89 de             	mov    %ebx,%r14d
    4536:	c5 d1 f3 ef          	vpsllq %xmm7,%xmm5,%xmm5
    453a:	c4 c1 f9 6e fb       	vmovq  %r11,%xmm7
    453f:	c4 e2 7d 59 df       	vpbroadcastq %xmm7,%ymm3
    4544:	c4 e2 7d 59 cd       	vpbroadcastq %xmm5,%ymm1
    4549:	c4 e1 f9 7e ea       	vmovq  %xmm5,%rdx
    454e:	c5 fd df d1          	vpandn %ymm1,%ymm0,%ymm2
    4552:	c5 f5 db c8          	vpand  %ymm0,%ymm1,%ymm1
    4556:	c5 f9 ef c0          	vpxor  %xmm0,%xmm0,%xmm0
    455a:	49 89 d2             	mov    %rdx,%r10
    455d:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    4561:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    4565:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4569:	c4 62 5d 00 f0       	vpshufb %ymm0,%ymm4,%ymm14
    456e:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    4572:	c5 f9 6f 25 d6 3b 01 	vmovdqa 0x13bd6(%rip),%xmm4        # 18150 <standard+0x10>
    4579:	00 
    457a:	c4 e3 5d 38 25 cc 3a 	vinserti128 $0x1,0x13acc(%rip),%ymm4,%ymm4        # 18050 <extended+0x10>
    4581:	01 00 01 
    4584:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4589:	b8 20 00 00 00       	mov    $0x20,%eax
    458e:	c5 7d 7f b4 24 a0 00 	vmovdqa %ymm14,0xa0(%rsp)
    4595:	00 00 
    4597:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    459b:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    459f:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    45a3:	c4 e2 5d 00 f8       	vpshufb %ymm0,%ymm4,%ymm7
    45a8:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    45ac:	b8 30 00 00 00       	mov    $0x30,%eax
    45b1:	c5 f9 6f 25 b7 3b 01 	vmovdqa 0x13bb7(%rip),%xmm4        # 18170 <standard+0x30>
    45b8:	00 
    45b9:	c4 e3 5d 38 25 ad 3a 	vinserti128 $0x1,0x13aad(%rip),%ymm4,%ymm4        # 18070 <extended+0x30>
    45c0:	01 00 01 
    45c3:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    45c8:	c5 fd 7f bc 24 e0 00 	vmovdqa %ymm7,0xe0(%rsp)
    45cf:	00 00 
    45d1:	c5 f9 6f 3d 07 3c 01 	vmovdqa 0x13c07(%rip),%xmm7        # 181e0 <standard+0xa0>
    45d8:	00 
    45d9:	c4 e3 45 38 3d fd 3a 	vinserti128 $0x1,0x13afd(%rip),%ymm7,%ymm7        # 180e0 <extended+0xa0>
    45e0:	01 00 01 
    45e3:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    45e7:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    45eb:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    45ef:	c4 62 15 00 e8       	vpshufb %ymm0,%ymm13,%ymm13
    45f4:	c5 f9 6e c0          	vmovd  %eax,%xmm0
    45f8:	b8 40 00 00 00       	mov    $0x40,%eax
    45fd:	c4 e2 7d 78 c0       	vpbroadcastb %xmm0,%ymm0
    4602:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4606:	b8 50 00 00 00       	mov    $0x50,%eax
    460b:	c5 f5 74 c0          	vpcmpeqb %ymm0,%ymm1,%ymm0
    460f:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    4614:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4618:	c5 fd df c3          	vpandn %ymm3,%ymm0,%ymm0
    461c:	c5 fd eb c2          	vpor   %ymm2,%ymm0,%ymm0
    4620:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4624:	c4 e2 5d 00 e0       	vpshufb %ymm0,%ymm4,%ymm4
    4629:	c5 f9 6f 05 4f 3b 01 	vmovdqa 0x13b4f(%rip),%xmm0        # 18180 <standard+0x40>
    4630:	00 
    4631:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4635:	c4 e3 7d 38 05 41 3a 	vinserti128 $0x1,0x13a41(%rip),%ymm0,%ymm0        # 18080 <extended+0x40>
    463c:	01 00 01 
    463f:	c4 e1 f9 7e e1       	vmovq  %xmm4,%rcx
    4644:	c4 e3 7d 39 e4 01    	vextracti128 $0x1,%ymm4,%xmm4
    464a:	c4 e2 7d 00 c6       	vpshufb %ymm6,%ymm0,%ymm0
    464f:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4653:	b8 60 00 00 00       	mov    $0x60,%eax
    4658:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    465d:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4661:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4665:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4669:	c4 62 1d 00 e6       	vpshufb %ymm6,%ymm12,%ymm12
    466e:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4672:	b8 70 00 00 00       	mov    $0x70,%eax
    4677:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    467c:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4680:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4684:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4688:	c4 62 25 00 de       	vpshufb %ymm6,%ymm11,%ymm11
    468d:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    4691:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    4696:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    469b:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    469f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    46a3:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    46a7:	c4 62 2d 00 d6       	vpshufb %ymm6,%ymm10,%ymm10
    46ac:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    46b0:	b8 90 ff ff ff       	mov    $0xffffff90,%eax
    46b5:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    46ba:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    46be:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    46c2:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    46c6:	c4 62 35 00 ce       	vpshufb %ymm6,%ymm9,%ymm9
    46cb:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    46cf:	b8 a0 ff ff ff       	mov    $0xffffffa0,%eax
    46d4:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    46d9:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    46dd:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    46e1:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    46e5:	c4 62 3d 00 c6       	vpshufb %ymm6,%ymm8,%ymm8
    46ea:	c5 f9 6e f0          	vmovd  %eax,%xmm6
    46ee:	b8 b0 ff ff ff       	mov    $0xffffffb0,%eax
    46f3:	c4 e2 7d 78 f6       	vpbroadcastb %xmm6,%ymm6
    46f8:	c5 79 6e f0          	vmovd  %eax,%xmm14
    46fc:	b8 c0 ff ff ff       	mov    $0xffffffc0,%eax
    4701:	c5 f5 74 f6          	vpcmpeqb %ymm6,%ymm1,%ymm6
    4705:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    470a:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    470f:	c5 cd df f3          	vpandn %ymm3,%ymm6,%ymm6
    4713:	c5 cd eb f2          	vpor   %ymm2,%ymm6,%ymm6
    4717:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    471b:	c4 e2 45 00 fe       	vpshufb %ymm6,%ymm7,%ymm7
    4720:	c5 f9 6f 35 c8 3a 01 	vmovdqa 0x13ac8(%rip),%xmm6        # 181f0 <standard+0xb0>
    4727:	00 
    4728:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    472c:	c4 e3 4d 38 35 ba 39 	vinserti128 $0x1,0x139ba(%rip),%ymm6,%ymm6        # 180f0 <extended+0xb0>
    4733:	01 00 01 
    4736:	c4 63 05 38 3d c0 39 	vinserti128 $0x1,0x139c0(%rip),%ymm15,%ymm15        # 18100 <extended+0xc0>
    473d:	01 00 01 
    4740:	c4 c2 4d 00 f6       	vpshufb %ymm14,%ymm6,%ymm6
    4745:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4749:	b8 d0 ff ff ff       	mov    $0xffffffd0,%eax
    474e:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    4753:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4758:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    475c:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    4760:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    4765:	c5 79 6e f0          	vmovd  %eax,%xmm14
    4769:	b8 e0 ff ff ff       	mov    $0xffffffe0,%eax
    476e:	c5 7d 7f bc 24 c0 00 	vmovdqa %ymm15,0xc0(%rsp)
    4775:	00 00 
    4777:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    477c:	c5 79 6f 3d 8c 3a 01 	vmovdqa 0x13a8c(%rip),%xmm15        # 18210 <standard+0xd0>
    4783:	00 
    4784:	c4 63 05 38 3d 82 39 	vinserti128 $0x1,0x13982(%rip),%ymm15,%ymm15        # 18110 <extended+0xd0>
    478b:	01 00 01 
    478e:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    4793:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    4797:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    479b:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    47a0:	c5 79 6e f0          	vmovd  %eax,%xmm14
    47a4:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    47a9:	c5 7d 7f bc 24 80 00 	vmovdqa %ymm15,0x80(%rsp)
    47b0:	00 00 
    47b2:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    47b7:	c5 79 6f 3d 61 3a 01 	vmovdqa 0x13a61(%rip),%xmm15        # 18220 <standard+0xe0>
    47be:	00 
    47bf:	c4 63 05 38 3d 57 39 	vinserti128 $0x1,0x13957(%rip),%ymm15,%ymm15        # 18120 <extended+0xe0>
    47c6:	01 00 01 
    47c9:	c4 41 75 74 f6       	vpcmpeqb %ymm14,%ymm1,%ymm14
    47ce:	c5 0d df f3          	vpandn %ymm3,%ymm14,%ymm14
    47d2:	c5 0d eb f2          	vpor   %ymm2,%ymm14,%ymm14
    47d6:	c4 42 05 00 fe       	vpshufb %ymm14,%ymm15,%ymm15
    47db:	c5 79 6e f0          	vmovd  %eax,%xmm14
    47df:	c4 61 f9 7e e8       	vmovq  %xmm13,%rax
    47e4:	48 09 c8             	or     %rcx,%rax
    47e7:	c4 42 7d 78 f6       	vpbroadcastb %xmm14,%ymm14
    47ec:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    47f1:	48 09 c8             	or     %rcx,%rax
    47f4:	c4 c1 75 74 ce       	vpcmpeqb %ymm14,%ymm1,%ymm1
    47f9:	c4 61 f9 7e e1       	vmovq  %xmm12,%rcx
    47fe:	c5 7d 6f b4 24 a0 00 	vmovdqa 0xa0(%rsp),%ymm14
    4805:	00 00 
    4807:	48 09 c8             	or     %rcx,%rax
    480a:	c4 61 f9 7e d9       	vmovq  %xmm11,%rcx
    480f:	c4 43 7d 39 ed 01    	vextracti128 $0x1,%ymm13,%xmm13
    4815:	48 09 c8             	or     %rcx,%rax
    4818:	c4 61 f9 7e d1       	vmovq  %xmm10,%rcx
    481d:	c5 91 eb e4          	vpor   %xmm4,%xmm13,%xmm4
    4821:	48 09 c8             	or     %rcx,%rax
    4824:	c5 f5 df cb          	vpandn %ymm3,%ymm1,%ymm1
    4828:	c4 61 f9 7e c9       	vmovq  %xmm9,%rcx
    482d:	c5 f9 6f 1d fb 39 01 	vmovdqa 0x139fb(%rip),%xmm3        # 18230 <standard+0xf0>
    4834:	00 
    4835:	c5 f5 eb ca          	vpor   %ymm2,%ymm1,%ymm1
    4839:	48 09 c8             	or     %rcx,%rax
    483c:	c4 61 f9 7e c1       	vmovq  %xmm8,%rcx
    4841:	48 09 c8             	or     %rcx,%rax
    4844:	c4 e1 f9 7e f9       	vmovq  %xmm7,%rcx
    4849:	c4 e3 65 38 1d dd 38 	vinserti128 $0x1,0x138dd(%rip),%ymm3,%ymm3        # 18130 <extended+0xf0>
    4850:	01 00 01 
    4853:	48 09 c8             	or     %rcx,%rax
    4856:	c4 e1 f9 7e f1       	vmovq  %xmm6,%rcx
    485b:	c4 61 f9 7e f6       	vmovq  %xmm14,%rsi
    4860:	c4 e2 65 00 d9       	vpshufb %ymm1,%ymm3,%ymm3
    4865:	48 09 c8             	or     %rcx,%rax
    4868:	c5 f9 6f 8c 24 c0 00 	vmovdqa 0xc0(%rsp),%xmm1
    486f:	00 00 
    4871:	c4 e3 7d 39 c0 01    	vextracti128 $0x1,%ymm0,%xmm0
    4877:	c5 d9 eb c0          	vpor   %xmm0,%xmm4,%xmm0
    487b:	c4 43 7d 39 e4 01    	vextracti128 $0x1,%ymm12,%xmm12
    4881:	c4 43 7d 39 db 01    	vextracti128 $0x1,%ymm11,%xmm11
    4887:	c5 fd 6f a4 24 c0 00 	vmovdqa 0xc0(%rsp),%ymm4
    488e:	00 00 
    4890:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    4895:	c4 c1 79 eb c4       	vpor   %xmm12,%xmm0,%xmm0
    489a:	c5 f9 6f 8c 24 80 00 	vmovdqa 0x80(%rsp),%xmm1
    48a1:	00 00 
    48a3:	c4 43 7d 39 d2 01    	vextracti128 $0x1,%ymm10,%xmm10
    48a9:	48 09 c8             	or     %rcx,%rax
    48ac:	c4 c1 79 eb c3       	vpor   %xmm11,%xmm0,%xmm0
    48b1:	c4 43 7d 39 c9 01    	vextracti128 $0x1,%ymm9,%xmm9
    48b7:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    48bc:	c4 c1 79 eb c2       	vpor   %xmm10,%xmm0,%xmm0
    48c1:	c5 f9 6f 8c 24 e0 00 	vmovdqa 0xe0(%rsp),%xmm1
    48c8:	00 00 
    48ca:	c4 43 7d 39 c0 01    	vextracti128 $0x1,%ymm8,%xmm8
    48d0:	48 09 c8             	or     %rcx,%rax
    48d3:	c4 61 f9 7e f9       	vmovq  %xmm15,%rcx
    48d8:	c4 c1 79 eb c1       	vpor   %xmm9,%xmm0,%xmm0
    48dd:	48 09 c8             	or     %rcx,%rax
    48e0:	c4 e1 f9 7e d9       	vmovq  %xmm3,%rcx
    48e5:	c4 c1 79 eb c0       	vpor   %xmm8,%xmm0,%xmm0
    48ea:	48 09 c8             	or     %rcx,%rax
    48ed:	c4 e1 f9 7e c9       	vmovq  %xmm1,%rcx
    48f2:	c4 e3 7d 39 ff 01    	vextracti128 $0x1,%ymm7,%xmm7
    48f8:	48 09 f1             	or     %rsi,%rcx
    48fb:	be 0f 00 00 00       	mov    $0xf,%esi
    4900:	c5 f9 eb c7          	vpor   %xmm7,%xmm0,%xmm0
    4904:	c5 fd 6f bc 24 e0 00 	vmovdqa 0xe0(%rsp),%ymm7
    490b:	00 00 
    490d:	48 09 c8             	or     %rcx,%rax
    4910:	c4 e3 7d 39 f6 01    	vextracti128 $0x1,%ymm6,%xmm6
    4916:	c4 43 7d 39 ff 01    	vextracti128 $0x1,%ymm15,%xmm15
    491c:	48 21 c7             	and    %rax,%rdi
    491f:	25 c0 00 00 00       	and    $0xc0,%eax
    4924:	c5 f9 eb c6          	vpor   %xmm6,%xmm0,%xmm0
    4928:	48 83 f8 7f          	cmp    $0x7f,%rax
    492c:	49 89 f9             	mov    %rdi,%r9
    492f:	c4 e3 7d 39 db 01    	vextracti128 $0x1,%ymm3,%xmm3
    4935:	0f 97 c0             	seta   %al
    4938:	0f b6 c0             	movzbl %al,%eax
    493b:	48 83 f8 00          	cmp    $0x0,%rax
    493f:	41 0f 45 f4          	cmovne %r12d,%esi
    4943:	48 89 f8             	mov    %rdi,%rax
    4946:	89 f1                	mov    %esi,%ecx
    4948:	48 c1 e8 08          	shr    $0x8,%rax
    494c:	25 c0 00 00 00       	and    $0xc0,%eax
    4951:	48 83 f8 7f          	cmp    $0x7f,%rax
    4955:	0f 97 c0             	seta   %al
    4958:	c1 e1 08             	shl    $0x8,%ecx
    495b:	0f b6 c0             	movzbl %al,%eax
    495e:	09 c8                	or     %ecx,%eax
    4960:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4965:	0f 94 c0             	sete   %al
    4968:	0f b6 c0             	movzbl %al,%eax
    496b:	48 83 f8 00          	cmp    $0x0,%rax
    496f:	41 0f 45 f5          	cmovne %r13d,%esi
    4973:	48 89 f8             	mov    %rdi,%rax
    4976:	89 f1                	mov    %esi,%ecx
    4978:	48 c1 e8 10          	shr    $0x10,%rax
    497c:	25 c0 00 00 00       	and    $0xc0,%eax
    4981:	48 83 f8 7f          	cmp    $0x7f,%rax
    4985:	0f 97 c0             	seta   %al
    4988:	c1 e1 08             	shl    $0x8,%ecx
    498b:	0f b6 c0             	movzbl %al,%eax
    498e:	09 c8                	or     %ecx,%eax
    4990:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4995:	0f 94 c0             	sete   %al
    4998:	0f b6 c0             	movzbl %al,%eax
    499b:	48 83 f8 00          	cmp    $0x0,%rax
    499f:	0f 45 f3             	cmovne %ebx,%esi
    49a2:	48 89 f8             	mov    %rdi,%rax
    49a5:	89 f1                	mov    %esi,%ecx
    49a7:	bb 04 00 00 00       	mov    $0x4,%ebx
    49ac:	48 c1 e8 18          	shr    $0x18,%rax
    49b0:	25 c0 00 00 00       	and    $0xc0,%eax
    49b5:	48 83 f8 7f          	cmp    $0x7f,%rax
    49b9:	0f 97 c0             	seta   %al
    49bc:	c1 e1 08             	shl    $0x8,%ecx
    49bf:	0f b6 c0             	movzbl %al,%eax
    49c2:	09 c8                	or     %ecx,%eax
    49c4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    49c9:	0f 94 c0             	sete   %al
    49cc:	0f b6 c0             	movzbl %al,%eax
    49cf:	48 83 f8 00          	cmp    $0x0,%rax
    49d3:	41 0f 45 f0          	cmovne %r8d,%esi
    49d7:	48 89 f8             	mov    %rdi,%rax
    49da:	89 f1                	mov    %esi,%ecx
    49dc:	48 c1 e8 20          	shr    $0x20,%rax
    49e0:	25 c0 00 00 00       	and    $0xc0,%eax
    49e5:	48 83 f8 7f          	cmp    $0x7f,%rax
    49e9:	0f 97 c0             	seta   %al
    49ec:	c1 e1 08             	shl    $0x8,%ecx
    49ef:	0f b6 c0             	movzbl %al,%eax
    49f2:	09 c8                	or     %ecx,%eax
    49f4:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    49f9:	0f 94 c0             	sete   %al
    49fc:	0f b6 c0             	movzbl %al,%eax
    49ff:	48 83 f8 00          	cmp    $0x0,%rax
    4a03:	0f 45 f3             	cmovne %ebx,%esi
    4a06:	48 89 f8             	mov    %rdi,%rax
    4a09:	89 f1                	mov    %esi,%ecx
    4a0b:	48 c1 e8 28          	shr    $0x28,%rax
    4a0f:	25 c0 00 00 00       	and    $0xc0,%eax
    4a14:	48 83 f8 7f          	cmp    $0x7f,%rax
    4a18:	0f 97 c0             	seta   %al
    4a1b:	c1 e1 08             	shl    $0x8,%ecx
    4a1e:	0f b6 c0             	movzbl %al,%eax
    4a21:	09 c8                	or     %ecx,%eax
    4a23:	31 c9                	xor    %ecx,%ecx
    4a25:	3d 01 0f 00 00       	cmp    $0xf01,%eax
    4a2a:	b8 05 00 00 00       	mov    $0x5,%eax
    4a2f:	0f 94 c1             	sete   %cl
    4a32:	48 83 f9 00          	cmp    $0x0,%rcx
    4a36:	0f 45 f0             	cmovne %eax,%esi
    4a39:	8d 0c f5 00 00 00 00 	lea    0x0(,%rsi,8),%ecx
    4a40:	49 d3 e9             	shr    %cl,%r9
    4a43:	49 d3 ea             	shr    %cl,%r10
    4a46:	4c 89 d1             	mov    %r10,%rcx
    4a49:	45 89 ca             	mov    %r9d,%r10d
    4a4c:	4c 89 cb             	mov    %r9,%rbx
    4a4f:	48 89 4c 24 70       	mov    %rcx,0x70(%rsp)
    4a54:	41 c0 ea 02          	shr    $0x2,%r10b
    4a58:	31 c9                	xor    %ecx,%ecx
    4a5a:	80 7c 24 70 0f       	cmpb   $0xf,0x70(%rsp)
    4a5f:	0f 94 c1             	sete   %cl
    4a62:	44 88 94 24 a0 00 00 	mov    %r10b,0xa0(%rsp)
    4a69:	00 
    4a6a:	45 89 e2             	mov    %r12d,%r10d
    4a6d:	48 83 f9 00          	cmp    $0x0,%rcx
    4a71:	45 0f 45 fd          	cmovne %r13d,%r15d
    4a75:	44 89 c9             	mov    %r9d,%ecx
    4a78:	45 31 c9             	xor    %r9d,%r9d
    4a7b:	83 e1 f0             	and    $0xfffffff0,%ecx
    4a7e:	80 f9 a0             	cmp    $0xa0,%cl
    4a81:	41 0f 94 c1          	sete   %r9b
    4a85:	49 83 f9 00          	cmp    $0x0,%r9
    4a89:	45 0f 45 d5          	cmovne %r13d,%r10d
    4a8d:	80 f9 b0             	cmp    $0xb0,%cl
    4a90:	45 89 e1             	mov    %r12d,%r9d
    4a93:	44 89 54 24 48       	mov    %r10d,0x48(%rsp)
    4a98:	0f 94 c1             	sete   %cl
    4a9b:	29 f0                	sub    %esi,%eax
    4a9d:	45 31 d2             	xor    %r10d,%r10d
    4aa0:	0f b6 c9             	movzbl %cl,%ecx
    4aa3:	48 83 f9 00          	cmp    $0x0,%rcx
    4aa7:	45 0f 45 cd          	cmovne %r13d,%r9d
    4aab:	8d 0c c5 00 00 00 00 	lea    0x0(,%rax,8),%ecx
    4ab2:	44 89 4c 24 3c       	mov    %r9d,0x3c(%rsp)
    4ab7:	48 b8 ff ff ff ff ff 	movabs $0xffffffffff,%rax
    4abe:	00 00 00 
    4ac1:	48 d3 f8             	sar    %cl,%rax
    4ac4:	8d 0c f5 f8 ff ff ff 	lea    -0x8(,%rsi,8),%ecx
    4acb:	48 21 f8             	and    %rdi,%rax
    4ace:	49 89 c1             	mov    %rax,%r9
    4ad1:	c4 e1 f9 6e d0       	vmovq  %rax,%xmm2
    4ad6:	49 d3 e9             	shr    %cl,%r9
    4ad9:	c4 c1 f9 6e c9       	vmovq  %r9,%xmm1
    4ade:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    4ae5:	c4 c3 f1 22 c9 01    	vpinsrq $0x1,%r9,%xmm1,%xmm1
    4aeb:	c5 f1 74 0d 2d e5 00 	vpcmpeqb 0xe52d(%rip),%xmm1,%xmm1        # 13020 <g_dyn_entry_table+0x10>
    4af2:	00 
    4af3:	c4 e1 f9 7e cf       	vmovq  %xmm1,%rdi
    4af8:	c4 c3 e9 22 c9 01    	vpinsrq $0x1,%r9,%xmm2,%xmm1
    4afe:	45 89 e9             	mov    %r13d,%r9d
    4b01:	c5 f1 74 15 27 e5 00 	vpcmpeqb 0xe527(%rip),%xmm1,%xmm2        # 13030 <g_dyn_entry_table+0x20>
    4b08:	00 
    4b09:	48 85 ff             	test   %rdi,%rdi
    4b0c:	44 89 ef             	mov    %r13d,%edi
    4b0f:	41 0f 94 c2          	sete   %r10b
    4b13:	48 d3 ea             	shr    %cl,%rdx
    4b16:	44 89 e1             	mov    %r12d,%ecx
    4b19:	49 83 fa 00          	cmp    $0x0,%r10
    4b1d:	41 0f 45 fc          	cmovne %r12d,%edi
    4b21:	c4 e1 f9 7e d0       	vmovq  %xmm2,%rax
    4b26:	c5 f1 74 15 12 e5 00 	vpcmpeqb 0xe512(%rip),%xmm1,%xmm2        # 13040 <g_dyn_entry_table+0x30>
    4b2d:	00 
    4b2e:	83 e2 4f             	and    $0x4f,%edx
    4b31:	89 ff                	mov    %edi,%edi
    4b33:	48 83 ff 00          	cmp    $0x0,%rdi
    4b37:	0f 45 ca             	cmovne %edx,%ecx
    4b3a:	31 d2                	xor    %edx,%edx
    4b3c:	48 85 c0             	test   %rax,%rax
    4b3f:	44 89 e8             	mov    %r13d,%eax
    4b42:	89 4c 24 38          	mov    %ecx,0x38(%rsp)
    4b46:	0f 94 c2             	sete   %dl
    4b49:	44 89 e9             	mov    %r13d,%ecx
    4b4c:	48 83 fa 00          	cmp    $0x0,%rdx
    4b50:	41 0f 45 c4          	cmovne %r12d,%eax
    4b54:	89 c2                	mov    %eax,%edx
    4b56:	44 89 e0             	mov    %r12d,%eax
    4b59:	48 83 fa 00          	cmp    $0x0,%rdx
    4b5d:	41 0f 45 c5          	cmovne %r13d,%eax
    4b61:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4b66:	c5 f1 74 15 e2 e4 00 	vpcmpeqb 0xe4e2(%rip),%xmm1,%xmm2        # 13050 <g_dyn_entry_table+0x40>
    4b6d:	00 
    4b6e:	48 85 d2             	test   %rdx,%rdx
    4b71:	0f 94 c2             	sete   %dl
    4b74:	0f b6 d2             	movzbl %dl,%edx
    4b77:	48 83 fa 00          	cmp    $0x0,%rdx
    4b7b:	45 0f 45 cc          	cmovne %r12d,%r9d
    4b7f:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4b84:	c5 f1 74 15 d4 e4 00 	vpcmpeqb 0xe4d4(%rip),%xmm1,%xmm2        # 13060 <g_dyn_entry_table+0x50>
    4b8b:	00 
    4b8c:	44 89 4c 24 34       	mov    %r9d,0x34(%rsp)
    4b91:	49 b9 00 80 80 80 80 	movabs $0x8080808080808000,%r9
    4b98:	80 80 80 
    4b9b:	48 85 d2             	test   %rdx,%rdx
    4b9e:	c5 f1 74 0d ca e4 00 	vpcmpeqb 0xe4ca(%rip),%xmm1,%xmm1        # 13070 <g_dyn_entry_table+0x60>
    4ba5:	00 
    4ba6:	0f 94 c2             	sete   %dl
    4ba9:	0f b6 d2             	movzbl %dl,%edx
    4bac:	48 83 fa 00          	cmp    $0x0,%rdx
    4bb0:	41 0f 45 cc          	cmovne %r12d,%ecx
    4bb4:	c4 e1 f9 7e d2       	vmovq  %xmm2,%rdx
    4bb9:	89 4c 24 30          	mov    %ecx,0x30(%rsp)
    4bbd:	31 c9                	xor    %ecx,%ecx
    4bbf:	c4 63 7d 39 f2 01    	vextracti128 $0x1,%ymm14,%xmm2
    4bc5:	48 85 d2             	test   %rdx,%rdx
    4bc8:	44 89 ea             	mov    %r13d,%edx
    4bcb:	0f 94 c1             	sete   %cl
    4bce:	48 83 f9 00          	cmp    $0x0,%rcx
    4bd2:	41 0f 45 d4          	cmovne %r12d,%edx
    4bd6:	89 d2                	mov    %edx,%edx
    4bd8:	31 c9                	xor    %ecx,%ecx
    4bda:	48 83 fa 00          	cmp    $0x0,%rdx
    4bde:	41 0f 45 c0          	cmovne %r8d,%eax
    4be2:	c4 e1 f9 7e ca       	vmovq  %xmm1,%rdx
    4be7:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4bed:	41 89 c0             	mov    %eax,%r8d
    4bf0:	c5 fd 6f a4 24 80 00 	vmovdqa 0x80(%rsp),%ymm4
    4bf7:	00 00 
    4bf9:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4bfd:	48 85 d2             	test   %rdx,%rdx
    4c00:	44 89 ea             	mov    %r13d,%edx
    4c03:	c4 e3 7d 39 e1 01    	vextracti128 $0x1,%ymm4,%xmm1
    4c09:	0f 94 c1             	sete   %cl
    4c0c:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4c10:	c4 e3 7d 39 f9 01    	vextracti128 $0x1,%ymm7,%xmm1
    4c16:	c4 c1 79 eb c7       	vpor   %xmm15,%xmm0,%xmm0
    4c1b:	c5 f1 eb ca          	vpor   %xmm2,%xmm1,%xmm1
    4c1f:	c5 f9 eb c3          	vpor   %xmm3,%xmm0,%xmm0
    4c23:	c5 f9 eb c1          	vpor   %xmm1,%xmm0,%xmm0
    4c27:	48 83 f9 00          	cmp    $0x0,%rcx
    4c2b:	41 0f 45 d4          	cmovne %r12d,%edx
    4c2f:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4c34:	8d 0c f5 08 00 00 00 	lea    0x8(,%rsi,8),%ecx
    4c3b:	89 d2                	mov    %edx,%edx
    4c3d:	44 01 fe             	add    %r15d,%esi
    4c40:	48 d3 f8             	sar    %cl,%rax
    4c43:	44 89 f9             	mov    %r15d,%ecx
    4c46:	48 83 fa 00          	cmp    $0x0,%rdx
    4c4a:	45 0f 45 c6          	cmovne %r14d,%r8d
    4c4e:	89 c2                	mov    %eax,%edx
    4c50:	44 89 44 24 5c       	mov    %r8d,0x5c(%rsp)
    4c55:	41 89 f0             	mov    %esi,%r8d
    4c58:	45 89 e6             	mov    %r12d,%r14d
    4c5b:	c0 ea 04             	shr    $0x4,%dl
    4c5e:	41 89 d2             	mov    %edx,%r10d
    4c61:	8b 94 24 a0 00 00 00 	mov    0xa0(%rsp),%edx
    4c68:	89 b4 24 e0 00 00 00 	mov    %esi,0xe0(%rsp)
    4c6f:	41 83 e2 03          	and    $0x3,%r10d
    4c73:	48 89 5c 24 40       	mov    %rbx,0x40(%rsp)
    4c78:	83 e2 03             	and    $0x3,%edx
    4c7b:	48 83 f9 00          	cmp    $0x0,%rcx
    4c7f:	41 0f 45 d2          	cmovne %r10d,%edx
    4c83:	41 8d 48 01          	lea    0x1(%r8),%ecx
    4c87:	0f b6 c9             	movzbl %cl,%ecx
    4c8a:	4c 09 c9             	or     %r9,%rcx
    4c8d:	c4 e1 f9 6e f9       	vmovq  %rcx,%xmm7
    4c92:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4c98:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4c9d:	c4 e1 f9 7e c1       	vmovq  %xmm0,%rcx
    4ca2:	89 ce                	mov    %ecx,%esi
    4ca4:	41 89 c8             	mov    %ecx,%r8d
    4ca7:	40 c0 ee 03          	shr    $0x3,%sil
    4cab:	41 c0 e8 06          	shr    $0x6,%r8b
    4caf:	89 f7                	mov    %esi,%edi
    4cb1:	44 88 44 24 64       	mov    %r8b,0x64(%rsp)
    4cb6:	83 e7 07             	and    $0x7,%edi
    4cb9:	40 88 7c 24 60       	mov    %dil,0x60(%rsp)
    4cbe:	89 cf                	mov    %ecx,%edi
    4cc0:	83 e1 c7             	and    $0xffffffc7,%ecx
    4cc3:	88 8c 24 c0 00 00 00 	mov    %cl,0xc0(%rsp)
    4cca:	83 e7 07             	and    $0x7,%edi
    4ccd:	31 c9                	xor    %ecx,%ecx
    4ccf:	41 80 f8 03          	cmp    $0x3,%r8b
    4cd3:	41 89 d8             	mov    %ebx,%r8d
    4cd6:	0f 95 c1             	setne  %cl
    4cd9:	40 88 bc 24 80 00 00 	mov    %dil,0x80(%rsp)
    4ce0:	00 
    4ce1:	83 e6 07             	and    $0x7,%esi
    4ce4:	41 83 e0 30          	and    $0x30,%r8d
    4ce8:	01 f6                	add    %esi,%esi
    4cea:	48 83 f9 00          	cmp    $0x0,%rcx
    4cee:	45 0f 45 f5          	cmovne %r13d,%r14d
    4cf2:	44 89 c1             	mov    %r8d,%ecx
    4cf5:	41 89 d8             	mov    %ebx,%r8d
    4cf8:	31 db                	xor    %ebx,%ebx
    4cfa:	41 c0 e8 06          	shr    $0x6,%r8b
    4cfe:	41 0f b6 f8          	movzbl %r8b,%edi
    4d02:	49 b8 aa 6a aa aa a5 	movabs $0x155a55a5aaaa6aaa,%r8
    4d09:	55 5a 15 
    4d0c:	40 80 ff 03          	cmp    $0x3,%dil
    4d10:	0f 94 c3             	sete   %bl
    4d13:	01 f1                	add    %esi,%ecx
    4d15:	49 d3 e8             	shr    %cl,%r8
    4d18:	0f b6 4c 24 60       	movzbl 0x60(%rsp),%ecx
    4d1d:	41 83 e0 03          	and    $0x3,%r8d
    4d21:	48 83 fb 00          	cmp    $0x0,%rbx
    4d25:	41 0f 45 d0          	cmovne %r8d,%edx
    4d29:	41 b8 4c 00 00 00    	mov    $0x4c,%r8d
    4d2f:	44 89 e3             	mov    %r12d,%ebx
    4d32:	49 d3 e8             	shr    %cl,%r8
    4d35:	0f b6 4c 24 70       	movzbl 0x70(%rsp),%ecx
    4d3a:	41 83 e0 01          	and    $0x1,%r8d
    4d3e:	c1 e1 04             	shl    $0x4,%ecx
    4d41:	49 83 f8 00          	cmp    $0x0,%r8
    4d45:	41 0f 45 dd          	cmovne %r13d,%ebx
    4d49:	01 df                	add    %ebx,%edi
    4d4b:	45 89 e0             	mov    %r12d,%r8d
    4d4e:	09 f9                	or     %edi,%ecx
    4d50:	89 c7                	mov    %eax,%edi
    4d52:	81 f9 f4 0f 00 00    	cmp    $0xff4,%ecx
    4d58:	0f 94 c1             	sete   %cl
    4d5b:	40 c0 ef 06          	shr    $0x6,%dil
    4d5f:	31 db                	xor    %ebx,%ebx
    4d61:	0f b6 c9             	movzbl %cl,%ecx
    4d64:	40 0f b6 ff          	movzbl %dil,%edi
    4d68:	48 83 f9 00          	cmp    $0x0,%rcx
    4d6c:	45 0f 45 c5          	cmovne %r13d,%r8d
    4d70:	44 89 44 24 2c       	mov    %r8d,0x2c(%rsp)
    4d75:	45 89 f8             	mov    %r15d,%r8d
    4d78:	0f b6 4c 24 5c       	movzbl 0x5c(%rsp),%ecx
    4d7d:	41 c1 e0 04          	shl    $0x4,%r8d
    4d81:	c5 fb f0 0d a7 32 01 	vlddqu 0x132a7(%rip),%xmm1        # 18030 <extension_2op_table>
    4d88:	00 
    4d89:	41 09 f8             	or     %edi,%r8d
    4d8c:	41 83 f8 11          	cmp    $0x11,%r8d
    4d90:	0f 94 c3             	sete   %bl
    4d93:	01 c9                	add    %ecx,%ecx
    4d95:	c0 e8 03             	shr    $0x3,%al
    4d98:	42 8d 0c d1          	lea    (%rcx,%r10,8),%ecx
    4d9c:	41 ba 1a 05 0a 00    	mov    $0xa051a,%r10d
    4da2:	83 e0 07             	and    $0x7,%eax
    4da5:	41 d3 ea             	shr    %cl,%r10d
    4da8:	41 83 e2 03          	and    $0x3,%r10d
    4dac:	48 83 fb 00          	cmp    $0x0,%rbx
    4db0:	41 0f 45 d2          	cmovne %r10d,%edx
    4db4:	44 8d 14 00          	lea    (%rax,%rax,1),%r10d
    4db8:	41 8d 4a 01          	lea    0x1(%r10),%ecx
    4dbc:	c1 e1 08             	shl    $0x8,%ecx
    4dbf:	44 09 d1             	or     %r10d,%ecx
    4dc2:	41 83 f8 13          	cmp    $0x13,%r8d
    4dc6:	c5 f9 6e f9          	vmovd  %ecx,%xmm7
    4dca:	89 f1                	mov    %esi,%ecx
    4dcc:	0f b6 74 24 64       	movzbl 0x64(%rsp),%esi
    4dd1:	41 0f 94 c0          	sete   %r8b
    4dd5:	41 c1 e7 0c          	shl    $0xc,%r15d
    4dd9:	c5 f9 70 c7 00       	vpshufd $0x0,%xmm7,%xmm0
    4dde:	45 0f b6 c0          	movzbl %r8b,%r8d
    4de2:	c1 e7 08             	shl    $0x8,%edi
    4de5:	c4 e2 71 00 c0       	vpshufb %xmm0,%xmm1,%xmm0
    4dea:	89 74 24 64          	mov    %esi,0x64(%rsp)
    4dee:	c4 c1 f9 7e c2       	vmovq  %xmm0,%r10
    4df3:	41 d3 ea             	shr    %cl,%r10d
    4df6:	41 83 e2 03          	and    $0x3,%r10d
    4dfa:	49 83 f8 00          	cmp    $0x0,%r8
    4dfe:	41 0f 45 d2          	cmovne %r10d,%edx
    4e02:	41 89 f0             	mov    %esi,%r8d
    4e05:	c1 e6 04             	shl    $0x4,%esi
    4e08:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    4e0f:	00 
    4e10:	41 09 f7             	or     %esi,%r15d
    4e13:	89 74 24 60          	mov    %esi,0x60(%rsp)
    4e17:	41 09 c7             	or     %eax,%r15d
    4e1a:	31 c0                	xor    %eax,%eax
    4e1c:	41 09 ff             	or     %edi,%r15d
    4e1f:	41 81 ff 32 13 00 00 	cmp    $0x1332,%r15d
    4e26:	44 0f b6 bc 24 c0 00 	movzbl 0xc0(%rsp),%r15d
    4e2d:	00 00 
    4e2f:	0f 97 c0             	seta   %al
    4e32:	48 83 f8 00          	cmp    $0x0,%rax
    4e36:	41 0f 45 d4          	cmovne %r12d,%edx
    4e3a:	31 c0                	xor    %eax,%eax
    4e3c:	41 80 f8 03          	cmp    $0x3,%r8b
    4e40:	0f 94 c0             	sete   %al
    4e43:	48 83 f8 00          	cmp    $0x0,%rax
    4e47:	41 0f 45 d4          	cmovne %r12d,%edx
    4e4b:	89 54 24 28          	mov    %edx,0x28(%rsp)
    4e4f:	44 89 d2             	mov    %r10d,%edx
    4e52:	8d 42 02             	lea    0x2(%rdx),%eax
    4e55:	0f b6 c0             	movzbl %al,%eax
    4e58:	48 89 c2             	mov    %rax,%rdx
    4e5b:	48 8d 48 01          	lea    0x1(%rax),%rcx
    4e5f:	4c 09 ca             	or     %r9,%rdx
    4e62:	48 c1 e1 08          	shl    $0x8,%rcx
    4e66:	c4 e1 f9 6e c2       	vmovq  %rdx,%xmm0
    4e6b:	48 8d 50 03          	lea    0x3(%rax),%rdx
    4e6f:	48 c1 e2 18          	shl    $0x18,%rdx
    4e73:	c4 c3 f9 22 c3 01    	vpinsrq $0x1,%r11,%xmm0,%xmm0
    4e79:	48 09 ca             	or     %rcx,%rdx
    4e7c:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4e81:	48 b9 00 00 00 00 80 	movabs $0x8080808000000000,%rcx
    4e88:	80 80 80 
    4e8b:	48 09 c2             	or     %rax,%rdx
    4e8e:	48 83 c0 02          	add    $0x2,%rax
    4e92:	c4 c1 f9 7e c0       	vmovq  %xmm0,%r8
    4e97:	48 c1 e0 10          	shl    $0x10,%rax
    4e9b:	48 09 d0             	or     %rdx,%rax
    4e9e:	44 89 d2             	mov    %r10d,%edx
    4ea1:	83 c2 03             	add    $0x3,%edx
    4ea4:	48 09 c8             	or     %rcx,%rax
    4ea7:	0f b6 d2             	movzbl %dl,%edx
    4eaa:	c4 e1 f9 6e e0       	vmovq  %rax,%xmm4
    4eaf:	48 8d 72 01          	lea    0x1(%rdx),%rsi
    4eb3:	48 8d 42 03          	lea    0x3(%rdx),%rax
    4eb7:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4ebd:	48 c1 e6 08          	shl    $0x8,%rsi
    4ec1:	48 c1 e0 18          	shl    $0x18,%rax
    4ec5:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4eca:	48 09 f0             	or     %rsi,%rax
    4ecd:	48 8d 72 02          	lea    0x2(%rdx),%rsi
    4ed1:	c4 e1 f9 7e c3       	vmovq  %xmm0,%rbx
    4ed6:	48 09 d0             	or     %rdx,%rax
    4ed9:	48 c1 e6 10          	shl    $0x10,%rsi
    4edd:	4c 09 ca             	or     %r9,%rdx
    4ee0:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    4ee5:	48 09 f0             	or     %rsi,%rax
    4ee8:	c4 e1 f9 6e e2       	vmovq  %rdx,%xmm4
    4eed:	bb 04 00 00 00       	mov    $0x4,%ebx
    4ef2:	44 89 e2             	mov    %r12d,%edx
    4ef5:	48 09 c8             	or     %rcx,%rax
    4ef8:	31 c9                	xor    %ecx,%ecx
    4efa:	41 80 ff 05          	cmp    $0x5,%r15b
    4efe:	44 89 e6             	mov    %r12d,%esi
    4f01:	c4 e1 f9 6e f8       	vmovq  %rax,%xmm7
    4f06:	0f 94 c1             	sete   %cl
    4f09:	45 89 c1             	mov    %r8d,%r9d
    4f0c:	45 31 d2             	xor    %r10d,%r10d
    4f0f:	c4 c3 c1 22 c3 01    	vpinsrq $0x1,%r11,%xmm7,%xmm0
    4f15:	c4 e2 51 00 c0       	vpshufb %xmm0,%xmm5,%xmm0
    4f1a:	c4 e1 f9 7e c0       	vmovq  %xmm0,%rax
    4f1f:	c4 c3 d9 22 c3 01    	vpinsrq $0x1,%r11,%xmm4,%xmm0
    4f25:	45 89 f3             	mov    %r14d,%r11d
    4f28:	48 83 f9 00          	cmp    $0x0,%rcx
    4f2c:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    4f31:	48 83 f9 00          	cmp    $0x0,%rcx
    4f35:	0f 45 f3             	cmovne %ebx,%esi
    4f38:	0f b6 8c 24 80 00 00 	movzbl 0x80(%rsp),%ecx
    4f3f:	00 
    4f40:	41 c1 e3 08          	shl    $0x8,%r11d
    4f44:	c4 e2 51 00 e8       	vpshufb %xmm0,%xmm5,%xmm5
    4f49:	89 4c 24 5c          	mov    %ecx,0x5c(%rsp)
    4f4d:	44 09 d9             	or     %r11d,%ecx
    4f50:	81 f9 04 01 00 00    	cmp    $0x104,%ecx
    4f56:	41 0f 94 c2          	sete   %r10b
    4f5a:	41 c0 e9 06          	shr    $0x6,%r9b
    4f5e:	41 0f b6 c9          	movzbl %r9b,%ecx
    4f62:	41 b9 ff 00 00 00    	mov    $0xff,%r9d
    4f68:	41 c1 e6 10          	shl    $0x10,%r14d
    4f6c:	44 89 cf             	mov    %r9d,%edi
    4f6f:	49 83 fa 00          	cmp    $0x0,%r10
    4f73:	0f 45 f9             	cmovne %ecx,%edi
    4f76:	44 89 e1             	mov    %r12d,%ecx
    4f79:	89 7c 24 24          	mov    %edi,0x24(%rsp)
    4f7d:	8b 7c 24 38          	mov    0x38(%rsp),%edi
    4f81:	49 83 fa 00          	cmp    $0x0,%r10
    4f85:	41 0f 45 cd          	cmovne %r13d,%ecx
    4f89:	8d 74 0e 01          	lea    0x1(%rsi,%rcx,1),%esi
    4f8d:	89 74 24 58          	mov    %esi,0x58(%rsp)
    4f91:	44 89 c6             	mov    %r8d,%esi
    4f94:	40 c0 ee 03          	shr    $0x3,%sil
    4f98:	89 f1                	mov    %esi,%ecx
    4f9a:	8d 34 bd 00 00 00 00 	lea    0x0(,%rdi,4),%esi
    4fa1:	83 e6 08             	and    $0x8,%esi
    4fa4:	83 e1 07             	and    $0x7,%ecx
    4fa7:	09 f1                	or     %esi,%ecx
    4fa9:	44 89 ce             	mov    %r9d,%esi
    4fac:	49 83 fa 00          	cmp    $0x0,%r10
    4fb0:	0f 45 f1             	cmovne %ecx,%esi
    4fb3:	8d 0c fd 00 00 00 00 	lea    0x0(,%rdi,8),%ecx
    4fba:	44 89 c7             	mov    %r8d,%edi
    4fbd:	89 74 24 38          	mov    %esi,0x38(%rsp)
    4fc1:	45 0f b6 c0          	movzbl %r8b,%r8d
    4fc5:	83 e7 07             	and    $0x7,%edi
    4fc8:	83 e1 08             	and    $0x8,%ecx
    4fcb:	89 fe                	mov    %edi,%esi
    4fcd:	44 89 e7             	mov    %r12d,%edi
    4fd0:	09 ce                	or     %ecx,%esi
    4fd2:	49 83 fa 00          	cmp    $0x0,%r10
    4fd6:	0f 45 fe             	cmovne %esi,%edi
    4fd9:	89 fe                	mov    %edi,%esi
    4fdb:	41 0f b6 ff          	movzbl %r15b,%edi
    4fdf:	41 89 f7             	mov    %esi,%r15d
    4fe2:	89 74 24 20          	mov    %esi,0x20(%rsp)
    4fe6:	41 c1 e7 08          	shl    $0x8,%r15d
    4fea:	44 89 fe             	mov    %r15d,%esi
    4fed:	45 31 ff             	xor    %r15d,%r15d
    4ff0:	81 e6 00 07 00 00    	and    $0x700,%esi
    4ff6:	44 09 f6             	or     %r14d,%esi
    4ff9:	09 fe                	or     %edi,%esi
    4ffb:	81 fe 04 05 01 00    	cmp    $0x10504,%esi
    5001:	44 89 e6             	mov    %r12d,%esi
    5004:	41 0f 94 c7          	sete   %r15b
    5008:	41 09 fb             	or     %edi,%r11d
    500b:	44 89 e7             	mov    %r12d,%edi
    500e:	49 83 ff 00          	cmp    $0x0,%r15
    5012:	0f 45 f3             	cmovne %ebx,%esi
    5015:	49 83 ff 00          	cmp    $0x0,%r15
    5019:	0f 45 d0             	cmovne %eax,%edx
    501c:	44 8b 7c 24 58       	mov    0x58(%rsp),%r15d
    5021:	41 01 f7             	add    %esi,%r15d
    5024:	c4 e1 f9 7e ee       	vmovq  %xmm5,%rsi
    5029:	44 89 fb             	mov    %r15d,%ebx
    502c:	45 31 ff             	xor    %r15d,%r15d
    502f:	41 81 fb 44 01 00 00 	cmp    $0x144,%r11d
    5036:	40 0f b6 f6          	movzbl %sil,%esi
    503a:	41 0f 94 c7          	sete   %r15b
    503e:	49 83 ff 00          	cmp    $0x0,%r15
    5042:	0f 45 fe             	cmovne %esi,%edi
    5045:	44 89 e6             	mov    %r12d,%esi
    5048:	49 83 ff 00          	cmp    $0x0,%r15
    504c:	41 0f 45 f5          	cmovne %r13d,%esi
    5050:	01 de                	add    %ebx,%esi
    5052:	41 81 fb 84 01 00 00 	cmp    $0x184,%r11d
    5059:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    505f:	8b 5c 24 5c          	mov    0x5c(%rsp),%ebx
    5063:	41 0f 94 c3          	sete   %r11b
    5067:	45 0f b6 db          	movzbl %r11b,%r11d
    506b:	49 83 fb 00          	cmp    $0x0,%r11
    506f:	0f 45 d0             	cmovne %eax,%edx
    5072:	44 89 e0             	mov    %r12d,%eax
    5075:	49 83 fb 00          	cmp    $0x0,%r11
    5079:	41 0f 45 c7          	cmovne %r15d,%eax
    507d:	45 31 db             	xor    %r11d,%r11d
    5080:	01 c6                	add    %eax,%esi
    5082:	80 bc 24 80 00 00 00 	cmpb   $0x4,0x80(%rsp)
    5089:	04 
    508a:	44 89 e0             	mov    %r12d,%eax
    508d:	41 0f 95 c3          	setne  %r11b
    5091:	49 83 fb 00          	cmp    $0x0,%r11
    5095:	41 0f 45 c5          	cmovne %r13d,%eax
    5099:	44 8b 5c 24 64       	mov    0x64(%rsp),%r11d
    509e:	c1 e0 08             	shl    $0x8,%eax
    50a1:	44 09 f0             	or     %r14d,%eax
    50a4:	44 09 d8             	or     %r11d,%eax
    50a7:	45 31 db             	xor    %r11d,%r11d
    50aa:	3d 01 01 01 00       	cmp    $0x10101,%eax
    50af:	41 0f 94 c3          	sete   %r11b
    50b3:	49 83 fb 00          	cmp    $0x0,%r11
    50b7:	41 0f 45 f8          	cmovne %r8d,%edi
    50bb:	45 89 e0             	mov    %r12d,%r8d
    50be:	49 83 fb 00          	cmp    $0x0,%r11
    50c2:	45 0f 45 c5          	cmovne %r13d,%r8d
    50c6:	41 01 f0             	add    %esi,%r8d
    50c9:	3d 02 01 01 00       	cmp    $0x10102,%eax
    50ce:	4c 0f be df          	movsbq %dil,%r11
    50d2:	44 89 e6             	mov    %r12d,%esi
    50d5:	0f 94 c0             	sete   %al
    50d8:	09 d9                	or     %ebx,%ecx
    50da:	0f b6 c0             	movzbl %al,%eax
    50dd:	49 83 fa 00          	cmp    $0x0,%r10
    50e1:	41 0f 45 cf          	cmovne %r15d,%ecx
    50e5:	48 83 f8 00          	cmp    $0x0,%rax
    50e9:	41 0f 45 f7          	cmovne %r15d,%esi
    50ed:	48 83 f8 00          	cmp    $0x0,%rax
    50f1:	0f 45 54 24 70       	cmovne 0x70(%rsp),%edx
    50f6:	41 01 f0             	add    %esi,%r8d
    50f9:	31 c0                	xor    %eax,%eax
    50fb:	8b 74 24 20          	mov    0x20(%rsp),%esi
    50ff:	4d 85 db             	test   %r11,%r11
    5102:	0f 94 c0             	sete   %al
    5105:	89 d2                	mov    %edx,%edx
    5107:	41 89 da             	mov    %ebx,%r10d
    510a:	48 83 f8 00          	cmp    $0x0,%rax
    510e:	4c 0f 45 da          	cmovne %rdx,%r11
    5112:	31 d2                	xor    %edx,%edx
    5114:	80 bc 24 c0 00 00 00 	cmpb   $0x4,0xc0(%rsp)
    511b:	04 
    511c:	0f b6 c1             	movzbl %cl,%eax
    511f:	44 8b 7c 24 60       	mov    0x60(%rsp),%r15d
    5124:	0f 94 c2             	sete   %dl
    5127:	48 8b 7c 24 78       	mov    0x78(%rsp),%rdi
    512c:	48 83 fa 00          	cmp    $0x0,%rdx
    5130:	41 0f 45 c1          	cmovne %r9d,%eax
    5134:	89 f2                	mov    %esi,%edx
    5136:	83 e2 07             	and    $0x7,%edx
    5139:	44 09 fa             	or     %r15d,%edx
    513c:	83 fa 05             	cmp    $0x5,%edx
    513f:	0f 94 c2             	sete   %dl
    5142:	0f b6 d2             	movzbl %dl,%edx
    5145:	48 83 fa 00          	cmp    $0x0,%rdx
    5149:	41 0f 45 f1          	cmovne %r9d,%esi
    514d:	31 d2                	xor    %edx,%edx
    514f:	80 f9 04             	cmp    $0x4,%cl
    5152:	0f 94 c2             	sete   %dl
    5155:	45 09 fa             	or     %r15d,%r10d
    5158:	48 83 fa 00          	cmp    $0x0,%rdx
    515c:	0f 45 c6             	cmovne %esi,%eax
    515f:	31 d2                	xor    %edx,%edx
    5161:	41 83 fa 05          	cmp    $0x5,%r10d
    5165:	89 c6                	mov    %eax,%esi
    5167:	b8 10 00 00 00       	mov    $0x10,%eax
    516c:	0f 94 c2             	sete   %dl
    516f:	31 db                	xor    %ebx,%ebx
    5171:	48 83 fa 00          	cmp    $0x0,%rdx
    5175:	0f 45 f0             	cmovne %eax,%esi
    5178:	e8 23 f1 ff ff       	call   42a0 <register_value_select>
    517d:	89 f1                	mov    %esi,%ecx
    517f:	8b 74 24 38          	mov    0x38(%rsp),%esi
    5183:	4c 8b 74 24 68       	mov    0x68(%rsp),%r14
    5188:	44 8b 54 24 34       	mov    0x34(%rsp),%r10d
    518d:	48 89 c2             	mov    %rax,%rdx
    5190:	31 c0                	xor    %eax,%eax
    5192:	48 83 f9 10          	cmp    $0x10,%rcx
    5196:	49 0f 44 d6          	cmove  %r14,%rdx
    519a:	48 81 f9 ff 00 00 00 	cmp    $0xff,%rcx
    51a1:	48 0f 44 d3          	cmove  %rbx,%rdx
    51a5:	89 d1                	mov    %edx,%ecx
    51a7:	49 83 fa 01          	cmp    $0x1,%r10
    51ab:	48 0f 44 d1          	cmove  %rcx,%rdx
    51af:	83 fe 04             	cmp    $0x4,%esi
    51b2:	0f 94 c0             	sete   %al
    51b5:	48 83 f8 00          	cmp    $0x0,%rax
    51b9:	41 0f 45 f1          	cmovne %r9d,%esi
    51bd:	e8 de f0 ff ff       	call   42a0 <register_value_select>
    51c2:	44 8b 4c 24 28       	mov    0x28(%rsp),%r9d
    51c7:	89 f6                	mov    %esi,%esi
    51c9:	48 83 fe 10          	cmp    $0x10,%rsi
    51cd:	49 0f 44 c6          	cmove  %r14,%rax
    51d1:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    51d8:	48 0f 44 c3          	cmove  %rbx,%rax
    51dc:	89 c1                	mov    %eax,%ecx
    51de:	41 be 02 00 00 00    	mov    $0x2,%r14d
    51e4:	49 83 fa 01          	cmp    $0x1,%r10
    51e8:	48 0f 44 c1          	cmove  %rcx,%rax
    51ec:	45 85 c9             	test   %r9d,%r9d
    51ef:	44 89 e9             	mov    %r13d,%ecx
    51f2:	40 0f 94 c6          	sete   %sil
    51f6:	40 0f b6 f6          	movzbl %sil,%esi
    51fa:	48 83 fe 00          	cmp    $0x0,%rsi
    51fe:	41 0f 45 cc          	cmovne %r12d,%ecx
    5202:	41 01 c8             	add    %ecx,%r8d
    5205:	0f b6 4c 24 24       	movzbl 0x24(%rsp),%ecx
    520a:	44 89 ee             	mov    %r13d,%esi
    520d:	d3 e6                	shl    %cl,%esi
    520f:	48 63 ce             	movslq %esi,%rcx
    5212:	48 0f af c1          	imul   %rcx,%rax
    5216:	48 01 c2             	add    %rax,%rdx
    5219:	8b 84 24 a0 00 00 00 	mov    0xa0(%rsp),%eax
    5220:	4c 01 da             	add    %r11,%rdx
    5223:	83 e0 0f             	and    $0xf,%eax
    5226:	8d 70 06             	lea    0x6(%rax),%esi
    5229:	e8 72 f0 ff ff       	call   42a0 <register_value_select>
    522e:	8b 74 24 40          	mov    0x40(%rsp),%esi
    5232:	44 8b 7c 24 3c       	mov    0x3c(%rsp),%r15d
    5237:	48 89 c1             	mov    %rax,%rcx
    523a:	8b 44 24 48          	mov    0x48(%rsp),%eax
    523e:	44 8b 64 24 2c       	mov    0x2c(%rsp),%r12d
    5243:	83 e6 03             	and    $0x3,%esi
    5246:	48 83 f8 01          	cmp    $0x1,%rax
    524a:	48 0f 44 d1          	cmove  %rcx,%rdx
    524e:	89 f1                	mov    %esi,%ecx
    5250:	49 89 c3             	mov    %rax,%r11
    5253:	be 04 00 00 00       	mov    $0x4,%esi
    5258:	83 c1 01             	add    $0x1,%ecx
    525b:	48 83 f8 00          	cmp    $0x0,%rax
    525f:	44 0f 45 c9          	cmovne %ecx,%r9d
    5263:	44 89 f8             	mov    %r15d,%eax
    5266:	44 09 e0             	or     %r12d,%eax
    5269:	49 89 c2             	mov    %rax,%r10
    526c:	48 83 f8 00          	cmp    $0x0,%rax
    5270:	45 0f 45 ce          	cmovne %r14d,%r9d
    5274:	e8 27 f0 ff ff       	call   42a0 <register_value_select>
    5279:	8b 4c 24 30          	mov    0x30(%rsp),%ecx
    527d:	8b 5c 24 4c          	mov    0x4c(%rsp),%ebx
    5281:	49 83 fa 01          	cmp    $0x1,%r10
    5285:	48 0f 44 d0          	cmove  %rax,%rdx
    5289:	42 8d 04 09          	lea    (%rcx,%r9,1),%eax
    528d:	31 c9                	xor    %ecx,%ecx
    528f:	44 8b 94 24 e0 00 00 	mov    0xe0(%rsp),%r10d
    5296:	00 
    5297:	83 f8 02             	cmp    $0x2,%eax
    529a:	44 89 c8             	mov    %r9d,%eax
    529d:	0f 97 c1             	seta   %cl
    52a0:	48 83 f9 00          	cmp    $0x0,%rcx
    52a4:	41 0f 45 c5          	cmovne %r13d,%eax
    52a8:	44 89 f9             	mov    %r15d,%ecx
    52ab:	44 09 d9             	or     %r11d,%ecx
    52ae:	48 83 f9 00          	cmp    $0x0,%rcx
    52b2:	45 0f 45 c5          	cmovne %r13d,%r8d
    52b6:	44 89 e1             	mov    %r12d,%ecx
    52b9:	48 83 f9 00          	cmp    $0x0,%rcx
    52bd:	45 0f 45 c6          	cmovne %r14d,%r8d
    52c1:	42 8d 0c 03          	lea    (%rbx,%r8,1),%ecx
    52c5:	48 8b 5c 24 50       	mov    0x50(%rsp),%rbx
    52ca:	44 01 d1             	add    %r10d,%ecx
    52cd:	83 f9 10             	cmp    $0x10,%ecx
    52d0:	48 89 13             	mov    %rdx,(%rbx)
    52d3:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    52d8:	0f 96 c1             	setbe  %cl
    52db:	0f b6 c9             	movzbl %cl,%ecx
    52de:	48 21 c1             	and    %rax,%rcx
    52e1:	48 83 f9 00          	cmp    $0x0,%rcx
    52e5:	0f 45 c0             	cmovne %eax,%eax
    52e8:	f6 05 44 2b 01 00 08 	testb  $0x8,0x12b44(%rip)        # 17e33 <g_cpu_feature_indicator+0x3>
    52ef:	0f 84 1b 01 00 00    	je     5410 <ct_decode+0x10d0>
    52f5:	62 f1 7c 48 28 03    	vmovaps (%rbx),%zmm0
    52fb:	62 f1 7c 48 28 4b 01 	vmovaps 0x40(%rbx),%zmm1
    5302:	62 f1 7c 48 28 53 02 	vmovaps 0x80(%rbx),%zmm2
    5309:	62 f1 7c 48 28 5b 03 	vmovaps 0xc0(%rbx),%zmm3
    5310:	62 f1 7c 48 28 63 04 	vmovaps 0x100(%rbx),%zmm4
    5317:	62 f1 7c 48 28 6b 05 	vmovaps 0x140(%rbx),%zmm5
    531e:	62 f1 7c 48 28 73 06 	vmovaps 0x180(%rbx),%zmm6
    5325:	62 f1 7c 48 28 7b 07 	vmovaps 0x1c0(%rbx),%zmm7
    532c:	62 71 7c 48 28 43 08 	vmovaps 0x200(%rbx),%zmm8
    5333:	62 71 7c 48 28 4b 09 	vmovaps 0x240(%rbx),%zmm9
    533a:	62 71 7c 48 28 53 0a 	vmovaps 0x280(%rbx),%zmm10
    5341:	62 71 7c 48 28 5b 0b 	vmovaps 0x2c0(%rbx),%zmm11
    5348:	62 71 7c 48 28 63 0c 	vmovaps 0x300(%rbx),%zmm12
    534f:	62 71 7c 48 28 6b 0d 	vmovaps 0x340(%rbx),%zmm13
    5356:	62 71 7c 48 28 73 0e 	vmovaps 0x380(%rbx),%zmm14
    535d:	62 71 7c 48 28 7b 0f 	vmovaps 0x3c0(%rbx),%zmm15
    5364:	48 8b 94 24 38 05 00 	mov    0x538(%rsp),%rdx
    536b:	00 
    536c:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    5373:	00 00 
    5375:	0f 85 0d 01 00 00    	jne    5488 <ct_decode+0x1148>
    537b:	c5 f8 77             	vzeroupper 
    537e:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    5382:	5b                   	pop    %rbx
    5383:	41 5c                	pop    %r12
    5385:	41 5d                	pop    %r13
    5387:	41 5e                	pop    %r14
    5389:	41 5f                	pop    %r15
    538b:	5d                   	pop    %rbp
    538c:	c3                   	ret    
    538d:	0f 1f 00             	nopl   (%rax)
    5390:	c5 fc 29 00          	vmovaps %ymm0,(%rax)
    5394:	c5 fc 29 48 20       	vmovaps %ymm1,0x20(%rax)
    5399:	c5 fc 29 50 40       	vmovaps %ymm2,0x40(%rax)
    539e:	c5 fc 29 58 60       	vmovaps %ymm3,0x60(%rax)
    53a3:	c5 fc 29 a0 80 00 00 	vmovaps %ymm4,0x80(%rax)
    53aa:	00 
    53ab:	c5 fc 29 a8 a0 00 00 	vmovaps %ymm5,0xa0(%rax)
    53b2:	00 
    53b3:	c5 fc 29 b0 c0 00 00 	vmovaps %ymm6,0xc0(%rax)
    53ba:	00 
    53bb:	c5 fc 29 b8 e0 00 00 	vmovaps %ymm7,0xe0(%rax)
    53c2:	00 
    53c3:	c5 7c 29 80 00 01 00 	vmovaps %ymm8,0x100(%rax)
    53ca:	00 
    53cb:	c5 7c 29 88 20 01 00 	vmovaps %ymm9,0x120(%rax)
    53d2:	00 
    53d3:	c5 7c 29 90 40 01 00 	vmovaps %ymm10,0x140(%rax)
    53da:	00 
    53db:	c5 7c 29 98 60 01 00 	vmovaps %ymm11,0x160(%rax)
    53e2:	00 
    53e3:	c5 7c 29 a0 80 01 00 	vmovaps %ymm12,0x180(%rax)
    53ea:	00 
    53eb:	c5 7c 29 a8 a0 01 00 	vmovaps %ymm13,0x1a0(%rax)
    53f2:	00 
    53f3:	c5 7c 29 b0 c0 01 00 	vmovaps %ymm14,0x1c0(%rax)
    53fa:	00 
    53fb:	c5 7c 29 b8 e0 01 00 	vmovaps %ymm15,0x1e0(%rax)
    5402:	00 
    5403:	e9 fa ef ff ff       	jmp    4402 <ct_decode+0xc2>
    5408:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    540f:	00 
    5410:	c5 fc 28 03          	vmovaps (%rbx),%ymm0
    5414:	c5 fc 28 4b 20       	vmovaps 0x20(%rbx),%ymm1
    5419:	c5 fc 28 53 40       	vmovaps 0x40(%rbx),%ymm2
    541e:	c5 fc 28 5b 60       	vmovaps 0x60(%rbx),%ymm3
    5423:	c5 fc 28 a3 80 00 00 	vmovaps 0x80(%rbx),%ymm4
    542a:	00 
    542b:	c5 fc 28 ab a0 00 00 	vmovaps 0xa0(%rbx),%ymm5
    5432:	00 
    5433:	c5 fc 28 b3 c0 00 00 	vmovaps 0xc0(%rbx),%ymm6
    543a:	00 
    543b:	c5 fc 28 bb e0 00 00 	vmovaps 0xe0(%rbx),%ymm7
    5442:	00 
    5443:	c5 7c 28 83 00 01 00 	vmovaps 0x100(%rbx),%ymm8
    544a:	00 
    544b:	c5 7c 28 8b 20 01 00 	vmovaps 0x120(%rbx),%ymm9
    5452:	00 
    5453:	c5 7c 28 93 40 01 00 	vmovaps 0x140(%rbx),%ymm10
    545a:	00 
    545b:	c5 7c 28 9b 60 01 00 	vmovaps 0x160(%rbx),%ymm11
    5462:	00 
    5463:	c5 7c 28 a3 80 01 00 	vmovaps 0x180(%rbx),%ymm12
    546a:	00 
    546b:	c5 7c 28 ab a0 01 00 	vmovaps 0x1a0(%rbx),%ymm13
    5472:	00 
    5473:	c5 7c 28 b3 c0 01 00 	vmovaps 0x1c0(%rbx),%ymm14
    547a:	00 
    547b:	c5 7c 28 bb e0 01 00 	vmovaps 0x1e0(%rbx),%ymm15
    5482:	00 
    5483:	e9 dc fe ff ff       	jmp    5364 <ct_decode+0x1024>
    5488:	c5 f8 77             	vzeroupper 
    548b:	e8 30 b4 00 00       	call   108c0 <__stack_chk_fail>

0000000000005490 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>:
    5490:	48 39 f7             	cmp    %rsi,%rdi
    5493:	0f 83 f7 01 00 00    	jae    5690 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x200>
    5499:	41 57                	push   %r15
    549b:	41 56                	push   %r14
    549d:	49 89 d6             	mov    %rdx,%r14
    54a0:	41 55                	push   %r13
    54a2:	49 89 f5             	mov    %rsi,%r13
    54a5:	41 54                	push   %r12
    54a7:	55                   	push   %rbp
    54a8:	53                   	push   %rbx
    54a9:	48 89 fb             	mov    %rdi,%rbx
    54ac:	48 83 ec 08          	sub    $0x8,%rsp
    54b0:	66 f7 03 00 10       	testw  $0x1000,(%rbx)
    54b5:	0f 85 d5 00 00 00    	jne    5590 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x100>
    54bb:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    54bf:	e8 34 ca 00 00       	call   11ef8 <get_enclave_base>
    54c4:	44 8b 63 04          	mov    0x4(%rbx),%r12d
    54c8:	48 8b 4b 18          	mov    0x18(%rbx),%rcx
    54cc:	4c 01 f5             	add    %r14,%rbp
    54cf:	48 01 c5             	add    %rax,%rbp
    54d2:	49 c1 e4 0c          	shl    $0xc,%r12
    54d6:	48 85 c9             	test   %rcx,%rcx
    54d9:	0f 84 81 00 00 00    	je     5560 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    54df:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    54e3:	a8 04                	test   $0x4,%al
    54e5:	75 79                	jne    5560 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xd0>
    54e7:	89 c2                	mov    %eax,%edx
    54e9:	41 89 c7             	mov    %eax,%r15d
    54ec:	83 e2 10             	and    $0x10,%edx
    54ef:	41 83 e7 08          	and    $0x8,%r15d
    54f3:	a8 01                	test   $0x1,%al
    54f5:	0f 84 e5 00 00 00    	je     55e0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x150>
    54fb:	66 85 d2             	test   %dx,%dx
    54fe:	0f 85 3c 01 00 00    	jne    5640 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    5504:	0f b7 03             	movzwl (%rbx),%eax
    5507:	66 45 85 ff          	test   %r15w,%r15w
    550b:	0f 85 e1 00 00 00    	jne    55f2 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x162>
    5511:	66 83 f8 04          	cmp    $0x4,%ax
    5515:	0f 84 65 01 00 00    	je     5680 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1f0>
    551b:	83 e1 07             	and    $0x7,%ecx
    551e:	ba 80 02 00 00       	mov    $0x280,%edx
    5523:	45 31 c9             	xor    %r9d,%r9d
    5526:	45 31 c0             	xor    %r8d,%r8d
    5529:	4c 89 e6             	mov    %r12,%rsi
    552c:	48 89 ef             	mov    %rbp,%rdi
    552f:	e8 4c 62 00 00       	call   b780 <mm_init_ema>
    5534:	85 c0                	test   %eax,%eax
    5536:	75 44                	jne    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5538:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    553f:	00 
    5540:	48 83 c3 20          	add    $0x20,%rbx
    5544:	4c 39 eb             	cmp    %r13,%rbx
    5547:	0f 82 63 ff ff ff    	jb     54b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    554d:	48 83 c4 08          	add    $0x8,%rsp
    5551:	31 c0                	xor    %eax,%eax
    5553:	5b                   	pop    %rbx
    5554:	5d                   	pop    %rbp
    5555:	41 5c                	pop    %r12
    5557:	41 5d                	pop    %r13
    5559:	41 5e                	pop    %r14
    555b:	41 5f                	pop    %r15
    555d:	c3                   	ret    
    555e:	66 90                	xchg   %ax,%ax
    5560:	45 31 c9             	xor    %r9d,%r9d
    5563:	45 31 c0             	xor    %r8d,%r8d
    5566:	31 c9                	xor    %ecx,%ecx
    5568:	ba 81 00 00 00       	mov    $0x81,%edx
    556d:	4c 89 e6             	mov    %r12,%rsi
    5570:	48 89 ef             	mov    %rbp,%rdi
    5573:	e8 08 62 00 00       	call   b780 <mm_init_ema>
    5578:	85 c0                	test   %eax,%eax
    557a:	74 c4                	je     5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    557c:	b8 01 00 00 00       	mov    $0x1,%eax
    5581:	48 83 c4 08          	add    $0x8,%rsp
    5585:	5b                   	pop    %rbx
    5586:	5d                   	pop    %rbp
    5587:	41 5c                	pop    %r12
    5589:	41 5d                	pop    %r13
    558b:	41 5e                	pop    %r14
    558d:	41 5f                	pop    %r15
    558f:	c3                   	ret    
    5590:	8b 43 04             	mov    0x4(%rbx),%eax
    5593:	31 ed                	xor    %ebp,%ebp
    5595:	45 31 e4             	xor    %r12d,%r12d
    5598:	85 c0                	test   %eax,%eax
    559a:	74 a4                	je     5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    559c:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    55a0:	4c 03 63 08          	add    0x8(%rbx),%r12
    55a4:	48 89 de             	mov    %rbx,%rsi
    55a7:	4c 89 e2             	mov    %r12,%rdx
    55aa:	f7 df                	neg    %edi
    55ac:	48 63 ff             	movslq %edi,%rdi
    55af:	48 c1 e7 05          	shl    $0x5,%rdi
    55b3:	48 01 df             	add    %rbx,%rdi
    55b6:	e8 d5 fe ff ff       	call   5490 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    55bb:	85 c0                	test   %eax,%eax
    55bd:	75 c2                	jne    5581 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xf1>
    55bf:	83 c5 01             	add    $0x1,%ebp
    55c2:	3b 6b 04             	cmp    0x4(%rbx),%ebp
    55c5:	72 d5                	jb     559c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x10c>
    55c7:	48 83 c3 20          	add    $0x20,%rbx
    55cb:	4c 39 eb             	cmp    %r13,%rbx
    55ce:	0f 82 dc fe ff ff    	jb     54b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    55d4:	e9 74 ff ff ff       	jmp    554d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    55d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    55e0:	66 85 d2             	test   %dx,%dx
    55e3:	75 5b                	jne    5640 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x1b0>
    55e5:	66 45 85 ff          	test   %r15w,%r15w
    55e9:	0f 84 51 ff ff ff    	je     5540 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xb0>
    55ef:	0f b7 03             	movzwl (%rbx),%eax
    55f2:	8d 50 ef             	lea    -0x11(%rax),%edx
    55f5:	66 83 fa 01          	cmp    $0x1,%dx
    55f9:	76 0b                	jbe    5606 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x176>
    55fb:	ba e4 02 00 00       	mov    $0x2e4,%edx
    5600:	66 83 f8 07          	cmp    $0x7,%ax
    5604:	75 05                	jne    560b <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x17b>
    5606:	ba d4 02 00 00       	mov    $0x2d4,%edx
    560b:	45 31 c9             	xor    %r9d,%r9d
    560e:	45 31 c0             	xor    %r8d,%r8d
    5611:	31 c9                	xor    %ecx,%ecx
    5613:	4c 89 e6             	mov    %r12,%rsi
    5616:	48 89 ef             	mov    %rbp,%rdi
    5619:	e8 62 62 00 00       	call   b880 <mm_alloc>
    561e:	85 c0                	test   %eax,%eax
    5620:	0f 85 56 ff ff ff    	jne    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5626:	48 83 c3 20          	add    $0x20,%rbx
    562a:	4c 39 eb             	cmp    %r13,%rbx
    562d:	0f 82 7d fe ff ff    	jb     54b0 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x20>
    5633:	e9 15 ff ff ff       	jmp    554d <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xbd>
    5638:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    563f:	00 
    5640:	45 31 c9             	xor    %r9d,%r9d
    5643:	45 31 c0             	xor    %r8d,%r8d
    5646:	b9 03 00 00 00       	mov    $0x3,%ecx
    564b:	ba 80 00 00 00       	mov    $0x80,%edx
    5650:	4c 89 e6             	mov    %r12,%rsi
    5653:	48 89 ef             	mov    %rbp,%rdi
    5656:	e8 25 61 00 00       	call   b780 <mm_init_ema>
    565b:	85 c0                	test   %eax,%eax
    565d:	0f 85 19 ff ff ff    	jne    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    5663:	4c 89 e6             	mov    %r12,%rsi
    5666:	48 89 ef             	mov    %rbp,%rdi
    5669:	e8 52 62 00 00       	call   b8c0 <mm_dealloc>
    566e:	85 c0                	test   %eax,%eax
    5670:	0f 84 6f ff ff ff    	je     55e5 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x155>
    5676:	e9 01 ff ff ff       	jmp    557c <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0xec>
    567b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5680:	ba 80 01 00 00       	mov    $0x180,%edx
    5685:	31 c9                	xor    %ecx,%ecx
    5687:	e9 97 fe ff ff       	jmp    5523 <_ZL22init_rts_contexts_emasP9_layout_tS0_m+0x93>
    568c:	0f 1f 40 00          	nopl   0x0(%rax)
    5690:	31 c0                	xor    %eax,%eax
    5692:	c3                   	ret    
    5693:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    569a:	00 00 00 
    569d:	0f 1f 00             	nopl   (%rax)

00000000000056a0 <init_rts_emas>:
    56a0:	f3 0f 1e fa          	endbr64 
    56a4:	55                   	push   %rbp
    56a5:	48 89 d5             	mov    %rdx,%rbp
    56a8:	53                   	push   %rbx
    56a9:	48 89 f3             	mov    %rsi,%rbx
    56ac:	48 83 ec 08          	sub    $0x8,%rsp
    56b0:	e8 8b 32 00 00       	call   8940 <init_segment_emas>
    56b5:	85 c0                	test   %eax,%eax
    56b7:	74 07                	je     56c0 <init_rts_emas+0x20>
    56b9:	48 83 c4 08          	add    $0x8,%rsp
    56bd:	5b                   	pop    %rbx
    56be:	5d                   	pop    %rbp
    56bf:	c3                   	ret    
    56c0:	48 83 c4 08          	add    $0x8,%rsp
    56c4:	48 89 ee             	mov    %rbp,%rsi
    56c7:	48 89 df             	mov    %rbx,%rdi
    56ca:	31 d2                	xor    %edx,%edx
    56cc:	5b                   	pop    %rbx
    56cd:	5d                   	pop    %rbp
    56ce:	e9 bd fd ff ff       	jmp    5490 <_ZL22init_rts_contexts_emasP9_layout_tS0_m>
    56d3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    56da:	00 00 00 
    56dd:	0f 1f 00             	nopl   (%rax)

00000000000056e0 <sgx_mm_alloc_ocall>:
    56e0:	f3 0f 1e fa          	endbr64 
    56e4:	41 56                	push   %r14
    56e6:	41 89 ce             	mov    %ecx,%r14d
    56e9:	41 55                	push   %r13
    56eb:	49 89 fd             	mov    %rdi,%r13
    56ee:	bf 20 00 00 00       	mov    $0x20,%edi
    56f3:	41 54                	push   %r12
    56f5:	49 89 f4             	mov    %rsi,%r12
    56f8:	55                   	push   %rbp
    56f9:	89 d5                	mov    %edx,%ebp
    56fb:	53                   	push   %rbx
    56fc:	e8 ff 03 00 00       	call   5b00 <sgx_ocalloc>
    5701:	48 85 c0             	test   %rax,%rax
    5704:	74 4a                	je     5750 <sgx_mm_alloc_ocall+0x70>
    5706:	89 68 18             	mov    %ebp,0x18(%rax)
    5709:	48 89 c6             	mov    %rax,%rsi
    570c:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    5711:	48 89 c3             	mov    %rax,%rbx
    5714:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5718:	bd 0e 00 00 00       	mov    $0xe,%ebp
    571d:	4c 89 60 10          	mov    %r12,0x10(%rax)
    5721:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    5725:	e8 c6 19 00 00       	call   70f0 <sgx_ocall>
    572a:	85 c0                	test   %eax,%eax
    572c:	74 12                	je     5740 <sgx_mm_alloc_ocall+0x60>
    572e:	e8 ad 04 00 00       	call   5be0 <sgx_ocfree>
    5733:	5b                   	pop    %rbx
    5734:	89 e8                	mov    %ebp,%eax
    5736:	5d                   	pop    %rbp
    5737:	41 5c                	pop    %r12
    5739:	41 5d                	pop    %r13
    573b:	41 5e                	pop    %r14
    573d:	c3                   	ret    
    573e:	66 90                	xchg   %ax,%ax
    5740:	8b 03                	mov    (%rbx),%eax
    5742:	f7 d8                	neg    %eax
    5744:	19 ed                	sbb    %ebp,%ebp
    5746:	83 e5 0e             	and    $0xe,%ebp
    5749:	eb e3                	jmp    572e <sgx_mm_alloc_ocall+0x4e>
    574b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5750:	e8 8b 04 00 00       	call   5be0 <sgx_ocfree>
    5755:	bd 01 00 00 00       	mov    $0x1,%ebp
    575a:	5b                   	pop    %rbx
    575b:	89 e8                	mov    %ebp,%eax
    575d:	5d                   	pop    %rbp
    575e:	41 5c                	pop    %r12
    5760:	41 5d                	pop    %r13
    5762:	41 5e                	pop    %r14
    5764:	c3                   	ret    
    5765:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    576c:	00 00 00 
    576f:	90                   	nop

0000000000005770 <sgx_mm_modify_ocall>:
    5770:	f3 0f 1e fa          	endbr64 
    5774:	41 56                	push   %r14
    5776:	41 89 ce             	mov    %ecx,%r14d
    5779:	41 55                	push   %r13
    577b:	49 89 fd             	mov    %rdi,%r13
    577e:	bf 20 00 00 00       	mov    $0x20,%edi
    5783:	41 54                	push   %r12
    5785:	49 89 f4             	mov    %rsi,%r12
    5788:	55                   	push   %rbp
    5789:	89 d5                	mov    %edx,%ebp
    578b:	53                   	push   %rbx
    578c:	e8 6f 03 00 00       	call   5b00 <sgx_ocalloc>
    5791:	48 85 c0             	test   %rax,%rax
    5794:	74 4a                	je     57e0 <sgx_mm_modify_ocall+0x70>
    5796:	89 68 18             	mov    %ebp,0x18(%rax)
    5799:	48 89 c6             	mov    %rax,%rsi
    579c:	bf f9 ff ff ff       	mov    $0xfffffff9,%edi
    57a1:	48 89 c3             	mov    %rax,%rbx
    57a4:	4c 89 68 08          	mov    %r13,0x8(%rax)
    57a8:	bd 0e 00 00 00       	mov    $0xe,%ebp
    57ad:	4c 89 60 10          	mov    %r12,0x10(%rax)
    57b1:	44 89 70 1c          	mov    %r14d,0x1c(%rax)
    57b5:	e8 36 19 00 00       	call   70f0 <sgx_ocall>
    57ba:	85 c0                	test   %eax,%eax
    57bc:	74 12                	je     57d0 <sgx_mm_modify_ocall+0x60>
    57be:	e8 1d 04 00 00       	call   5be0 <sgx_ocfree>
    57c3:	5b                   	pop    %rbx
    57c4:	89 e8                	mov    %ebp,%eax
    57c6:	5d                   	pop    %rbp
    57c7:	41 5c                	pop    %r12
    57c9:	41 5d                	pop    %r13
    57cb:	41 5e                	pop    %r14
    57cd:	c3                   	ret    
    57ce:	66 90                	xchg   %ax,%ax
    57d0:	8b 03                	mov    (%rbx),%eax
    57d2:	f7 d8                	neg    %eax
    57d4:	19 ed                	sbb    %ebp,%ebp
    57d6:	83 e5 0e             	and    $0xe,%ebp
    57d9:	eb e3                	jmp    57be <sgx_mm_modify_ocall+0x4e>
    57db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    57e0:	e8 fb 03 00 00       	call   5be0 <sgx_ocfree>
    57e5:	bd 01 00 00 00       	mov    $0x1,%ebp
    57ea:	5b                   	pop    %rbx
    57eb:	89 e8                	mov    %ebp,%eax
    57ed:	5d                   	pop    %rbp
    57ee:	41 5c                	pop    %r12
    57f0:	41 5d                	pop    %r13
    57f2:	41 5e                	pop    %r14
    57f4:	c3                   	ret    
    57f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    57fc:	00 00 00 
    57ff:	90                   	nop

0000000000005800 <sgx_mm_register_pfhandler>:
    5800:	f3 0f 1e fa          	endbr64 
    5804:	31 c0                	xor    %eax,%eax
    5806:	48 83 3d 72 49 01 00 	cmpq   $0x0,0x14972(%rip)        # 1a180 <g_mm_pfhandler>
    580d:	00 
    580e:	74 08                	je     5818 <sgx_mm_register_pfhandler+0x18>
    5810:	c3                   	ret    
    5811:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5818:	48 89 3d 61 49 01 00 	mov    %rdi,0x14961(%rip)        # 1a180 <g_mm_pfhandler>
    581f:	b8 01 00 00 00       	mov    $0x1,%eax
    5824:	c3                   	ret    
    5825:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    582c:	00 00 00 
    582f:	90                   	nop

0000000000005830 <sgx_mm_unregister_pfhandler>:
    5830:	f3 0f 1e fa          	endbr64 
    5834:	31 c0                	xor    %eax,%eax
    5836:	48 39 3d 43 49 01 00 	cmp    %rdi,0x14943(%rip)        # 1a180 <g_mm_pfhandler>
    583d:	74 01                	je     5840 <sgx_mm_unregister_pfhandler+0x10>
    583f:	c3                   	ret    
    5840:	48 c7 05 35 49 01 00 	movq   $0x0,0x14935(%rip)        # 1a180 <g_mm_pfhandler>
    5847:	00 00 00 00 
    584b:	b8 01 00 00 00       	mov    $0x1,%eax
    5850:	c3                   	ret    
    5851:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5858:	00 00 00 
    585b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005860 <sgx_mm_mutex_create>:
    5860:	f3 0f 1e fa          	endbr64 
    5864:	48 83 ec 08          	sub    $0x8,%rsp
    5868:	bf 18 00 00 00       	mov    $0x18,%edi
    586d:	e8 9e 77 00 00       	call   d010 <dlmalloc>
    5872:	48 85 c0             	test   %rax,%rax
    5875:	74 16                	je     588d <sgx_mm_mutex_create+0x2d>
    5877:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    587e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    5885:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    588c:	00 
    588d:	48 83 c4 08          	add    $0x8,%rsp
    5891:	c3                   	ret    
    5892:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5899:	00 00 00 
    589c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000058a0 <sgx_mm_mutex_lock>:
    58a0:	f3 0f 1e fa          	endbr64 
    58a4:	53                   	push   %rbx
    58a5:	48 89 fb             	mov    %rdi,%rbx
    58a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    58af:	00 
    58b0:	48 89 df             	mov    %rbx,%rdi
    58b3:	e8 18 b1 00 00       	call   109d0 <sgx_thread_spin_trylock>
    58b8:	85 c0                	test   %eax,%eax
    58ba:	75 f4                	jne    58b0 <sgx_mm_mutex_lock+0x10>
    58bc:	5b                   	pop    %rbx
    58bd:	c3                   	ret    
    58be:	66 90                	xchg   %ax,%ax

00000000000058c0 <sgx_mm_mutex_unlock>:
    58c0:	f3 0f 1e fa          	endbr64 
    58c4:	e9 97 b1 00 00       	jmp    10a60 <sgx_thread_spin_unlock>
    58c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000058d0 <sgx_mm_mutex_destroy>:
    58d0:	f3 0f 1e fa          	endbr64 
    58d4:	55                   	push   %rbp
    58d5:	53                   	push   %rbx
    58d6:	48 89 fb             	mov    %rdi,%rbx
    58d9:	48 83 ec 08          	sub    $0x8,%rsp
    58dd:	e8 6e b0 00 00       	call   10950 <sgx_thread_spin_destroy>
    58e2:	48 89 df             	mov    %rbx,%rdi
    58e5:	89 c5                	mov    %eax,%ebp
    58e7:	e8 14 95 00 00       	call   ee00 <dlfree>
    58ec:	48 83 c4 08          	add    $0x8,%rsp
    58f0:	89 e8                	mov    %ebp,%eax
    58f2:	5b                   	pop    %rbx
    58f3:	5d                   	pop    %rbp
    58f4:	c3                   	ret    
    58f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    58fc:	00 00 00 
    58ff:	90                   	nop

0000000000005900 <sgx_mm_is_within_enclave>:
    5900:	f3 0f 1e fa          	endbr64 
    5904:	48 83 ec 08          	sub    $0x8,%rsp
    5908:	e8 33 01 00 00       	call   5a40 <sgx_is_within_enclave>
    590d:	85 c0                	test   %eax,%eax
    590f:	0f 95 c0             	setne  %al
    5912:	48 83 c4 08          	add    $0x8,%rsp
    5916:	c3                   	ret    
    5917:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    591e:	00 00 

0000000000005920 <init_optimized_libs>:
    5920:	f3 0f 1e fa          	endbr64 
    5924:	41 54                	push   %r12
    5926:	49 89 d4             	mov    %rdx,%r12
    5929:	55                   	push   %rbp
    592a:	48 89 f5             	mov    %rsi,%rbp
    592d:	53                   	push   %rbx
    592e:	48 89 fb             	mov    %rdi,%rbx
    5931:	e8 ce c5 00 00       	call   11f04 <get_enclave_state>
    5936:	83 f8 01             	cmp    $0x1,%eax
    5939:	0f 85 d6 00 00 00    	jne    5a15 <init_optimized_libs+0xf5>
    593f:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    5946:	ff ff 00 
    5949:	48 89 da             	mov    %rbx,%rdx
    594c:	48 21 c2             	and    %rax,%rdx
    594f:	48 39 d8             	cmp    %rbx,%rax
    5952:	48 0f 42 da          	cmovb  %rdx,%rbx
    5956:	48 81 fb ff 01 00 00 	cmp    $0x1ff,%rbx
    595d:	0f 86 b2 00 00 00    	jbe    5a15 <init_optimized_libs+0xf5>
    5963:	f6 c3 20             	test   $0x20,%bl
    5966:	74 0e                	je     5976 <init_optimized_libs+0x56>
    5968:	48 89 d8             	mov    %rbx,%rax
    596b:	48 f7 d0             	not    %rax
    596e:	a8 1f                	test   $0x1f,%al
    5970:	0f 85 9f 00 00 00    	jne    5a15 <init_optimized_libs+0xf5>
    5976:	f6 c3 40             	test   $0x40,%bl
    5979:	74 0e                	je     5989 <init_optimized_libs+0x69>
    597b:	48 89 d8             	mov    %rbx,%rax
    597e:	48 f7 d0             	not    %rax
    5981:	a8 3f                	test   $0x3f,%al
    5983:	0f 85 8c 00 00 00    	jne    5a15 <init_optimized_libs+0xf5>
    5989:	f6 c3 80             	test   $0x80,%bl
    598c:	74 0a                	je     5998 <init_optimized_libs+0x78>
    598e:	48 89 d8             	mov    %rbx,%rax
    5991:	48 f7 d0             	not    %rax
    5994:	a8 7f                	test   $0x7f,%al
    5996:	75 7d                	jne    5a15 <init_optimized_libs+0xf5>
    5998:	f6 c7 01             	test   $0x1,%bh
    599b:	74 0b                	je     59a8 <init_optimized_libs+0x88>
    599d:	0f b6 c3             	movzbl %bl,%eax
    59a0:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    59a6:	75 6d                	jne    5a15 <init_optimized_libs+0xf5>
    59a8:	f6 c7 02             	test   $0x2,%bh
    59ab:	74 0d                	je     59ba <init_optimized_libs+0x9a>
    59ad:	48 89 d8             	mov    %rbx,%rax
    59b0:	48 f7 d0             	not    %rax
    59b3:	a9 ff 01 00 00       	test   $0x1ff,%eax
    59b8:	75 5b                	jne    5a15 <init_optimized_libs+0xf5>
    59ba:	f6 c7 04             	test   $0x4,%bh
    59bd:	75 49                	jne    5a08 <init_optimized_libs+0xe8>
    59bf:	4c 89 e0             	mov    %r12,%rax
    59c2:	48 f7 d0             	not    %rax
    59c5:	a8 06                	test   $0x6,%al
    59c7:	74 57                	je     5a20 <init_optimized_libs+0x100>
    59c9:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    59d0:	20 fe ff 
    59d3:	48 21 c3             	and    %rax,%rbx
    59d6:	4c 8d 25 53 24 01 00 	lea    0x12453(%rip),%r12        # 17e30 <g_cpu_feature_indicator>
    59dd:	48 89 df             	mov    %rbx,%rdi
    59e0:	49 89 1c 24          	mov    %rbx,(%r12)
    59e4:	e8 b7 ae 00 00       	call   108a0 <sgx_init_string_lib>
    59e9:	85 c0                	test   %eax,%eax
    59eb:	75 28                	jne    5a15 <init_optimized_libs+0xf5>
    59ed:	49 8b 3c 24          	mov    (%r12),%rdi
    59f1:	48 89 ee             	mov    %rbp,%rsi
    59f4:	e8 a7 b4 00 00       	call   10ea0 <sgx_init_crypto_lib>
    59f9:	5b                   	pop    %rbx
    59fa:	5d                   	pop    %rbp
    59fb:	f7 d8                	neg    %eax
    59fd:	41 5c                	pop    %r12
    59ff:	19 c0                	sbb    %eax,%eax
    5a01:	c3                   	ret    
    5a02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5a08:	48 89 d8             	mov    %rbx,%rax
    5a0b:	48 f7 d0             	not    %rax
    5a0e:	a9 ff 03 00 00       	test   $0x3ff,%eax
    5a13:	74 aa                	je     59bf <init_optimized_libs+0x9f>
    5a15:	5b                   	pop    %rbx
    5a16:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5a1b:	5d                   	pop    %rbp
    5a1c:	41 5c                	pop    %r12
    5a1e:	c3                   	ret    
    5a1f:	90                   	nop
    5a20:	4c 89 e0             	mov    %r12,%rax
    5a23:	48 f7 d0             	not    %rax
    5a26:	a8 e0                	test   $0xe0,%al
    5a28:	74 ac                	je     59d6 <init_optimized_libs+0xb6>
    5a2a:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    5a31:	e0 fe ff 
    5a34:	48 21 c3             	and    %rax,%rbx
    5a37:	eb 9d                	jmp    59d6 <init_optimized_libs+0xb6>
    5a39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005a40 <sgx_is_within_enclave>:
    5a40:	f3 0f 1e fa          	endbr64 
    5a44:	48 8d 05 d5 23 01 00 	lea    0x123d5(%rip),%rax        # 17e20 <g_enclave_base>
    5a4b:	48 8b 10             	mov    (%rax),%rdx
    5a4e:	48 8d 05 c3 23 01 00 	lea    0x123c3(%rip),%rax        # 17e18 <g_enclave_size>
    5a55:	48 8b 08             	mov    (%rax),%rcx
    5a58:	48 01 d1             	add    %rdx,%rcx
    5a5b:	48 89 c8             	mov    %rcx,%rax
    5a5e:	48 83 e8 01          	sub    $0x1,%rax
    5a62:	48 85 f6             	test   %rsi,%rsi
    5a65:	74 21                	je     5a88 <sgx_is_within_enclave+0x48>
    5a67:	48 83 ee 01          	sub    $0x1,%rsi
    5a6b:	48 01 fe             	add    %rdi,%rsi
    5a6e:	0f 93 c1             	setae  %cl
    5a71:	48 39 d7             	cmp    %rdx,%rdi
    5a74:	0f 93 c2             	setae  %dl
    5a77:	21 ca                	and    %ecx,%edx
    5a79:	48 39 f0             	cmp    %rsi,%rax
    5a7c:	0f 93 c0             	setae  %al
    5a7f:	0f b6 c0             	movzbl %al,%eax
    5a82:	21 d0                	and    %edx,%eax
    5a84:	c3                   	ret    
    5a85:	0f 1f 00             	nopl   (%rax)
    5a88:	48 89 fe             	mov    %rdi,%rsi
    5a8b:	b9 01 00 00 00       	mov    $0x1,%ecx
    5a90:	eb df                	jmp    5a71 <sgx_is_within_enclave+0x31>
    5a92:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5a99:	00 00 00 
    5a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005aa0 <sgx_is_outside_enclave>:
    5aa0:	f3 0f 1e fa          	endbr64 
    5aa4:	48 85 f6             	test   %rsi,%rsi
    5aa7:	74 17                	je     5ac0 <sgx_is_outside_enclave+0x20>
    5aa9:	48 83 ee 01          	sub    $0x1,%rsi
    5aad:	b8 00 00 00 00       	mov    $0x0,%eax
    5ab2:	48 01 fe             	add    %rdi,%rsi
    5ab5:	73 0c                	jae    5ac3 <sgx_is_outside_enclave+0x23>
    5ab7:	c3                   	ret    
    5ab8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5abf:	00 
    5ac0:	48 89 fe             	mov    %rdi,%rsi
    5ac3:	48 8d 05 56 23 01 00 	lea    0x12356(%rip),%rax        # 17e20 <g_enclave_base>
    5aca:	48 8b 10             	mov    (%rax),%rdx
    5acd:	48 8d 05 44 23 01 00 	lea    0x12344(%rip),%rax        # 17e18 <g_enclave_size>
    5ad4:	48 8b 08             	mov    (%rax),%rcx
    5ad7:	48 01 d1             	add    %rdx,%rcx
    5ada:	48 89 c8             	mov    %rcx,%rax
    5add:	48 83 e8 01          	sub    $0x1,%rax
    5ae1:	48 39 f8             	cmp    %rdi,%rax
    5ae4:	0f 92 c0             	setb   %al
    5ae7:	48 39 d6             	cmp    %rdx,%rsi
    5aea:	0f 92 c2             	setb   %dl
    5aed:	09 d0                	or     %edx,%eax
    5aef:	0f b6 c0             	movzbl %al,%eax
    5af2:	c3                   	ret    
    5af3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5afa:	00 00 00 
    5afd:	0f 1f 00             	nopl   (%rax)

0000000000005b00 <sgx_ocalloc>:
    5b00:	f3 0f 1e fa          	endbr64 
    5b04:	53                   	push   %rbx
    5b05:	48 89 fb             	mov    %rdi,%rbx
    5b08:	48 83 ec 10          	sub    $0x10,%rsp
    5b0c:	e8 32 c4 00 00       	call   11f43 <get_thread_data>
    5b11:	48 8d 15 08 23 01 00 	lea    0x12308(%rip),%rdx        # 17e20 <g_enclave_base>
    5b18:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5b1c:	48 8b 3a             	mov    (%rdx),%rdi
    5b1f:	48 8d 15 f2 22 01 00 	lea    0x122f2(%rip),%rdx        # 17e18 <g_enclave_size>
    5b26:	48 8b 86 90 00 00 00 	mov    0x90(%rsi),%rax
    5b2d:	48 8b 0a             	mov    (%rdx),%rcx
    5b30:	48 89 c2             	mov    %rax,%rdx
    5b33:	48 83 c2 07          	add    $0x7,%rdx
    5b37:	72 33                	jb     5b6c <sgx_ocalloc+0x6c>
    5b39:	4c 8d 44 0f ff       	lea    -0x1(%rdi,%rcx,1),%r8
    5b3e:	48 39 fa             	cmp    %rdi,%rdx
    5b41:	72 05                	jb     5b48 <sgx_ocalloc+0x48>
    5b43:	49 39 c0             	cmp    %rax,%r8
    5b46:	73 24                	jae    5b6c <sgx_ocalloc+0x6c>
    5b48:	48 39 d8             	cmp    %rbx,%rax
    5b4b:	72 1f                	jb     5b6c <sgx_ocalloc+0x6c>
    5b4d:	48 89 c2             	mov    %rax,%rdx
    5b50:	48 29 da             	sub    %rbx,%rdx
    5b53:	48 89 d1             	mov    %rdx,%rcx
    5b56:	48 83 e1 f0          	and    $0xfffffffffffffff0,%rcx
    5b5a:	48 85 db             	test   %rbx,%rbx
    5b5d:	75 19                	jne    5b78 <sgx_ocalloc+0x78>
    5b5f:	48 89 cb             	mov    %rcx,%rbx
    5b62:	48 39 fb             	cmp    %rdi,%rbx
    5b65:	72 21                	jb     5b88 <sgx_ocalloc+0x88>
    5b67:	49 39 c8             	cmp    %rcx,%r8
    5b6a:	72 1c                	jb     5b88 <sgx_ocalloc+0x88>
    5b6c:	e8 c6 c7 00 00       	call   12337 <abort>
    5b71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5b78:	48 83 eb 01          	sub    $0x1,%rbx
    5b7c:	48 01 cb             	add    %rcx,%rbx
    5b7f:	72 eb                	jb     5b6c <sgx_ocalloc+0x6c>
    5b81:	eb df                	jmp    5b62 <sgx_ocalloc+0x62>
    5b83:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5b88:	48 83 e8 01          	sub    $0x1,%rax
    5b8c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    5b92:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    5b99:	75 1d                	jne    5bb8 <sgx_ocalloc+0xb8>
    5b9b:	eb cf                	jmp    5b6c <sgx_ocalloc+0x6c>
    5b9d:	0f 1f 00             	nopl   (%rax)
    5ba0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5ba5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5baa:	c6 00 00             	movb   $0x0,(%rax)
    5bad:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5bb2:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    5bb8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5bbd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5bc2:	48 39 d0             	cmp    %rdx,%rax
    5bc5:	73 d9                	jae    5ba0 <sgx_ocalloc+0xa0>
    5bc7:	48 89 8e 90 00 00 00 	mov    %rcx,0x90(%rsi)
    5bce:	48 83 c4 10          	add    $0x10,%rsp
    5bd2:	48 89 c8             	mov    %rcx,%rax
    5bd5:	5b                   	pop    %rbx
    5bd6:	c3                   	ret    
    5bd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5bde:	00 00 

0000000000005be0 <sgx_ocfree>:
    5be0:	f3 0f 1e fa          	endbr64 
    5be4:	48 83 ec 08          	sub    $0x8,%rsp
    5be8:	e8 56 c3 00 00       	call   11f43 <get_thread_data>
    5bed:	48 8d 15 2c 22 01 00 	lea    0x1222c(%rip),%rdx        # 17e20 <g_enclave_base>
    5bf4:	48 8d 0d 1d 22 01 00 	lea    0x1221d(%rip),%rcx        # 17e18 <g_enclave_size>
    5bfb:	48 8b 70 20          	mov    0x20(%rax),%rsi
    5bff:	48 8b 40 08          	mov    0x8(%rax),%rax
    5c03:	48 8b 12             	mov    (%rdx),%rdx
    5c06:	48 8b 09             	mov    (%rcx),%rcx
    5c09:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    5c0d:	48 89 c7             	mov    %rax,%rdi
    5c10:	48 83 c7 07          	add    $0x7,%rdi
    5c14:	72 0f                	jb     5c25 <sgx_ocfree+0x45>
    5c16:	48 8d 4c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rcx
    5c1b:	48 39 c1             	cmp    %rax,%rcx
    5c1e:	72 10                	jb     5c30 <sgx_ocfree+0x50>
    5c20:	48 39 d7             	cmp    %rdx,%rdi
    5c23:	72 0b                	jb     5c30 <sgx_ocfree+0x50>
    5c25:	e8 0d c7 00 00       	call   12337 <abort>
    5c2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5c30:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    5c37:	48 83 c4 08          	add    $0x8,%rsp
    5c3b:	c3                   	ret    
    5c3c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005c40 <sgx_read_rand>:
    5c40:	f3 0f 1e fa          	endbr64 
    5c44:	41 55                	push   %r13
    5c46:	41 54                	push   %r12
    5c48:	55                   	push   %rbp
    5c49:	53                   	push   %rbx
    5c4a:	48 83 ec 18          	sub    $0x18,%rsp
    5c4e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5c55:	00 00 
    5c57:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5c5c:	31 c0                	xor    %eax,%eax
    5c5e:	48 85 ff             	test   %rdi,%rdi
    5c61:	0f 84 f9 00 00 00    	je     5d60 <sgx_read_rand+0x120>
    5c67:	48 89 f3             	mov    %rsi,%rbx
    5c6a:	48 85 f6             	test   %rsi,%rsi
    5c6d:	0f 84 ed 00 00 00    	je     5d60 <sgx_read_rand+0x120>
    5c73:	48 8d 05 a6 21 01 00 	lea    0x121a6(%rip),%rax        # 17e20 <g_enclave_base>
    5c7a:	48 89 fd             	mov    %rdi,%rbp
    5c7d:	31 ff                	xor    %edi,%edi
    5c7f:	48 8b 08             	mov    (%rax),%rcx
    5c82:	48 8d 05 8f 21 01 00 	lea    0x1218f(%rip),%rax        # 17e18 <g_enclave_size>
    5c89:	48 8b 10             	mov    (%rax),%rdx
    5c8c:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
    5c90:	48 01 ca             	add    %rcx,%rdx
    5c93:	48 83 ea 01          	sub    $0x1,%rdx
    5c97:	48 01 e8             	add    %rbp,%rax
    5c9a:	40 0f 92 c7          	setb   %dil
    5c9e:	48 39 c2             	cmp    %rax,%rdx
    5ca1:	41 0f 93 c0          	setae  %r8b
    5ca5:	48 85 ff             	test   %rdi,%rdi
    5ca8:	40 0f 94 c6          	sete   %sil
    5cac:	41 84 f0             	test   %sil,%r8b
    5caf:	74 05                	je     5cb6 <sgx_read_rand+0x76>
    5cb1:	48 39 cd             	cmp    %rcx,%rbp
    5cb4:	73 42                	jae    5cf8 <sgx_read_rand+0xb8>
    5cb6:	be 02 00 00 00       	mov    $0x2,%esi
    5cbb:	48 85 ff             	test   %rdi,%rdi
    5cbe:	74 28                	je     5ce8 <sgx_read_rand+0xa8>
    5cc0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5cc5:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5ccc:	00 00 
    5cce:	0f 85 96 00 00 00    	jne    5d6a <sgx_read_rand+0x12a>
    5cd4:	48 83 c4 18          	add    $0x18,%rsp
    5cd8:	89 f0                	mov    %esi,%eax
    5cda:	5b                   	pop    %rbx
    5cdb:	5d                   	pop    %rbp
    5cdc:	41 5c                	pop    %r12
    5cde:	41 5d                	pop    %r13
    5ce0:	c3                   	ret    
    5ce1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ce8:	48 39 c8             	cmp    %rcx,%rax
    5ceb:	72 0b                	jb     5cf8 <sgx_read_rand+0xb8>
    5ced:	48 39 d5             	cmp    %rdx,%rbp
    5cf0:	76 ce                	jbe    5cc0 <sgx_read_rand+0x80>
    5cf2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5cf8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    5cff:	00 
    5d00:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    5d05:	4c 89 ef             	mov    %r13,%rdi
    5d08:	e8 07 c6 00 00       	call   12314 <do_rdrand>
    5d0d:	85 c0                	test   %eax,%eax
    5d0f:	74 3f                	je     5d50 <sgx_read_rand+0x110>
    5d11:	41 bc 04 00 00 00    	mov    $0x4,%r12d
    5d17:	48 89 ef             	mov    %rbp,%rdi
    5d1a:	4c 89 ee             	mov    %r13,%rsi
    5d1d:	4c 39 e3             	cmp    %r12,%rbx
    5d20:	4c 0f 46 e3          	cmovbe %rbx,%r12
    5d24:	4c 89 e2             	mov    %r12,%rdx
    5d27:	4c 01 e5             	add    %r12,%rbp
    5d2a:	e8 81 a8 00 00       	call   105b0 <memcpy>
    5d2f:	4c 29 e3             	sub    %r12,%rbx
    5d32:	75 d1                	jne    5d05 <sgx_read_rand+0xc5>
    5d34:	be 04 00 00 00       	mov    $0x4,%esi
    5d39:	b9 04 00 00 00       	mov    $0x4,%ecx
    5d3e:	31 d2                	xor    %edx,%edx
    5d40:	4c 89 ef             	mov    %r13,%rdi
    5d43:	e8 b8 aa 00 00       	call   10800 <memset_s>
    5d48:	31 f6                	xor    %esi,%esi
    5d4a:	e9 71 ff ff ff       	jmp    5cc0 <sgx_read_rand+0x80>
    5d4f:	90                   	nop
    5d50:	be 01 00 00 00       	mov    $0x1,%esi
    5d55:	e9 66 ff ff ff       	jmp    5cc0 <sgx_read_rand+0x80>
    5d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5d60:	be 02 00 00 00       	mov    $0x2,%esi
    5d65:	e9 56 ff ff ff       	jmp    5cc0 <sgx_read_rand+0x80>
    5d6a:	e8 51 ab 00 00       	call   108c0 <__stack_chk_fail>
    5d6f:	90                   	nop

0000000000005d70 <check_static_stack_canary>:
    5d70:	f3 0f 1e fa          	endbr64 
    5d74:	48 8d 05 8d 20 01 00 	lea    0x1208d(%rip),%rax        # 17e08 <__intel_security_cookie>
    5d7b:	48 8b 00             	mov    (%rax),%rax
    5d7e:	48 39 87 08 fc fe ff 	cmp    %rax,-0x103f8(%rdi)
    5d85:	0f 95 c0             	setne  %al
    5d88:	0f b6 c0             	movzbl %al,%eax
    5d8b:	f7 d8                	neg    %eax
    5d8d:	c3                   	ret    
    5d8e:	66 90                	xchg   %ax,%ax

0000000000005d90 <sgx_rdpkru>:
    5d90:	f3 0f 1e fa          	endbr64 
    5d94:	53                   	push   %rbx
    5d95:	48 89 fb             	mov    %rdi,%rbx
    5d98:	e8 63 18 00 00       	call   7600 <is_pkru_enabled>
    5d9d:	89 c2                	mov    %eax,%edx
    5d9f:	31 c0                	xor    %eax,%eax
    5da1:	84 d2                	test   %dl,%dl
    5da3:	74 0c                	je     5db1 <sgx_rdpkru+0x21>
    5da5:	89 c1                	mov    %eax,%ecx
    5da7:	0f 01 ee             	rdpkru 
    5daa:	89 03                	mov    %eax,(%rbx)
    5dac:	b8 01 00 00 00       	mov    $0x1,%eax
    5db1:	5b                   	pop    %rbx
    5db2:	c3                   	ret    
    5db3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5dba:	00 00 00 
    5dbd:	0f 1f 00             	nopl   (%rax)

0000000000005dc0 <sgx_wrpkru>:
    5dc0:	f3 0f 1e fa          	endbr64 
    5dc4:	53                   	push   %rbx
    5dc5:	89 fb                	mov    %edi,%ebx
    5dc7:	e8 34 18 00 00       	call   7600 <is_pkru_enabled>
    5dcc:	31 d2                	xor    %edx,%edx
    5dce:	84 c0                	test   %al,%al
    5dd0:	74 0c                	je     5dde <sgx_wrpkru+0x1e>
    5dd2:	89 d8                	mov    %ebx,%eax
    5dd4:	89 d1                	mov    %edx,%ecx
    5dd6:	0f 01 ef             	wrpkru 
    5dd9:	ba 01 00 00 00       	mov    $0x1,%edx
    5dde:	89 d0                	mov    %edx,%eax
    5de0:	5b                   	pop    %rbx
    5de1:	c3                   	ret    
    5de2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5de9:	00 00 00 
    5dec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>:
    5df0:	41 55                	push   %r13
    5df2:	49 89 cd             	mov    %rcx,%r13
    5df5:	41 54                	push   %r12
    5df7:	55                   	push   %rbp
    5df8:	53                   	push   %rbx
    5df9:	48 83 ec 08          	sub    $0x8,%rsp
    5dfd:	48 8d 0d 7c d3 00 00 	lea    0xd37c(%rip),%rcx        # 13180 <g_global_data>
    5e04:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5e0a:	85 c0                	test   %eax,%eax
    5e0c:	0f 84 8e 00 00 00    	je     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e12:	48 89 d3             	mov    %rdx,%rbx
    5e15:	49 89 fc             	mov    %rdi,%r12
    5e18:	31 d2                	xor    %edx,%edx
    5e1a:	eb 11                	jmp    5e2d <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x3d>
    5e1c:	0f 1f 40 00          	nopl   0x0(%rax)
    5e20:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5e26:	83 c2 01             	add    $0x1,%edx
    5e29:	39 c2                	cmp    %eax,%edx
    5e2b:	73 73                	jae    5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e2d:	89 d0                	mov    %edx,%eax
    5e2f:	48 83 c0 0b          	add    $0xb,%rax
    5e33:	48 c1 e0 05          	shl    $0x5,%rax
    5e37:	48 01 c8             	add    %rcx,%rax
    5e3a:	0f b7 00             	movzwl (%rax),%eax
    5e3d:	66 39 c6             	cmp    %ax,%si
    5e40:	75 de                	jne    5e20 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0x30>
    5e42:	8d 42 0b             	lea    0xb(%rdx),%eax
    5e45:	48 c1 e0 05          	shl    $0x5,%rax
    5e49:	48 01 c1             	add    %rax,%rcx
    5e4c:	48 89 cd             	mov    %rcx,%rbp
    5e4f:	74 4f                	je     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e51:	e8 a2 c0 00 00       	call   11ef8 <get_enclave_base>
    5e56:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    5e5a:	48 01 da             	add    %rbx,%rdx
    5e5d:	48 01 d0             	add    %rdx,%rax
    5e60:	8b 55 04             	mov    0x4(%rbp),%edx
    5e63:	49 39 c4             	cmp    %rax,%r12
    5e66:	72 38                	jb     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e68:	48 c1 e2 0c          	shl    $0xc,%rdx
    5e6c:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    5e73:	48 01 c2             	add    %rax,%rdx
    5e76:	4c 39 e2             	cmp    %r12,%rdx
    5e79:	72 25                	jb     5ea0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xb0>
    5e7b:	4d 85 ed             	test   %r13,%r13
    5e7e:	74 11                	je     5e91 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa1>
    5e80:	48 8b 45 18          	mov    0x18(%rbp),%rax
    5e84:	49 89 45 00          	mov    %rax,0x0(%r13)
    5e88:	0f b7 45 02          	movzwl 0x2(%rbp),%eax
    5e8c:	66 41 89 45 08       	mov    %ax,0x8(%r13)
    5e91:	31 c0                	xor    %eax,%eax
    5e93:	48 83 c4 08          	add    $0x8,%rsp
    5e97:	5b                   	pop    %rbx
    5e98:	5d                   	pop    %rbp
    5e99:	41 5c                	pop    %r12
    5e9b:	41 5d                	pop    %r13
    5e9d:	c3                   	ret    
    5e9e:	66 90                	xchg   %ax,%ax
    5ea0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5ea5:	eb ec                	jmp    5e93 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0+0xa3>
    5ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5eae:	00 00 

0000000000005eb0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>:
    5eb0:	48 81 ff ff ef ff ff 	cmp    $0xffffffffffffefff,%rdi
    5eb7:	0f 87 c3 01 00 00    	ja     6080 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1d0>
    5ebd:	41 57                	push   %r15
    5ebf:	41 56                	push   %r14
    5ec1:	41 55                	push   %r13
    5ec3:	41 54                	push   %r12
    5ec5:	49 89 f4             	mov    %rsi,%r12
    5ec8:	55                   	push   %rbp
    5ec9:	48 89 d5             	mov    %rdx,%rbp
    5ecc:	53                   	push   %rbx
    5ecd:	48 89 fb             	mov    %rdi,%rbx
    5ed0:	48 83 ec 08          	sub    $0x8,%rsp
    5ed4:	e8 87 13 00 00       	call   7260 <get_heap_base>
    5ed9:	49 89 c5             	mov    %rax,%r13
    5edc:	e8 0f 14 00 00       	call   72f0 <get_heap_min_size>
    5ee1:	49 01 c5             	add    %rax,%r13
    5ee4:	e8 97 13 00 00       	call   7280 <get_heap_size>
    5ee9:	49 89 c6             	mov    %rax,%r14
    5eec:	e8 ff 13 00 00       	call   72f0 <get_heap_min_size>
    5ef1:	49 29 c6             	sub    %rax,%r14
    5ef4:	4c 39 eb             	cmp    %r13,%rbx
    5ef7:	72 37                	jb     5f30 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    5ef9:	48 8d 83 00 10 00 00 	lea    0x1000(%rbx),%rax
    5f00:	4d 01 f5             	add    %r14,%r13
    5f03:	49 39 c5             	cmp    %rax,%r13
    5f06:	72 28                	jb     5f30 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x80>
    5f08:	48 85 ed             	test   %rbp,%rbp
    5f0b:	74 11                	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    5f0d:	b8 08 00 00 00       	mov    $0x8,%eax
    5f12:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    5f19:	00 
    5f1a:	66 89 45 08          	mov    %ax,0x8(%rbp)
    5f1e:	31 c0                	xor    %eax,%eax
    5f20:	48 83 c4 08          	add    $0x8,%rsp
    5f24:	5b                   	pop    %rbx
    5f25:	5d                   	pop    %rbp
    5f26:	41 5c                	pop    %r12
    5f28:	41 5d                	pop    %r13
    5f2a:	41 5e                	pop    %r14
    5f2c:	41 5f                	pop    %r15
    5f2e:	c3                   	ret    
    5f2f:	90                   	nop
    5f30:	31 d2                	xor    %edx,%edx
    5f32:	48 89 e9             	mov    %rbp,%rcx
    5f35:	be 07 00 00 00       	mov    $0x7,%esi
    5f3a:	48 89 df             	mov    %rbx,%rdi
    5f3d:	e8 ae fe ff ff       	call   5df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    5f42:	85 c0                	test   %eax,%eax
    5f44:	74 d8                	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    5f46:	48 8d 15 1b 1f 01 00 	lea    0x11f1b(%rip),%rdx        # 17e68 <rsrv_mem_size>
    5f4d:	48 8d 05 1c 1f 01 00 	lea    0x11f1c(%rip),%rax        # 17e70 <rsrv_mem_base>
    5f54:	48 8b 0a             	mov    (%rdx),%rcx
    5f57:	48 8d 15 02 1f 01 00 	lea    0x11f02(%rip),%rdx        # 17e60 <rsrv_mem_min_size>
    5f5e:	48 8b 00             	mov    (%rax),%rax
    5f61:	48 8b 32             	mov    (%rdx),%rsi
    5f64:	48 01 c6             	add    %rax,%rsi
    5f67:	48 39 f3             	cmp    %rsi,%rbx
    5f6a:	72 0f                	jb     5f7b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xcb>
    5f6c:	48 8d 93 00 10 00 00 	lea    0x1000(%rbx),%rdx
    5f73:	48 01 c8             	add    %rcx,%rax
    5f76:	48 39 d0             	cmp    %rdx,%rax
    5f79:	73 8d                	jae    5f08 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x58>
    5f7b:	48 8d 0d fe d1 00 00 	lea    0xd1fe(%rip),%rcx        # 13180 <g_global_data>
    5f82:	31 d2                	xor    %edx,%edx
    5f84:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5f8a:	85 c0                	test   %eax,%eax
    5f8c:	74 25                	je     5fb3 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x103>
    5f8e:	66 90                	xchg   %ax,%ax
    5f90:	89 d0                	mov    %edx,%eax
    5f92:	48 83 c0 0b          	add    $0xb,%rax
    5f96:	48 c1 e0 05          	shl    $0x5,%rax
    5f9a:	48 01 c8             	add    %rcx,%rax
    5f9d:	0f b7 00             	movzwl (%rax),%eax
    5fa0:	66 3d 13 10          	cmp    $0x1013,%ax
    5fa4:	74 42                	je     5fe8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x138>
    5fa6:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    5fac:	83 c2 01             	add    $0x1,%edx
    5faf:	39 c2                	cmp    %eax,%edx
    5fb1:	72 dd                	jb     5f90 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0xe0>
    5fb3:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    5fb9:	31 d2                	xor    %edx,%edx
    5fbb:	48 89 e9             	mov    %rbp,%rcx
    5fbe:	44 89 ee             	mov    %r13d,%esi
    5fc1:	48 89 df             	mov    %rbx,%rdi
    5fc4:	e8 27 fe ff ff       	call   5df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    5fc9:	85 c0                	test   %eax,%eax
    5fcb:	0f 84 96 00 00 00    	je     6067 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1b7>
    5fd1:	41 83 c5 01          	add    $0x1,%r13d
    5fd5:	41 83 fd 13          	cmp    $0x13,%r13d
    5fd9:	75 de                	jne    5fb9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    5fdb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5fe0:	e9 3b ff ff ff       	jmp    5f20 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x70>
    5fe5:	0f 1f 00             	nopl   (%rax)
    5fe8:	8d 42 0b             	lea    0xb(%rdx),%eax
    5feb:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    5ff1:	48 c1 e0 05          	shl    $0x5,%rax
    5ff5:	48 01 c1             	add    %rax,%rcx
    5ff8:	49 89 ce             	mov    %rcx,%r14
    5ffb:	74 bc                	je     5fb9 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x109>
    5ffd:	41 8b 46 04          	mov    0x4(%r14),%eax
    6001:	45 31 ff             	xor    %r15d,%r15d
    6004:	83 f8 ff             	cmp    $0xffffffff,%eax
    6007:	75 17                	jne    6020 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x170>
    6009:	eb 4d                	jmp    6058 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    600b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6010:	41 8b 46 04          	mov    0x4(%r14),%eax
    6014:	49 83 c7 01          	add    $0x1,%r15
    6018:	83 c0 01             	add    $0x1,%eax
    601b:	41 39 c7             	cmp    %eax,%r15d
    601e:	73 38                	jae    6058 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x1a8>
    6020:	49 8b 56 08          	mov    0x8(%r14),%rdx
    6024:	48 89 e9             	mov    %rbp,%rcx
    6027:	44 89 ee             	mov    %r13d,%esi
    602a:	48 89 df             	mov    %rbx,%rdi
    602d:	49 0f af d7          	imul   %r15,%rdx
    6031:	e8 ba fd ff ff       	call   5df0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.constprop.0>
    6036:	85 c0                	test   %eax,%eax
    6038:	75 d6                	jne    6010 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x160>
    603a:	4d 85 e4             	test   %r12,%r12
    603d:	0f 84 db fe ff ff    	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6043:	49 8b 46 08          	mov    0x8(%r14),%rax
    6047:	49 0f af c7          	imul   %r15,%rax
    604b:	49 89 04 24          	mov    %rax,(%r12)
    604f:	e9 ca fe ff ff       	jmp    5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6054:	0f 1f 40 00          	nopl   0x0(%rax)
    6058:	41 83 c5 01          	add    $0x1,%r13d
    605c:	41 83 fd 13          	cmp    $0x13,%r13d
    6060:	75 9b                	jne    5ffd <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x14d>
    6062:	e9 74 ff ff ff       	jmp    5fdb <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x12b>
    6067:	4d 85 e4             	test   %r12,%r12
    606a:	0f 84 ae fe ff ff    	je     5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    6070:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    6077:	00 
    6078:	e9 a1 fe ff ff       	jmp    5f1e <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0+0x6e>
    607d:	0f 1f 00             	nopl   (%rax)
    6080:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6085:	c3                   	ret    
    6086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    608d:	00 00 00 

0000000000006090 <_Z24get_dynamic_layout_by_idt>:
    6090:	f3 0f 1e fa          	endbr64 
    6094:	48 8d 05 e5 d0 00 00 	lea    0xd0e5(%rip),%rax        # 13180 <g_global_data>
    609b:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    60a1:	85 d2                	test   %edx,%edx
    60a3:	74 3b                	je     60e0 <_Z24get_dynamic_layout_by_idt+0x50>
    60a5:	31 c9                	xor    %ecx,%ecx
    60a7:	eb 14                	jmp    60bd <_Z24get_dynamic_layout_by_idt+0x2d>
    60a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    60b0:	8b 90 58 01 00 00    	mov    0x158(%rax),%edx
    60b6:	83 c1 01             	add    $0x1,%ecx
    60b9:	39 d1                	cmp    %edx,%ecx
    60bb:	73 23                	jae    60e0 <_Z24get_dynamic_layout_by_idt+0x50>
    60bd:	89 ca                	mov    %ecx,%edx
    60bf:	48 83 c2 0b          	add    $0xb,%rdx
    60c3:	48 c1 e2 05          	shl    $0x5,%rdx
    60c7:	48 01 c2             	add    %rax,%rdx
    60ca:	0f b7 12             	movzwl (%rdx),%edx
    60cd:	66 39 fa             	cmp    %di,%dx
    60d0:	75 de                	jne    60b0 <_Z24get_dynamic_layout_by_idt+0x20>
    60d2:	8d 51 0b             	lea    0xb(%rcx),%edx
    60d5:	48 c1 e2 05          	shl    $0x5,%rdx
    60d9:	48 01 d0             	add    %rdx,%rax
    60dc:	c3                   	ret    
    60dd:	0f 1f 00             	nopl   (%rax)
    60e0:	31 c0                	xor    %eax,%eax
    60e2:	c3                   	ret    
    60e3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    60ea:	00 00 00 
    60ed:	0f 1f 00             	nopl   (%rax)

00000000000060f0 <is_dynamic_thread>:
    60f0:	f3 0f 1e fa          	endbr64 
    60f4:	48 83 ec 28          	sub    $0x28,%rsp
    60f8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    60ff:	00 00 
    6101:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6106:	31 c0                	xor    %eax,%eax
    6108:	48 85 ff             	test   %rdi,%rdi
    610b:	74 0e                	je     611b <is_dynamic_thread+0x2b>
    610d:	31 f6                	xor    %esi,%esi
    610f:	48 89 e2             	mov    %rsp,%rdx
    6112:	e8 99 fd ff ff       	call   5eb0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6117:	85 c0                	test   %eax,%eax
    6119:	74 1d                	je     6138 <is_dynamic_thread+0x48>
    611b:	31 c0                	xor    %eax,%eax
    611d:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    6122:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6129:	00 00 
    612b:	75 1a                	jne    6147 <is_dynamic_thread+0x57>
    612d:	48 83 c4 28          	add    $0x28,%rsp
    6131:	c3                   	ret    
    6132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6138:	31 c0                	xor    %eax,%eax
    613a:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    6141:	00 
    6142:	0f 94 c0             	sete   %al
    6145:	eb d6                	jmp    611d <is_dynamic_thread+0x2d>
    6147:	e8 74 a7 00 00       	call   108c0 <__stack_chk_fail>
    614c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006150 <is_dynamic_thread_exist>:
    6150:	f3 0f 1e fa          	endbr64 
    6154:	48 8d 05 d1 1c 01 00 	lea    0x11cd1(%rip),%rax        # 17e2c <EDMM_supported>
    615b:	8b 00                	mov    (%rax),%eax
    615d:	85 c0                	test   %eax,%eax
    615f:	74 59                	je     61ba <is_dynamic_thread_exist+0x6a>
    6161:	48 8d 0d 18 d0 00 00 	lea    0xd018(%rip),%rcx        # 13180 <g_global_data>
    6168:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    616e:	85 c0                	test   %eax,%eax
    6170:	74 46                	je     61b8 <is_dynamic_thread_exist+0x68>
    6172:	31 d2                	xor    %edx,%edx
    6174:	eb 17                	jmp    618d <is_dynamic_thread_exist+0x3d>
    6176:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    617d:	00 00 00 
    6180:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    6186:	83 c2 01             	add    $0x1,%edx
    6189:	39 c2                	cmp    %eax,%edx
    618b:	73 2b                	jae    61b8 <is_dynamic_thread_exist+0x68>
    618d:	89 d0                	mov    %edx,%eax
    618f:	48 83 c0 0b          	add    $0xb,%rax
    6193:	48 c1 e0 05          	shl    $0x5,%rax
    6197:	48 01 c8             	add    %rcx,%rax
    619a:	0f b7 00             	movzwl (%rax),%eax
    619d:	66 83 f8 12          	cmp    $0x12,%ax
    61a1:	75 dd                	jne    6180 <is_dynamic_thread_exist+0x30>
    61a3:	8d 42 0b             	lea    0xb(%rdx),%eax
    61a6:	48 c1 e0 05          	shl    $0x5,%rax
    61aa:	48 01 c1             	add    %rax,%rcx
    61ad:	0f 95 c0             	setne  %al
    61b0:	0f b6 c0             	movzbl %al,%eax
    61b3:	c3                   	ret    
    61b4:	0f 1f 40 00          	nopl   0x0(%rax)
    61b8:	31 c0                	xor    %eax,%eax
    61ba:	c3                   	ret    
    61bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000061c0 <get_dynamic_stack_max_page>:
    61c0:	f3 0f 1e fa          	endbr64 
    61c4:	48 8d 0d b5 cf 00 00 	lea    0xcfb5(%rip),%rcx        # 13180 <g_global_data>
    61cb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    61d1:	85 c0                	test   %eax,%eax
    61d3:	74 45                	je     621a <get_dynamic_stack_max_page+0x5a>
    61d5:	31 d2                	xor    %edx,%edx
    61d7:	eb 14                	jmp    61ed <get_dynamic_stack_max_page+0x2d>
    61d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    61e0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    61e6:	83 c2 01             	add    $0x1,%edx
    61e9:	39 c2                	cmp    %eax,%edx
    61eb:	73 2b                	jae    6218 <get_dynamic_stack_max_page+0x58>
    61ed:	89 d0                	mov    %edx,%eax
    61ef:	48 83 c0 0b          	add    $0xb,%rax
    61f3:	48 c1 e0 05          	shl    $0x5,%rax
    61f7:	48 01 c8             	add    %rcx,%rax
    61fa:	0f b7 00             	movzwl (%rax),%eax
    61fd:	66 83 f8 07          	cmp    $0x7,%ax
    6201:	75 dd                	jne    61e0 <get_dynamic_stack_max_page+0x20>
    6203:	8d 42 0b             	lea    0xb(%rdx),%eax
    6206:	48 c1 e0 05          	shl    $0x5,%rax
    620a:	48 01 c1             	add    %rax,%rcx
    620d:	74 09                	je     6218 <get_dynamic_stack_max_page+0x58>
    620f:	8b 41 04             	mov    0x4(%rcx),%eax
    6212:	c3                   	ret    
    6213:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6218:	31 c0                	xor    %eax,%eax
    621a:	c3                   	ret    
    621b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006220 <do_add_thread>:
    6220:	f3 0f 1e fa          	endbr64 
    6224:	41 56                	push   %r14
    6226:	41 55                	push   %r13
    6228:	41 54                	push   %r12
    622a:	55                   	push   %rbp
    622b:	53                   	push   %rbx
    622c:	48 89 fb             	mov    %rdi,%rbx
    622f:	48 83 ec 10          	sub    $0x10,%rsp
    6233:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    623a:	00 00 
    623c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6241:	31 c0                	xor    %eax,%eax
    6243:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    624a:	00 
    624b:	e8 a8 bc 00 00       	call   11ef8 <get_enclave_base>
    6250:	31 d2                	xor    %edx,%edx
    6252:	48 89 e6             	mov    %rsp,%rsi
    6255:	48 89 df             	mov    %rbx,%rdi
    6258:	48 89 c5             	mov    %rax,%rbp
    625b:	e8 50 fc ff ff       	call   5eb0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes.constprop.0>
    6260:	85 c0                	test   %eax,%eax
    6262:	75 62                	jne    62c6 <do_add_thread+0xa6>
    6264:	4c 8d 25 15 cf 00 00 	lea    0xcf15(%rip),%r12        # 13180 <g_global_data>
    626b:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6272:	00 
    6273:	85 c0                	test   %eax,%eax
    6275:	74 4f                	je     62c6 <do_add_thread+0xa6>
    6277:	31 d2                	xor    %edx,%edx
    6279:	eb 14                	jmp    628f <do_add_thread+0x6f>
    627b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6280:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    6287:	00 
    6288:	83 c2 01             	add    $0x1,%edx
    628b:	39 c2                	cmp    %eax,%edx
    628d:	73 37                	jae    62c6 <do_add_thread+0xa6>
    628f:	89 d0                	mov    %edx,%eax
    6291:	48 83 c0 0b          	add    $0xb,%rax
    6295:	48 c1 e0 05          	shl    $0x5,%rax
    6299:	4c 01 e0             	add    %r12,%rax
    629c:	44 0f b7 28          	movzwl (%rax),%r13d
    62a0:	66 41 83 fd 0e       	cmp    $0xe,%r13w
    62a5:	75 d9                	jne    6280 <do_add_thread+0x60>
    62a7:	8d 42 0b             	lea    0xb(%rdx),%eax
    62aa:	48 c1 e0 05          	shl    $0x5,%rax
    62ae:	4c 01 e0             	add    %r12,%rax
    62b1:	74 13                	je     62c6 <do_add_thread+0xa6>
    62b3:	4c 8b 34 24          	mov    (%rsp),%r14
    62b7:	48 8b 40 08          	mov    0x8(%rax),%rax
    62bb:	49 01 ee             	add    %rbp,%r14
    62be:	4c 01 f0             	add    %r14,%rax
    62c1:	48 39 d8             	cmp    %rbx,%rax
    62c4:	74 4e                	je     6314 <do_add_thread+0xf4>
    62c6:	b8 01 00 00 00       	mov    $0x1,%eax
    62cb:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    62d0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    62d7:	00 00 
    62d9:	0f 85 f9 00 00 00    	jne    63d8 <do_add_thread+0x1b8>
    62df:	48 83 c4 10          	add    $0x10,%rsp
    62e3:	5b                   	pop    %rbx
    62e4:	5d                   	pop    %rbp
    62e5:	41 5c                	pop    %r12
    62e7:	41 5d                	pop    %r13
    62e9:	41 5e                	pop    %r14
    62eb:	c3                   	ret    
    62ec:	0f 1f 40 00          	nopl   0x0(%rax)
    62f0:	8d 42 0b             	lea    0xb(%rdx),%eax
    62f3:	48 c1 e0 05          	shl    $0x5,%rax
    62f7:	4c 01 e0             	add    %r12,%rax
    62fa:	74 0d                	je     6309 <do_add_thread+0xe9>
    62fc:	0f b7 50 02          	movzwl 0x2(%rax),%edx
    6300:	83 e2 20             	and    $0x20,%edx
    6303:	0f 85 af 00 00 00    	jne    63b8 <do_add_thread+0x198>
    6309:	41 83 c5 01          	add    $0x1,%r13d
    630d:	66 41 83 fd 13       	cmp    $0x13,%r13w
    6312:	74 3c                	je     6350 <do_add_thread+0x130>
    6314:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    631b:	00 
    631c:	31 d2                	xor    %edx,%edx
    631e:	85 c0                	test   %eax,%eax
    6320:	75 15                	jne    6337 <do_add_thread+0x117>
    6322:	eb e5                	jmp    6309 <do_add_thread+0xe9>
    6324:	0f 1f 40 00          	nopl   0x0(%rax)
    6328:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
    632f:	00 
    6330:	83 c2 01             	add    $0x1,%edx
    6333:	39 c2                	cmp    %eax,%edx
    6335:	73 d2                	jae    6309 <do_add_thread+0xe9>
    6337:	89 d0                	mov    %edx,%eax
    6339:	48 83 c0 0b          	add    $0xb,%rax
    633d:	48 c1 e0 05          	shl    $0x5,%rax
    6341:	4c 01 e0             	add    %r12,%rax
    6344:	0f b7 00             	movzwl (%rax),%eax
    6347:	66 44 39 e8          	cmp    %r13w,%ax
    634b:	75 db                	jne    6328 <do_add_thread+0x108>
    634d:	eb a1                	jmp    62f0 <do_add_thread+0xd0>
    634f:	90                   	nop
    6350:	ba 48 00 00 00       	mov    $0x48,%edx
    6355:	49 8d b4 24 10 01 00 	lea    0x110(%r12),%rsi
    635c:	00 
    635d:	48 89 df             	mov    %rbx,%rdi
    6360:	e8 4b a2 00 00       	call   105b0 <memcpy>
    6365:	f3 0f 6f 4b 30       	movdqu 0x30(%rbx),%xmm1
    636a:	48 89 d8             	mov    %rbx,%rax
    636d:	48 89 df             	mov    %rbx,%rdi
    6370:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    6375:	48 29 e8             	sub    %rbp,%rax
    6378:	48 01 43 10          	add    %rax,0x10(%rbx)
    637c:	ba 00 01 00 00       	mov    $0x100,%edx
    6381:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6385:	be 00 10 00 00       	mov    $0x1000,%esi
    638a:	66 0f d4 c8          	paddq  %xmm0,%xmm1
    638e:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    6393:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    6397:	66 0f fb c8          	psubq  %xmm0,%xmm1
    639b:	0f 11 4b 30          	movups %xmm1,0x30(%rbx)
    639f:	e8 3c 55 00 00       	call   b8e0 <mm_modify_type>
    63a4:	85 c0                	test   %eax,%eax
    63a6:	0f 95 c0             	setne  %al
    63a9:	0f b6 c0             	movzbl %al,%eax
    63ac:	e9 1a ff ff ff       	jmp    62cb <do_add_thread+0xab>
    63b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    63b8:	8b 70 04             	mov    0x4(%rax),%esi
    63bb:	48 8b 78 08          	mov    0x8(%rax),%rdi
    63bf:	48 c1 e6 0c          	shl    $0xc,%rsi
    63c3:	4c 01 f7             	add    %r14,%rdi
    63c6:	e8 d5 54 00 00       	call   b8a0 <mm_commit>
    63cb:	85 c0                	test   %eax,%eax
    63cd:	0f 84 36 ff ff ff    	je     6309 <do_add_thread+0xe9>
    63d3:	e9 ee fe ff ff       	jmp    62c6 <do_add_thread+0xa6>
    63d8:	e8 e3 a4 00 00       	call   108c0 <__stack_chk_fail>
    63dd:	0f 1f 00             	nopl   (%rax)

00000000000063e0 <sgx_set_ssa_aexnotify>:
    63e0:	f3 0f 1e fa          	endbr64 
    63e4:	55                   	push   %rbp
    63e5:	89 fd                	mov    %edi,%ebp
    63e7:	53                   	push   %rbx
    63e8:	48 83 ec 08          	sub    $0x8,%rsp
    63ec:	e8 52 bb 00 00       	call   11f43 <get_thread_data>
    63f1:	48 85 c0             	test   %rax,%rax
    63f4:	74 3a                	je     6430 <sgx_set_ssa_aexnotify+0x50>
    63f6:	48 89 c3             	mov    %rax,%rbx
    63f9:	e8 92 ae 00 00       	call   11290 <sgx_self_report>
    63fe:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    6402:	74 2c                	je     6430 <sgx_set_ssa_aexnotify+0x50>
    6404:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    6408:	0f b6 82 a7 00 00 00 	movzbl 0xa7(%rdx),%eax
    640f:	89 c1                	mov    %eax,%ecx
    6411:	83 c8 01             	or     $0x1,%eax
    6414:	83 e1 fe             	and    $0xfffffffe,%ecx
    6417:	85 ed                	test   %ebp,%ebp
    6419:	0f 44 c1             	cmove  %ecx,%eax
    641c:	88 82 a7 00 00 00    	mov    %al,0xa7(%rdx)
    6422:	48 83 c4 08          	add    $0x8,%rsp
    6426:	31 c0                	xor    %eax,%eax
    6428:	5b                   	pop    %rbx
    6429:	5d                   	pop    %rbp
    642a:	c3                   	ret    
    642b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6430:	48 83 c4 08          	add    $0x8,%rsp
    6434:	b8 01 00 00 00       	mov    $0x1,%eax
    6439:	5b                   	pop    %rbx
    643a:	5d                   	pop    %rbp
    643b:	c3                   	ret    
    643c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006440 <sgx_register_aex_handler>:
    6440:	f3 0f 1e fa          	endbr64 
    6444:	48 85 ff             	test   %rdi,%rdi
    6447:	0f 84 bb 00 00 00    	je     6508 <sgx_register_aex_handler+0xc8>
    644d:	41 55                	push   %r13
    644f:	b8 02 00 00 00       	mov    $0x2,%eax
    6454:	41 54                	push   %r12
    6456:	49 89 f4             	mov    %rsi,%r12
    6459:	55                   	push   %rbp
    645a:	53                   	push   %rbx
    645b:	48 83 ec 08          	sub    $0x8,%rsp
    645f:	48 85 f6             	test   %rsi,%rsi
    6462:	74 2a                	je     648e <sgx_register_aex_handler+0x4e>
    6464:	48 89 fb             	mov    %rdi,%rbx
    6467:	48 89 d5             	mov    %rdx,%rbp
    646a:	e8 f1 11 00 00       	call   7660 <get_ssa_aexnotify>
    646f:	85 c0                	test   %eax,%eax
    6471:	75 2d                	jne    64a0 <sgx_register_aex_handler+0x60>
    6473:	e8 cb ba 00 00       	call   11f43 <get_thread_data>
    6478:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    647d:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    6481:	4c 89 23             	mov    %r12,(%rbx)
    6484:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    6488:	48 89 58 48          	mov    %rbx,0x48(%rax)
    648c:	31 c0                	xor    %eax,%eax
    648e:	48 83 c4 08          	add    $0x8,%rsp
    6492:	5b                   	pop    %rbx
    6493:	5d                   	pop    %rbp
    6494:	41 5c                	pop    %r12
    6496:	41 5d                	pop    %r13
    6498:	c3                   	ret    
    6499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    64a0:	e8 9e ba 00 00       	call   11f43 <get_thread_data>
    64a5:	49 89 c5             	mov    %rax,%r13
    64a8:	48 85 c0             	test   %rax,%rax
    64ab:	74 16                	je     64c3 <sgx_register_aex_handler+0x83>
    64ad:	e8 de ad 00 00       	call   11290 <sgx_self_report>
    64b2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    64b6:	74 0b                	je     64c3 <sgx_register_aex_handler+0x83>
    64b8:	49 8b 45 20          	mov    0x20(%r13),%rax
    64bc:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    64c3:	e8 7b ba 00 00       	call   11f43 <get_thread_data>
    64c8:	66 48 0f 6e c5       	movq   %rbp,%xmm0
    64cd:	0f 16 40 48          	movhps 0x48(%rax),%xmm0
    64d1:	4c 89 23             	mov    %r12,(%rbx)
    64d4:	0f 11 43 08          	movups %xmm0,0x8(%rbx)
    64d8:	48 89 58 48          	mov    %rbx,0x48(%rax)
    64dc:	e8 62 ba 00 00       	call   11f43 <get_thread_data>
    64e1:	48 89 c3             	mov    %rax,%rbx
    64e4:	48 85 c0             	test   %rax,%rax
    64e7:	74 a3                	je     648c <sgx_register_aex_handler+0x4c>
    64e9:	e8 a2 ad 00 00       	call   11290 <sgx_self_report>
    64ee:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    64f2:	74 98                	je     648c <sgx_register_aex_handler+0x4c>
    64f4:	48 8b 43 20          	mov    0x20(%rbx),%rax
    64f8:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    64ff:	31 c0                	xor    %eax,%eax
    6501:	eb 8b                	jmp    648e <sgx_register_aex_handler+0x4e>
    6503:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6508:	b8 02 00 00 00       	mov    $0x2,%eax
    650d:	c3                   	ret    
    650e:	66 90                	xchg   %ax,%ax

0000000000006510 <sgx_unregister_aex_handler>:
    6510:	f3 0f 1e fa          	endbr64 
    6514:	41 54                	push   %r12
    6516:	55                   	push   %rbp
    6517:	53                   	push   %rbx
    6518:	48 85 ff             	test   %rdi,%rdi
    651b:	0f 84 e7 00 00 00    	je     6608 <sgx_unregister_aex_handler+0xf8>
    6521:	48 89 fd             	mov    %rdi,%rbp
    6524:	e8 37 11 00 00       	call   7660 <get_ssa_aexnotify>
    6529:	89 c3                	mov    %eax,%ebx
    652b:	85 c0                	test   %eax,%eax
    652d:	75 61                	jne    6590 <sgx_unregister_aex_handler+0x80>
    652f:	e8 0f ba 00 00       	call   11f43 <get_thread_data>
    6534:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    653a:	48 8b 50 48          	mov    0x48(%rax),%rdx
    653e:	48 85 d2             	test   %rdx,%rdx
    6541:	74 3d                	je     6580 <sgx_unregister_aex_handler+0x70>
    6543:	31 f6                	xor    %esi,%esi
    6545:	eb 1c                	jmp    6563 <sgx_unregister_aex_handler+0x53>
    6547:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    654e:	00 00 
    6550:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6554:	48 89 d6             	mov    %rdx,%rsi
    6557:	48 85 c9             	test   %rcx,%rcx
    655a:	0f 84 98 00 00 00    	je     65f8 <sgx_unregister_aex_handler+0xe8>
    6560:	48 89 ca             	mov    %rcx,%rdx
    6563:	48 39 2a             	cmp    %rbp,(%rdx)
    6566:	75 e8                	jne    6550 <sgx_unregister_aex_handler+0x40>
    6568:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    656c:	48 85 f6             	test   %rsi,%rsi
    656f:	0f 84 ab 00 00 00    	je     6620 <sgx_unregister_aex_handler+0x110>
    6575:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6579:	45 31 e4             	xor    %r12d,%r12d
    657c:	85 db                	test   %ebx,%ebx
    657e:	75 48                	jne    65c8 <sgx_unregister_aex_handler+0xb8>
    6580:	44 89 e0             	mov    %r12d,%eax
    6583:	5b                   	pop    %rbx
    6584:	5d                   	pop    %rbp
    6585:	41 5c                	pop    %r12
    6587:	c3                   	ret    
    6588:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    658f:	00 
    6590:	e8 ae b9 00 00       	call   11f43 <get_thread_data>
    6595:	49 89 c4             	mov    %rax,%r12
    6598:	48 85 c0             	test   %rax,%rax
    659b:	74 17                	je     65b4 <sgx_unregister_aex_handler+0xa4>
    659d:	e8 ee ac 00 00       	call   11290 <sgx_self_report>
    65a2:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65a6:	74 0c                	je     65b4 <sgx_unregister_aex_handler+0xa4>
    65a8:	49 8b 44 24 20       	mov    0x20(%r12),%rax
    65ad:	80 a0 a7 00 00 00 fe 	andb   $0xfe,0xa7(%rax)
    65b4:	e8 8a b9 00 00       	call   11f43 <get_thread_data>
    65b9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    65bd:	48 85 d2             	test   %rdx,%rdx
    65c0:	75 81                	jne    6543 <sgx_unregister_aex_handler+0x33>
    65c2:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    65c8:	e8 76 b9 00 00       	call   11f43 <get_thread_data>
    65cd:	48 89 c3             	mov    %rax,%rbx
    65d0:	48 85 c0             	test   %rax,%rax
    65d3:	74 ab                	je     6580 <sgx_unregister_aex_handler+0x70>
    65d5:	e8 b6 ac 00 00       	call   11290 <sgx_self_report>
    65da:	f6 40 31 04          	testb  $0x4,0x31(%rax)
    65de:	74 a0                	je     6580 <sgx_unregister_aex_handler+0x70>
    65e0:	48 8b 43 20          	mov    0x20(%rbx),%rax
    65e4:	80 88 a7 00 00 00 01 	orb    $0x1,0xa7(%rax)
    65eb:	44 89 e0             	mov    %r12d,%eax
    65ee:	5b                   	pop    %rbx
    65ef:	5d                   	pop    %rbp
    65f0:	41 5c                	pop    %r12
    65f2:	c3                   	ret    
    65f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    65f8:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    65fe:	e9 79 ff ff ff       	jmp    657c <sgx_unregister_aex_handler+0x6c>
    6603:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6608:	41 bc 02 00 00 00    	mov    $0x2,%r12d
    660e:	5b                   	pop    %rbx
    660f:	5d                   	pop    %rbp
    6610:	44 89 e0             	mov    %r12d,%eax
    6613:	41 5c                	pop    %r12
    6615:	c3                   	ret    
    6616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    661d:	00 00 00 
    6620:	48 89 50 48          	mov    %rdx,0x48(%rax)
    6624:	e9 50 ff ff ff       	jmp    6579 <sgx_unregister_aex_handler+0x69>
    6629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000006630 <sgx_apply_mitigations>:
    6630:	f3 0f 1e fa          	endbr64 
    6634:	55                   	push   %rbp
    6635:	48 89 fd             	mov    %rdi,%rbp
    6638:	53                   	push   %rbx
    6639:	48 83 ec 08          	sub    $0x8,%rsp
    663d:	e8 01 b9 00 00       	call   11f43 <get_thread_data>
    6642:	48 8b 58 48          	mov    0x48(%rax),%rbx
    6646:	48 85 db             	test   %rbx,%rbx
    6649:	74 17                	je     6662 <sgx_apply_mitigations+0x32>
    664b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6650:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    6654:	48 89 ef             	mov    %rbp,%rdi
    6657:	ff 13                	call   *(%rbx)
    6659:	48 8b 5b 10          	mov    0x10(%rbx),%rbx
    665d:	48 85 db             	test   %rbx,%rbx
    6660:	75 ee                	jne    6650 <sgx_apply_mitigations+0x20>
    6662:	48 83 c4 08          	add    $0x8,%rsp
    6666:	31 c0                	xor    %eax,%eax
    6668:	5b                   	pop    %rbx
    6669:	5d                   	pop    %rbp
    666a:	c3                   	ret    
    666b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006670 <_pthread_thread_run>:
    6670:	f3 0f 1e fa          	endbr64 
    6674:	31 c0                	xor    %eax,%eax
    6676:	c3                   	ret    
    6677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    667e:	00 00 

0000000000006680 <_ZL11do_save_tcsPv>:
    6680:	55                   	push   %rbp
    6681:	53                   	push   %rbx
    6682:	48 89 fb             	mov    %rdi,%rbx
    6685:	48 83 ec 18          	sub    $0x18,%rsp
    6689:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6690:	00 00 
    6692:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6697:	31 c0                	xor    %eax,%eax
    6699:	48 83 3d cf 3a 01 00 	cmpq   $0x0,0x13acf(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    66a0:	00 
    66a1:	74 4d                	je     66f0 <_ZL11do_save_tcsPv+0x70>
    66a3:	bf 10 00 00 00       	mov    $0x10,%edi
    66a8:	e8 63 69 00 00       	call   d010 <dlmalloc>
    66ad:	48 85 c0             	test   %rax,%rax
    66b0:	74 68                	je     671a <_ZL11do_save_tcsPv+0x9a>
    66b2:	48 8b 15 bf 3a 01 00 	mov    0x13abf(%rip),%rdx        # 1a178 <_ZL10g_tcs_node>
    66b9:	48 33 1d b0 3a 01 00 	xor    0x13ab0(%rip),%rbx        # 1a170 <_ZL12g_tcs_cookie>
    66c0:	48 89 05 b1 3a 01 00 	mov    %rax,0x13ab1(%rip)        # 1a178 <_ZL10g_tcs_node>
    66c7:	48 89 18             	mov    %rbx,(%rax)
    66ca:	48 89 50 08          	mov    %rdx,0x8(%rax)
    66ce:	31 c0                	xor    %eax,%eax
    66d0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    66d5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    66dc:	00 00 
    66de:	75 62                	jne    6742 <_ZL11do_save_tcsPv+0xc2>
    66e0:	48 83 c4 18          	add    $0x18,%rsp
    66e4:	5b                   	pop    %rbx
    66e5:	5d                   	pop    %rbp
    66e6:	c3                   	ret    
    66e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    66ee:	00 00 
    66f0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    66f7:	00 
    66f8:	48 89 e5             	mov    %rsp,%rbp
    66fb:	eb 0c                	jmp    6709 <_ZL11do_save_tcsPv+0x89>
    66fd:	0f 1f 00             	nopl   (%rax)
    6700:	48 8b 04 24          	mov    (%rsp),%rax
    6704:	48 85 c0             	test   %rax,%rax
    6707:	75 1f                	jne    6728 <_ZL11do_save_tcsPv+0xa8>
    6709:	be 08 00 00 00       	mov    $0x8,%esi
    670e:	48 89 ef             	mov    %rbp,%rdi
    6711:	e8 2a f5 ff ff       	call   5c40 <sgx_read_rand>
    6716:	85 c0                	test   %eax,%eax
    6718:	74 e6                	je     6700 <_ZL11do_save_tcsPv+0x80>
    671a:	b8 01 00 00 00       	mov    $0x1,%eax
    671f:	eb af                	jmp    66d0 <_ZL11do_save_tcsPv+0x50>
    6721:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6728:	48 83 3d 40 3a 01 00 	cmpq   $0x0,0x13a40(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    672f:	00 
    6730:	0f 85 6d ff ff ff    	jne    66a3 <_ZL11do_save_tcsPv+0x23>
    6736:	48 89 05 33 3a 01 00 	mov    %rax,0x13a33(%rip)        # 1a170 <_ZL12g_tcs_cookie>
    673d:	e9 61 ff ff ff       	jmp    66a3 <_ZL11do_save_tcsPv+0x23>
    6742:	e8 79 a1 00 00       	call   108c0 <__stack_chk_fail>
    6747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    674e:	00 00 

0000000000006750 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    6750:	48 39 f7             	cmp    %rsi,%rdi
    6753:	0f 83 cf 00 00 00    	jae    6828 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    6759:	41 56                	push   %r14
    675b:	41 55                	push   %r13
    675d:	49 89 f5             	mov    %rsi,%r13
    6760:	41 54                	push   %r12
    6762:	49 89 d4             	mov    %rdx,%r12
    6765:	55                   	push   %rbp
    6766:	53                   	push   %rbx
    6767:	48 89 fb             	mov    %rdi,%rbx
    676a:	eb 0d                	jmp    6779 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x29>
    676c:	0f 1f 40 00          	nopl   0x0(%rax)
    6770:	48 83 c3 20          	add    $0x20,%rbx
    6774:	4c 39 eb             	cmp    %r13,%rbx
    6777:	73 77                	jae    67f0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xa0>
    6779:	0f b7 03             	movzwl (%rbx),%eax
    677c:	f6 c4 10             	test   $0x10,%ah
    677f:	75 13                	jne    6794 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    6781:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6785:	f6 c4 01             	test   $0x1,%ah
    6788:	74 0a                	je     6794 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x44>
    678a:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    678e:	66 83 f8 03          	cmp    $0x3,%ax
    6792:	74 6c                	je     6800 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xb0>
    6794:	0f b7 03             	movzwl (%rbx),%eax
    6797:	f6 c4 10             	test   $0x10,%ah
    679a:	74 d4                	je     6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    679c:	8b 43 04             	mov    0x4(%rbx),%eax
    679f:	85 c0                	test   %eax,%eax
    67a1:	74 cd                	je     6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    67a3:	31 ed                	xor    %ebp,%ebp
    67a5:	45 31 f6             	xor    %r14d,%r14d
    67a8:	eb 10                	jmp    67ba <_ZL18add_static_threadsPVK9_layout_tS1_m+0x6a>
    67aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    67b0:	8b 43 04             	mov    0x4(%rbx),%eax
    67b3:	83 c5 01             	add    $0x1,%ebp
    67b6:	39 c5                	cmp    %eax,%ebp
    67b8:	73 b6                	jae    6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    67ba:	48 8b 43 08          	mov    0x8(%rbx),%rax
    67be:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    67c2:	48 89 de             	mov    %rbx,%rsi
    67c5:	f7 df                	neg    %edi
    67c7:	49 01 c6             	add    %rax,%r14
    67ca:	48 63 ff             	movslq %edi,%rdi
    67cd:	4c 89 f2             	mov    %r14,%rdx
    67d0:	48 c1 e7 05          	shl    $0x5,%rdi
    67d4:	48 01 df             	add    %rbx,%rdi
    67d7:	e8 74 ff ff ff       	call   6750 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    67dc:	85 c0                	test   %eax,%eax
    67de:	74 d0                	je     67b0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x60>
    67e0:	5b                   	pop    %rbx
    67e1:	5d                   	pop    %rbp
    67e2:	41 5c                	pop    %r12
    67e4:	41 5d                	pop    %r13
    67e6:	41 5e                	pop    %r14
    67e8:	c3                   	ret    
    67e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    67f0:	5b                   	pop    %rbx
    67f1:	31 c0                	xor    %eax,%eax
    67f3:	5d                   	pop    %rbp
    67f4:	41 5c                	pop    %r12
    67f6:	41 5d                	pop    %r13
    67f8:	41 5e                	pop    %r14
    67fa:	c3                   	ret    
    67fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6800:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    6804:	e8 ef b6 00 00       	call   11ef8 <get_enclave_base>
    6809:	4c 01 e5             	add    %r12,%rbp
    680c:	48 8d 3c 28          	lea    (%rax,%rbp,1),%rdi
    6810:	e8 6b fe ff ff       	call   6680 <_ZL11do_save_tcsPv>
    6815:	85 c0                	test   %eax,%eax
    6817:	0f 84 53 ff ff ff    	je     6770 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    681d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6822:	eb bc                	jmp    67e0 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x90>
    6824:	0f 1f 40 00          	nopl   0x0(%rax)
    6828:	31 c0                	xor    %eax,%eax
    682a:	c3                   	ret    
    682b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006830 <_ZL10trts_ecalljPv>:
    6830:	f3 0f 1e fa          	endbr64 
    6834:	41 55                	push   %r13
    6836:	41 54                	push   %r12
    6838:	55                   	push   %rbp
    6839:	48 89 f5             	mov    %rsi,%rbp
    683c:	53                   	push   %rbx
    683d:	89 fb                	mov    %edi,%ebx
    683f:	48 83 ec 08          	sub    $0x8,%rsp
    6843:	0f b6 05 f6 19 01 00 	movzbl 0x119f6(%rip),%eax        # 18240 <_ZL16g_is_first_ecall>
    684a:	84 c0                	test   %al,%al
    684c:	0f 85 b6 00 00 00    	jne    6908 <_ZL10trts_ecalljPv+0xd8>
    6852:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6855:	0f 84 8d 00 00 00    	je     68e8 <_ZL10trts_ecalljPv+0xb8>
    685b:	4c 8d 25 7e 15 01 00 	lea    0x1157e(%rip),%r12        # 17de0 <g_ecall_table>
    6862:	49 3b 1c 24          	cmp    (%r12),%rbx
    6866:	73 68                	jae    68d0 <_ZL10trts_ecalljPv+0xa0>
    6868:	e8 d6 b6 00 00       	call   11f43 <get_thread_data>
    686d:	0f ae e8             	lfence 
    6870:	48 8b 50 08          	mov    0x8(%rax),%rdx
    6874:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    6878:	0f 84 b2 00 00 00    	je     6930 <_ZL10trts_ecalljPv+0x100>
    687e:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    6885:	4f 
    6886:	0f 85 5b 01 00 00    	jne    69e7 <_ZL10trts_ecalljPv+0x1b7>
    688c:	48 8d 05 7d c7 00 00 	lea    0xc77d(%rip),%rax        # 13010 <g_dyn_entry_table>
    6893:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    6897:	48 3b 10             	cmp    (%rax),%rdx
    689a:	73 34                	jae    68d0 <_ZL10trts_ecalljPv+0xa0>
    689c:	49 0f af 14 24       	imul   (%r12),%rdx
    68a1:	48 01 d8             	add    %rbx,%rax
    68a4:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    68a9:	74 6c                	je     6917 <_ZL10trts_ecalljPv+0xe7>
    68ab:	48 c1 e3 04          	shl    $0x4,%rbx
    68af:	31 f6                	xor    %esi,%esi
    68b1:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    68b6:	48 89 df             	mov    %rbx,%rdi
    68b9:	e8 82 f1 ff ff       	call   5a40 <sgx_is_within_enclave>
    68be:	85 c0                	test   %eax,%eax
    68c0:	0f 84 8a 00 00 00    	je     6950 <_ZL10trts_ecalljPv+0x120>
    68c6:	48 89 d8             	mov    %rbx,%rax
    68c9:	eb 24                	jmp    68ef <_ZL10trts_ecalljPv+0xbf>
    68cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    68d0:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    68d6:	48 83 c4 08          	add    $0x8,%rsp
    68da:	44 89 e0             	mov    %r12d,%eax
    68dd:	5b                   	pop    %rbx
    68de:	5d                   	pop    %rbp
    68df:	41 5c                	pop    %r12
    68e1:	41 5d                	pop    %r13
    68e3:	c3                   	ret    
    68e4:	0f 1f 40 00          	nopl   0x0(%rax)
    68e8:	48 8d 05 81 fd ff ff 	lea    -0x27f(%rip),%rax        # 6670 <_pthread_thread_run>
    68ef:	0f ae e8             	lfence 
    68f2:	48 83 c4 08          	add    $0x8,%rsp
    68f6:	48 89 ef             	mov    %rbp,%rdi
    68f9:	5b                   	pop    %rbx
    68fa:	5d                   	pop    %rbp
    68fb:	41 5c                	pop    %r12
    68fd:	41 5d                	pop    %r13
    68ff:	ff e0                	jmp    *%rax
    6901:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6908:	e8 36 b6 00 00       	call   11f43 <get_thread_data>
    690d:	48 8b 48 10          	mov    0x10(%rax),%rcx
    6911:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    6915:	74 49                	je     6960 <_ZL10trts_ecalljPv+0x130>
    6917:	48 83 c4 08          	add    $0x8,%rsp
    691b:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    6921:	5b                   	pop    %rbx
    6922:	44 89 e0             	mov    %r12d,%eax
    6925:	5d                   	pop    %rbp
    6926:	41 5c                	pop    %r12
    6928:	41 5d                	pop    %r13
    692a:	c3                   	ret    
    692b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6930:	48 89 d8             	mov    %rbx,%rax
    6933:	48 c1 e0 04          	shl    $0x4,%rax
    6937:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    693d:	0f 84 68 ff ff ff    	je     68ab <_ZL10trts_ecalljPv+0x7b>
    6943:	eb d2                	jmp    6917 <_ZL10trts_ecalljPv+0xe7>
    6945:	4c 89 ef             	mov    %r13,%rdi
    6948:	e8 93 5d 00 00       	call   c6e0 <sgx_spin_unlock>
    694d:	0f 1f 00             	nopl   (%rax)
    6950:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6956:	e9 7b ff ff ff       	jmp    68d6 <_ZL10trts_ecalljPv+0xa6>
    695b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6960:	4c 8d 2d 01 38 01 00 	lea    0x13801(%rip),%r13        # 1a168 <_ZL10g_ife_lock>
    6967:	4c 89 ef             	mov    %r13,%rdi
    696a:	e8 e1 5c 00 00       	call   c650 <sgx_spin_lock>
    696f:	0f b6 05 ca 18 01 00 	movzbl 0x118ca(%rip),%eax        # 18240 <_ZL16g_is_first_ecall>
    6976:	84 c0                	test   %al,%al
    6978:	74 53                	je     69cd <_ZL10trts_ecalljPv+0x19d>
    697a:	48 8d 05 ab 14 01 00 	lea    0x114ab(%rip),%rax        # 17e2c <EDMM_supported>
    6981:	8b 00                	mov    (%rax),%eax
    6983:	85 c0                	test   %eax,%eax
    6985:	74 3a                	je     69c1 <_ZL10trts_ecalljPv+0x191>
    6987:	48 8d 05 f2 c7 00 00 	lea    0xc7f2(%rip),%rax        # 13180 <g_global_data>
    698e:	31 d2                	xor    %edx,%edx
    6990:	8b b0 58 01 00 00    	mov    0x158(%rax),%esi
    6996:	48 8d b8 60 01 00 00 	lea    0x160(%rax),%rdi
    699d:	48 c1 e6 05          	shl    $0x5,%rsi
    69a1:	48 01 fe             	add    %rdi,%rsi
    69a4:	e8 a7 fd ff ff       	call   6750 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    69a9:	85 c0                	test   %eax,%eax
    69ab:	75 98                	jne    6945 <_ZL10trts_ecalljPv+0x115>
    69ad:	e8 46 b5 00 00       	call   11ef8 <get_enclave_base>
    69b2:	48 89 c7             	mov    %rax,%rdi
    69b5:	e8 a6 1d 00 00       	call   8760 <change_protection>
    69ba:	41 89 c4             	mov    %eax,%r12d
    69bd:	85 c0                	test   %eax,%eax
    69bf:	75 19                	jne    69da <_ZL10trts_ecalljPv+0x1aa>
    69c1:	e8 ca 21 00 00       	call   8b90 <init_global_object>
    69c6:	c6 05 73 18 01 00 00 	movb   $0x0,0x11873(%rip)        # 18240 <_ZL16g_is_first_ecall>
    69cd:	4c 89 ef             	mov    %r13,%rdi
    69d0:	e8 0b 5d 00 00       	call   c6e0 <sgx_spin_unlock>
    69d5:	e9 78 fe ff ff       	jmp    6852 <_ZL10trts_ecalljPv+0x22>
    69da:	4c 89 ef             	mov    %r13,%rdi
    69dd:	e8 fe 5c 00 00       	call   c6e0 <sgx_spin_unlock>
    69e2:	e9 ef fe ff ff       	jmp    68d6 <_ZL10trts_ecalljPv+0xa6>
    69e7:	e8 4b b9 00 00       	call   12337 <abort>
    69ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000069f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>:
    69f0:	e9 3b fe ff ff       	jmp    6830 <_ZL10trts_ecalljPv>
    69f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    69fc:	00 00 00 
    69ff:	90                   	nop

0000000000006a00 <_Z16_pthread_enabledv>:
    6a00:	f3 0f 1e fa          	endbr64 
    6a04:	31 c0                	xor    %eax,%eax
    6a06:	c3                   	ret    
    6a07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a0e:	00 00 

0000000000006a10 <_Z24_pthread_tls_store_state9_status_t>:
    6a10:	f3 0f 1e fa          	endbr64 
    6a14:	c3                   	ret    
    6a15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a1c:	00 00 00 
    6a1f:	90                   	nop

0000000000006a20 <_Z22_pthread_tls_get_statev>:
    6a20:	f3 0f 1e fa          	endbr64 
    6a24:	31 c0                	xor    %eax,%eax
    6a26:	c3                   	ret    
    6a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a2e:	00 00 

0000000000006a30 <_Z26_pthread_tls_store_contextPv>:
    6a30:	f3 0f 1e fa          	endbr64 
    6a34:	c3                   	ret    
    6a35:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a3c:	00 00 00 
    6a3f:	90                   	nop

0000000000006a40 <_Z20_pthread_wakeup_joinPv>:
    6a40:	f3 0f 1e fa          	endbr64 
    6a44:	c3                   	ret    
    6a45:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a4c:	00 00 00 
    6a4f:	90                   	nop

0000000000006a50 <_Z24_pthread_tls_destructorsv>:
    6a50:	f3 0f 1e fa          	endbr64 
    6a54:	c3                   	ret    
    6a55:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a5c:	00 00 00 
    6a5f:	90                   	nop

0000000000006a60 <tc_set_idle>:
    6a60:	f3 0f 1e fa          	endbr64 
    6a64:	c3                   	ret    
    6a65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a6c:	00 00 00 
    6a6f:	90                   	nop

0000000000006a70 <do_init_thread>:
    6a70:	f3 0f 1e fa          	endbr64 
    6a74:	41 57                	push   %r15
    6a76:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    6a7b:	ba c0 00 00 00       	mov    $0xc0,%edx
    6a80:	41 56                	push   %r14
    6a82:	66 0f 6c d2          	punpcklqdq %xmm2,%xmm2
    6a86:	41 55                	push   %r13
    6a88:	41 54                	push   %r12
    6a8a:	41 89 f4             	mov    %esi,%r12d
    6a8d:	55                   	push   %rbp
    6a8e:	48 89 fd             	mov    %rdi,%rbp
    6a91:	53                   	push   %rbx
    6a92:	48 83 ec 38          	sub    $0x38,%rsp
    6a96:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6a9d:	00 00 
    6a9f:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    6aa4:	48 8d 05 d5 c6 00 00 	lea    0xc6d5(%rip),%rax        # 13180 <g_global_data>
    6aab:	0f 29 14 24          	movaps %xmm2,(%rsp)
    6aaf:	48 8b 58 50          	mov    0x50(%rax),%rbx
    6ab3:	48 8d 70 50          	lea    0x50(%rax),%rsi
    6ab7:	48 01 fb             	add    %rdi,%rbx
    6aba:	48 89 df             	mov    %rbx,%rdi
    6abd:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    6ac1:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    6ac5:	4c 8b ab b0 00 00 00 	mov    0xb0(%rbx),%r13
    6acc:	e8 df 9a 00 00       	call   105b0 <memcpy>
    6ad1:	48 8d 85 00 fc ff ff 	lea    -0x400(%rbp),%rax
    6ad8:	f3 0f 6f 1b          	movdqu (%rbx),%xmm3
    6adc:	f3 0f 6f 6b 10       	movdqu 0x10(%rbx),%xmm5
    6ae1:	66 48 0f 6e c0       	movq   %rax,%xmm0
    6ae6:	48 8b 43 18          	mov    0x18(%rbx),%rax
    6aea:	f3 0f 6f 73 68       	movdqu 0x68(%rbx),%xmm6
    6aef:	66 48 0f 6e cd       	movq   %rbp,%xmm1
    6af4:	66 0f 6f 14 24       	movdqa (%rsp),%xmm2
    6af9:	66 48 0f 6e e5       	movq   %rbp,%xmm4
    6afe:	66 0f 6c c8          	punpcklqdq %xmm0,%xmm1
    6b02:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    6b06:	48 01 e8             	add    %rbp,%rax
    6b09:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    6b0d:	66 0f d4 cb          	paddq  %xmm3,%xmm1
    6b11:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    6b15:	48 89 83 b0 00 00 00 	mov    %rax,0xb0(%rbx)
    6b1c:	48 8d 05 e5 12 01 00 	lea    0x112e5(%rip),%rax        # 17e08 <__intel_security_cookie>
    6b23:	66 0f d4 c5          	paddq  %xmm5,%xmm0
    6b27:	66 0f d4 d6          	paddq  %xmm6,%xmm2
    6b2b:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    6b2f:	48 8b 00             	mov    (%rax),%rax
    6b32:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    6b36:	0f 11 53 68          	movups %xmm2,0x68(%rbx)
    6b3a:	0f 11 0b             	movups %xmm1,(%rbx)
    6b3d:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
    6b41:	48 89 85 08 fc fe ff 	mov    %rax,-0x103f8(%rbp)
    6b48:	48 8d 05 dd 12 01 00 	lea    0x112dd(%rip),%rax        # 17e2c <EDMM_supported>
    6b4f:	8b 00                	mov    (%rax),%eax
    6b51:	85 c0                	test   %eax,%eax
    6b53:	48 8d 05 ba 12 01 00 	lea    0x112ba(%rip),%rax        # 17e14 <g_aexnotify_supported>
    6b5a:	0f 85 f0 00 00 00    	jne    6c50 <do_init_thread+0x1e0>
    6b60:	83 38 01             	cmpl   $0x1,(%rax)
    6b63:	0f 84 17 01 00 00    	je     6c80 <do_init_thread+0x210>
    6b69:	4d 85 ed             	test   %r13,%r13
    6b6c:	0f 85 c8 00 00 00    	jne    6c3a <do_init_thread+0x1ca>
    6b72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6b78:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    6b7f:	00 00 
    6b81:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    6b88:	00 00 
    6b8a:	e8 69 b3 00 00       	call   11ef8 <get_enclave_base>
    6b8f:	48 8d 54 24 20       	lea    0x20(%rsp),%rdx
    6b94:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    6b99:	48 89 c7             	mov    %rax,%rdi
    6b9c:	e8 3f 19 00 00       	call   84e0 <elf_tls_info>
    6ba1:	89 c2                	mov    %eax,%edx
    6ba3:	b8 01 00 00 00       	mov    $0x1,%eax
    6ba8:	85 d2                	test   %edx,%edx
    6baa:	75 0a                	jne    6bb6 <do_init_thread+0x146>
    6bac:	48 83 7c 24 18 00    	cmpq   $0x0,0x18(%rsp)
    6bb2:	75 2c                	jne    6be0 <do_init_thread+0x170>
    6bb4:	31 c0                	xor    %eax,%eax
    6bb6:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    6bbb:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6bc2:	00 00 
    6bc4:	0f 85 00 01 00 00    	jne    6cca <do_init_thread+0x25a>
    6bca:	48 83 c4 38          	add    $0x38,%rsp
    6bce:	5b                   	pop    %rbx
    6bcf:	5d                   	pop    %rbp
    6bd0:	41 5c                	pop    %r12
    6bd2:	41 5d                	pop    %r13
    6bd4:	41 5e                	pop    %r14
    6bd6:	41 5f                	pop    %r15
    6bd8:	c3                   	ret    
    6bd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6be0:	48 8b 03             	mov    (%rbx),%rax
    6be3:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6be7:	31 f6                	xor    %esi,%esi
    6be9:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    6bf0:	48 29 fa             	sub    %rdi,%rdx
    6bf3:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    6bfa:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    6c01:	e8 ea 9b 00 00       	call   107f0 <memset>
    6c06:	48 8b 7b 68          	mov    0x68(%rbx),%rdi
    6c0a:	48 8b 03             	mov    (%rbx),%rax
    6c0d:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx
    6c12:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    6c17:	48 29 f8             	sub    %rdi,%rax
    6c1a:	48 39 d0             	cmp    %rdx,%rax
    6c1d:	72 95                	jb     6bb4 <do_init_thread+0x144>
    6c1f:	e8 8c 99 00 00       	call   105b0 <memcpy>
    6c24:	eb 8e                	jmp    6bb4 <do_init_thread+0x144>
    6c26:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c2d:	00 00 00 
    6c30:	83 f8 01             	cmp    $0x1,%eax
    6c33:	74 7b                	je     6cb0 <do_init_thread+0x240>
    6c35:	4d 85 ed             	test   %r13,%r13
    6c38:	74 5e                	je     6c98 <do_init_thread+0x228>
    6c3a:	4c 89 ab b0 00 00 00 	mov    %r13,0xb0(%rbx)
    6c41:	e9 32 ff ff ff       	jmp    6b78 <do_init_thread+0x108>
    6c46:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6c4d:	00 00 00 
    6c50:	8b 00                	mov    (%rax),%eax
    6c52:	45 84 e4             	test   %r12b,%r12b
    6c55:	74 d9                	je     6c30 <do_init_thread+0x1c0>
    6c57:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    6c5e:	00 
    6c5f:	83 f8 01             	cmp    $0x1,%eax
    6c62:	74 5c                	je     6cc0 <do_init_thread+0x250>
    6c64:	4d 85 ed             	test   %r13,%r13
    6c67:	75 d1                	jne    6c3a <do_init_thread+0x1ca>
    6c69:	e8 52 f5 ff ff       	call   61c0 <get_dynamic_stack_max_page>
    6c6e:	89 c0                	mov    %eax,%eax
    6c70:	48 c1 e0 0c          	shl    $0xc,%rax
    6c74:	48 01 83 b0 00 00 00 	add    %rax,0xb0(%rbx)
    6c7b:	e9 f8 fe ff ff       	jmp    6b78 <do_init_thread+0x108>
    6c80:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6c87:	00 
    6c88:	4d 85 ed             	test   %r13,%r13
    6c8b:	75 ad                	jne    6c3a <do_init_thread+0x1ca>
    6c8d:	e9 e6 fe ff ff       	jmp    6b78 <do_init_thread+0x108>
    6c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6c98:	48 89 ef             	mov    %rbp,%rdi
    6c9b:	e8 50 f4 ff ff       	call   60f0 <is_dynamic_thread>
    6ca0:	85 c0                	test   %eax,%eax
    6ca2:	75 c5                	jne    6c69 <do_init_thread+0x1f9>
    6ca4:	e9 cf fe ff ff       	jmp    6b78 <do_init_thread+0x108>
    6ca9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6cb0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6cb7:	00 
    6cb8:	e9 78 ff ff ff       	jmp    6c35 <do_init_thread+0x1c5>
    6cbd:	0f 1f 00             	nopl   (%rax)
    6cc0:	48 c7 43 50 01 00 00 	movq   $0x1,0x50(%rbx)
    6cc7:	00 
    6cc8:	eb 9a                	jmp    6c64 <do_init_thread+0x1f4>
    6cca:	e8 f1 9b 00 00       	call   108c0 <__stack_chk_fail>
    6ccf:	90                   	nop

0000000000006cd0 <do_ecall>:
    6cd0:	f3 0f 1e fa          	endbr64 
    6cd4:	53                   	push   %rbx
    6cd5:	48 89 d3             	mov    %rdx,%rbx
    6cd8:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    6cdc:	89 7c 24 20          	mov    %edi,0x20(%rsp)
    6ce0:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    6ce5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6cec:	00 00 
    6cee:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    6cf3:	31 c0                	xor    %eax,%eax
    6cf5:	e8 0a b2 00 00       	call   11f04 <get_enclave_state>
    6cfa:	89 c2                	mov    %eax,%edx
    6cfc:	b8 01 00 00 00       	mov    $0x1,%eax
    6d01:	83 fa 02             	cmp    $0x2,%edx
    6d04:	74 1a                	je     6d20 <do_ecall+0x50>
    6d06:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    6d0b:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6d12:	00 00 
    6d14:	0f 85 0c 02 00 00    	jne    6f26 <do_ecall+0x256>
    6d1a:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    6d1e:	5b                   	pop    %rbx
    6d1f:	c3                   	ret    
    6d20:	e8 1e b2 00 00       	call   11f43 <get_thread_data>
    6d25:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6d2a:	48 85 c0             	test   %rax,%rax
    6d2d:	0f 84 31 01 00 00    	je     6e64 <do_ecall+0x194>
    6d33:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6d38:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6d3c:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6d40:	0f 84 0a 01 00 00    	je     6e50 <do_ecall+0x180>
    6d46:	e8 f8 b1 00 00       	call   11f43 <get_thread_data>
    6d4b:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    6d50:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6d55:	0f 84 25 01 00 00    	je     6e80 <do_ecall+0x1b0>
    6d5b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6d60:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6d64:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    6d68:	74 56                	je     6dc0 <do_ecall+0xf0>
    6d6a:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6d6f:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6d73:	e8 b8 fa ff ff       	call   6830 <_ZL10trts_ecalljPv>
    6d78:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    6d7d:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    6d82:	48 8d 15 f7 c3 00 00 	lea    0xc3f7(%rip),%rdx        # 13180 <g_global_data>
    6d89:	48 8b 52 38          	mov    0x38(%rdx),%rdx
    6d8d:	48 85 d2             	test   %rdx,%rdx
    6d90:	0f 84 70 ff ff ff    	je     6d06 <do_ecall+0x36>
    6d96:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    6d9b:	48 8b 59 08          	mov    0x8(%rcx),%rbx
    6d9f:	48 39 59 10          	cmp    %rbx,0x10(%rcx)
    6da3:	0f 85 5d ff ff ff    	jne    6d06 <do_ecall+0x36>
    6da9:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    6dad:	e8 ae fc ff ff       	call   6a60 <tc_set_idle>
    6db2:	8b 44 24 2c          	mov    0x2c(%rsp),%eax
    6db6:	e9 4b ff ff ff       	jmp    6d06 <do_ecall+0x36>
    6dbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6dc0:	31 ff                	xor    %edi,%edi
    6dc2:	e8 f9 ef ff ff       	call   5dc0 <sgx_wrpkru>
    6dc7:	e8 34 fc ff ff       	call   6a00 <_Z16_pthread_enabledv>
    6dcc:	84 c0                	test   %al,%al
    6dce:	0f 84 0c 01 00 00    	je     6ee0 <do_ecall+0x210>
    6dd4:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6dd9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6ddd:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6de2:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    6de7:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    6dec:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    6df1:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    6df6:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    6dfb:	e8 f2 9d 00 00       	call   10bf2 <setjmp>
    6e00:	f3 0f 1e fa          	endbr64 
    6e04:	85 c0                	test   %eax,%eax
    6e06:	0f 84 94 00 00 00    	je     6ea0 <do_ecall+0x1d0>
    6e0c:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6e11:	48 8b 41 10          	mov    0x10(%rcx),%rax
    6e15:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6e19:	b8 09 00 00 00       	mov    $0x9,%eax
    6e1e:	bf 09 00 00 00       	mov    $0x9,%edi
    6e23:	89 44 24 28          	mov    %eax,0x28(%rsp)
    6e27:	e8 e4 fb ff ff       	call   6a10 <_Z24_pthread_tls_store_state9_status_t>
    6e2c:	8b 44 24 28          	mov    0x28(%rsp),%eax
    6e30:	89 44 24 24          	mov    %eax,0x24(%rsp)
    6e34:	e8 17 fc ff ff       	call   6a50 <_Z24_pthread_tls_destructorsv>
    6e39:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    6e3e:	e8 fd fb ff ff       	call   6a40 <_Z20_pthread_wakeup_joinPv>
    6e43:	8b 44 24 24          	mov    0x24(%rsp),%eax
    6e47:	e9 36 ff ff ff       	jmp    6d82 <do_ecall+0xb2>
    6e4c:	0f 1f 40 00          	nopl   0x0(%rax)
    6e50:	48 8d 05 29 c3 00 00 	lea    0xc329(%rip),%rax        # 13180 <g_global_data>
    6e57:	48 8b 40 38          	mov    0x38(%rax),%rax
    6e5b:	48 85 c0             	test   %rax,%rax
    6e5e:	0f 84 a4 00 00 00    	je     6f08 <do_ecall+0x238>
    6e64:	31 f6                	xor    %esi,%esi
    6e66:	48 89 df             	mov    %rbx,%rdi
    6e69:	e8 02 fc ff ff       	call   6a70 <do_init_thread>
    6e6e:	85 c0                	test   %eax,%eax
    6e70:	0f 84 d0 fe ff ff    	je     6d46 <do_ecall+0x76>
    6e76:	e9 8b fe ff ff       	jmp    6d06 <do_ecall+0x36>
    6e7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6e80:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6e85:	bf 01 00 00 00       	mov    $0x1,%edi
    6e8a:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    6e91:	00 
    6e92:	e8 49 f5 ff ff       	call   63e0 <sgx_set_ssa_aexnotify>
    6e97:	e9 bf fe ff ff       	jmp    6d5b <do_ecall+0x8b>
    6e9c:	0f 1f 40 00          	nopl   0x0(%rax)
    6ea0:	48 8d 7c 24 30       	lea    0x30(%rsp),%rdi
    6ea5:	e8 86 fb ff ff       	call   6a30 <_Z26_pthread_tls_store_contextPv>
    6eaa:	0f c7 f0             	rdrand %eax
    6ead:	73 fb                	jae    6eaa <do_ecall+0x1da>
    6eaf:	8b 5c 24 20          	mov    0x20(%rsp),%ebx
    6eb3:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6eb8:	89 df                	mov    %ebx,%edi
    6eba:	e8 31 fb ff ff       	call   69f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6ebf:	83 fb fa             	cmp    $0xfffffffa,%ebx
    6ec2:	0f 84 56 ff ff ff    	je     6e1e <do_ecall+0x14e>
    6ec8:	83 f8 09             	cmp    $0x9,%eax
    6ecb:	0f 85 5f ff ff ff    	jne    6e30 <do_ecall+0x160>
    6ed1:	e9 43 ff ff ff       	jmp    6e19 <do_ecall+0x149>
    6ed6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6edd:	00 00 00 
    6ee0:	0f c7 f0             	rdrand %eax
    6ee3:	73 fb                	jae    6ee0 <do_ecall+0x210>
    6ee5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    6eea:	8b 7c 24 20          	mov    0x20(%rsp),%edi
    6eee:	e8 fd fa ff ff       	call   69f0 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.constprop.0.isra.0>
    6ef3:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    6ef8:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    6efd:	e9 80 fe ff ff       	jmp    6d82 <do_ecall+0xb2>
    6f02:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6f08:	e8 13 fb ff ff       	call   6a20 <_Z22_pthread_tls_get_statev>
    6f0d:	83 7c 24 20 fa       	cmpl   $0xfffffffa,0x20(%rsp)
    6f12:	0f 84 4c ff ff ff    	je     6e64 <do_ecall+0x194>
    6f18:	83 f8 09             	cmp    $0x9,%eax
    6f1b:	0f 85 25 fe ff ff    	jne    6d46 <do_ecall+0x76>
    6f21:	e9 3e ff ff ff       	jmp    6e64 <do_ecall+0x194>
    6f26:	e8 95 99 00 00       	call   108c0 <__stack_chk_fail>
    6f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006f30 <do_ecall_add_thread>:
    6f30:	f3 0f 1e fa          	endbr64 
    6f34:	55                   	push   %rbp
    6f35:	53                   	push   %rbx
    6f36:	48 89 fb             	mov    %rdi,%rbx
    6f39:	48 83 ec 08          	sub    $0x8,%rsp
    6f3d:	e8 5e 06 00 00       	call   75a0 <is_utility_thread>
    6f42:	48 85 db             	test   %rbx,%rbx
    6f45:	0f 84 a5 00 00 00    	je     6ff0 <do_ecall_add_thread+0xc0>
    6f4b:	3c 01                	cmp    $0x1,%al
    6f4d:	0f 85 9d 00 00 00    	jne    6ff0 <do_ecall_add_thread+0xc0>
    6f53:	be 08 00 00 00       	mov    $0x8,%esi
    6f58:	48 89 df             	mov    %rbx,%rdi
    6f5b:	e8 40 eb ff ff       	call   5aa0 <sgx_is_outside_enclave>
    6f60:	85 c0                	test   %eax,%eax
    6f62:	0f 84 88 00 00 00    	je     6ff0 <do_ecall_add_thread+0xc0>
    6f68:	0f ae e8             	lfence 
    6f6b:	48 8b 2b             	mov    (%rbx),%rbp
    6f6e:	48 85 ed             	test   %rbp,%rbp
    6f71:	74 7d                	je     6ff0 <do_ecall_add_thread+0xc0>
    6f73:	0f ae e8             	lfence 
    6f76:	48 89 ef             	mov    %rbp,%rdi
    6f79:	e8 02 f7 ff ff       	call   6680 <_ZL11do_save_tcsPv>
    6f7e:	89 c3                	mov    %eax,%ebx
    6f80:	85 c0                	test   %eax,%eax
    6f82:	75 71                	jne    6ff5 <do_ecall_add_thread+0xc5>
    6f84:	48 89 ef             	mov    %rbp,%rdi
    6f87:	e8 94 f2 ff ff       	call   6220 <do_add_thread>
    6f8c:	89 c3                	mov    %eax,%ebx
    6f8e:	85 c0                	test   %eax,%eax
    6f90:	74 63                	je     6ff5 <do_ecall_add_thread+0xc5>
    6f92:	e8 09 06 00 00       	call   75a0 <is_utility_thread>
    6f97:	84 c0                	test   %al,%al
    6f99:	74 5a                	je     6ff5 <do_ecall_add_thread+0xc5>
    6f9b:	48 8b 0d d6 31 01 00 	mov    0x131d6(%rip),%rcx        # 1a178 <_ZL10g_tcs_node>
    6fa2:	48 85 c9             	test   %rcx,%rcx
    6fa5:	74 4e                	je     6ff5 <do_ecall_add_thread+0xc5>
    6fa7:	48 8b 35 c2 31 01 00 	mov    0x131c2(%rip),%rsi        # 1a170 <_ZL12g_tcs_cookie>
    6fae:	48 8b 01             	mov    (%rcx),%rax
    6fb1:	48 8b 79 08          	mov    0x8(%rcx),%rdi
    6fb5:	48 31 f0             	xor    %rsi,%rax
    6fb8:	48 39 c5             	cmp    %rax,%rbp
    6fbb:	74 41                	je     6ffe <do_ecall_add_thread+0xce>
    6fbd:	48 85 ff             	test   %rdi,%rdi
    6fc0:	75 11                	jne    6fd3 <do_ecall_add_thread+0xa3>
    6fc2:	eb 31                	jmp    6ff5 <do_ecall_add_thread+0xc5>
    6fc4:	0f 1f 40 00          	nopl   0x0(%rax)
    6fc8:	48 89 f9             	mov    %rdi,%rcx
    6fcb:	48 85 c0             	test   %rax,%rax
    6fce:	74 25                	je     6ff5 <do_ecall_add_thread+0xc5>
    6fd0:	48 89 c7             	mov    %rax,%rdi
    6fd3:	48 8b 17             	mov    (%rdi),%rdx
    6fd6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    6fda:	48 31 f2             	xor    %rsi,%rdx
    6fdd:	48 39 d5             	cmp    %rdx,%rbp
    6fe0:	75 e6                	jne    6fc8 <do_ecall_add_thread+0x98>
    6fe2:	48 89 41 08          	mov    %rax,0x8(%rcx)
    6fe6:	e8 15 7e 00 00       	call   ee00 <dlfree>
    6feb:	eb 08                	jmp    6ff5 <do_ecall_add_thread+0xc5>
    6fed:	0f 1f 00             	nopl   (%rax)
    6ff0:	bb 01 00 00 00       	mov    $0x1,%ebx
    6ff5:	48 83 c4 08          	add    $0x8,%rsp
    6ff9:	89 d8                	mov    %ebx,%eax
    6ffb:	5b                   	pop    %rbx
    6ffc:	5d                   	pop    %rbp
    6ffd:	c3                   	ret    
    6ffe:	48 89 3d 73 31 01 00 	mov    %rdi,0x13173(%rip)        # 1a178 <_ZL10g_tcs_node>
    7005:	48 89 cf             	mov    %rcx,%rdi
    7008:	e8 f3 7d 00 00       	call   ee00 <dlfree>
    700d:	eb e6                	jmp    6ff5 <do_ecall_add_thread+0xc5>
    700f:	90                   	nop

0000000000007010 <do_uninit_enclave>:
    7010:	f3 0f 1e fa          	endbr64 
    7014:	48 8d 05 11 0e 01 00 	lea    0x10e11(%rip),%rax        # 17e2c <EDMM_supported>
    701b:	41 54                	push   %r12
    701d:	55                   	push   %rbp
    701e:	53                   	push   %rbx
    701f:	8b 00                	mov    (%rax),%eax
    7021:	85 c0                	test   %eax,%eax
    7023:	0f 84 a4 00 00 00    	je     70cd <do_uninit_enclave+0xbd>
    7029:	49 89 fc             	mov    %rdi,%r12
    702c:	e8 6f 05 00 00       	call   75a0 <is_utility_thread>
    7031:	84 c0                	test   %al,%al
    7033:	0f 84 87 00 00 00    	je     70c0 <do_uninit_enclave+0xb0>
    7039:	f0 83 0d 23 31 01 00 	lock orl $0x1,0x13123(%rip)        # 1a164 <g_uninit_flag>
    7040:	01 
    7041:	48 8b 1d 30 31 01 00 	mov    0x13130(%rip),%rbx        # 1a178 <_ZL10g_tcs_node>
    7048:	48 c7 05 25 31 01 00 	movq   $0x0,0x13125(%rip)        # 1a178 <_ZL10g_tcs_node>
    704f:	00 00 00 00 
    7053:	eb 2f                	jmp    7084 <do_uninit_enclave+0x74>
    7055:	0f 1f 00             	nopl   (%rax)
    7058:	48 8b 3b             	mov    (%rbx),%rdi
    705b:	48 33 3d 0e 31 01 00 	xor    0x1310e(%rip),%rdi        # 1a170 <_ZL12g_tcs_cookie>
    7062:	4c 39 e7             	cmp    %r12,%rdi
    7065:	74 0e                	je     7075 <do_uninit_enclave+0x65>
    7067:	be 00 10 00 00       	mov    $0x1000,%esi
    706c:	e8 4f 48 00 00       	call   b8c0 <mm_dealloc>
    7071:	85 c0                	test   %eax,%eax
    7073:	75 58                	jne    70cd <do_uninit_enclave+0xbd>
    7075:	48 8b 6b 08          	mov    0x8(%rbx),%rbp
    7079:	48 89 df             	mov    %rbx,%rdi
    707c:	e8 7f 7d 00 00       	call   ee00 <dlfree>
    7081:	48 89 eb             	mov    %rbp,%rbx
    7084:	48 85 db             	test   %rbx,%rbx
    7087:	75 cf                	jne    7058 <do_uninit_enclave+0x48>
    7089:	48 8d 1d d8 30 01 00 	lea    0x130d8(%rip),%rbx        # 1a168 <_ZL10g_ife_lock>
    7090:	48 89 df             	mov    %rbx,%rdi
    7093:	e8 b8 55 00 00       	call   c650 <sgx_spin_lock>
    7098:	0f b6 05 a1 11 01 00 	movzbl 0x111a1(%rip),%eax        # 18240 <_ZL16g_is_first_ecall>
    709f:	84 c0                	test   %al,%al
    70a1:	74 45                	je     70e8 <do_uninit_enclave+0xd8>
    70a3:	48 89 df             	mov    %rbx,%rdi
    70a6:	e8 35 56 00 00       	call   c6e0 <sgx_spin_unlock>
    70ab:	bf 03 00 00 00       	mov    $0x3,%edi
    70b0:	e8 60 ae 00 00       	call   11f15 <set_enclave_state>
    70b5:	5b                   	pop    %rbx
    70b6:	31 c0                	xor    %eax,%eax
    70b8:	5d                   	pop    %rbp
    70b9:	41 5c                	pop    %r12
    70bb:	c3                   	ret    
    70bc:	0f 1f 40 00          	nopl   0x0(%rax)
    70c0:	e8 8b f0 ff ff       	call   6150 <is_dynamic_thread_exist>
    70c5:	85 c0                	test   %eax,%eax
    70c7:	0f 84 6c ff ff ff    	je     7039 <do_uninit_enclave+0x29>
    70cd:	bf 03 00 00 00       	mov    $0x3,%edi
    70d2:	e8 3e ae 00 00       	call   11f15 <set_enclave_state>
    70d7:	5b                   	pop    %rbx
    70d8:	b8 01 00 00 00       	mov    $0x1,%eax
    70dd:	5d                   	pop    %rbp
    70de:	41 5c                	pop    %r12
    70e0:	c3                   	ret    
    70e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    70e8:	e8 43 1b 00 00       	call   8c30 <uninit_global_object>
    70ed:	eb b4                	jmp    70a3 <do_uninit_enclave+0x93>
    70ef:	90                   	nop

00000000000070f0 <sgx_ocall>:
    70f0:	f3 0f 1e fa          	endbr64 
    70f4:	8d 47 07             	lea    0x7(%rdi),%eax
    70f7:	83 f8 05             	cmp    $0x5,%eax
    70fa:	76 12                	jbe    710e <sgx_ocall+0x1e>
    70fc:	85 ff                	test   %edi,%edi
    70fe:	74 0e                	je     710e <sgx_ocall+0x1e>
    7100:	48 8d 15 09 bf 00 00 	lea    0xbf09(%rip),%rdx        # 13010 <g_dyn_entry_table>
    7107:	89 f8                	mov    %edi,%eax
    7109:	48 3b 02             	cmp    (%rdx),%rax
    710c:	73 0a                	jae    7118 <sgx_ocall+0x28>
    710e:	e9 cc b0 00 00       	jmp    121df <__morestack>
    7113:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7118:	b8 01 10 00 00       	mov    $0x1001,%eax
    711d:	c3                   	ret    
    711e:	66 90                	xchg   %ax,%ax

0000000000007120 <update_ocall_lastsp>:
    7120:	f3 0f 1e fa          	endbr64 
    7124:	53                   	push   %rbx
    7125:	48 89 fb             	mov    %rdi,%rbx
    7128:	e8 16 ae 00 00       	call   11f43 <get_thread_data>
    712d:	b9 01 00 00 00       	mov    $0x1,%ecx
    7132:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7136:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    713a:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    713e:	74 0b                	je     714b <update_ocall_lastsp+0x2b>
    7140:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    7147:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    714b:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    7152:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7156:	48 89 d0             	mov    %rdx,%rax
    7159:	5b                   	pop    %rbx
    715a:	c3                   	ret    
    715b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007160 <do_oret>:
    7160:	f3 0f 1e fa          	endbr64 
    7164:	55                   	push   %rbp
    7165:	48 89 fd             	mov    %rdi,%rbp
    7168:	53                   	push   %rbx
    7169:	48 83 ec 18          	sub    $0x18,%rsp
    716d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7174:	00 00 
    7176:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    717b:	31 c0                	xor    %eax,%eax
    717d:	e8 c1 ad 00 00       	call   11f43 <get_thread_data>
    7182:	48 83 78 50 01       	cmpq   $0x1,0x50(%rax)
    7187:	48 89 c3             	mov    %rax,%rbx
    718a:	74 74                	je     7200 <do_oret+0xa0>
    718c:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    7190:	48 89 e0             	mov    %rsp,%rax
    7193:	48 89 3c 24          	mov    %rdi,(%rsp)
    7197:	48 39 f8             	cmp    %rdi,%rax
    719a:	72 24                	jb     71c0 <do_oret+0x60>
    719c:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    71a1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    71a8:	00 00 
    71aa:	75 6b                	jne    7217 <do_oret+0xb7>
    71ac:	48 83 c4 18          	add    $0x18,%rsp
    71b0:	b8 01 00 00 00       	mov    $0x1,%eax
    71b5:	5b                   	pop    %rbx
    71b6:	5d                   	pop    %rbp
    71b7:	c3                   	ret    
    71b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    71bf:	00 
    71c0:	48 8b 43 10          	mov    0x10(%rbx),%rax
    71c4:	48 8d 90 10 ff ff ff 	lea    -0xf0(%rax),%rdx
    71cb:	48 39 fa             	cmp    %rdi,%rdx
    71ce:	72 cc                	jb     719c <do_oret+0x3c>
    71d0:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    71d7:	4f 
    71d8:	75 c2                	jne    719c <do_oret+0x3c>
    71da:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    71de:	48 39 d7             	cmp    %rdx,%rdi
    71e1:	73 b9                	jae    719c <do_oret+0x3c>
    71e3:	48 39 d0             	cmp    %rdx,%rax
    71e6:	72 b4                	jb     719c <do_oret+0x3c>
    71e8:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    71ec:	48 89 ee             	mov    %rbp,%rsi
    71ef:	e8 fe af 00 00       	call   121f2 <asm_oret>
    71f4:	eb a6                	jmp    719c <do_oret+0x3c>
    71f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    71fd:	00 00 00 
    7200:	48 c7 40 50 00 00 00 	movq   $0x0,0x50(%rax)
    7207:	00 
    7208:	bf 01 00 00 00       	mov    $0x1,%edi
    720d:	e8 ce f1 ff ff       	call   63e0 <sgx_set_ssa_aexnotify>
    7212:	e9 75 ff ff ff       	jmp    718c <do_oret+0x2c>
    7217:	e8 a4 96 00 00       	call   108c0 <__stack_chk_fail>
    721c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007220 <get_enclave_size>:
    7220:	f3 0f 1e fa          	endbr64 
    7224:	48 8d 05 55 bf 00 00 	lea    0xbf55(%rip),%rax        # 13180 <g_global_data>
    722b:	48 8b 40 08          	mov    0x8(%rax),%rax
    722f:	c3                   	ret    

0000000000007230 <get_enclave_end>:
    7230:	f3 0f 1e fa          	endbr64 
    7234:	48 83 ec 08          	sub    $0x8,%rsp
    7238:	e8 bb ac 00 00       	call   11ef8 <get_enclave_base>
    723d:	48 8d 15 3c bf 00 00 	lea    0xbf3c(%rip),%rdx        # 13180 <g_global_data>
    7244:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7248:	48 83 c4 08          	add    $0x8,%rsp
    724c:	48 8d 44 02 ff       	lea    -0x1(%rdx,%rax,1),%rax
    7251:	c3                   	ret    
    7252:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7259:	00 00 00 
    725c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007260 <get_heap_base>:
    7260:	f3 0f 1e fa          	endbr64 
    7264:	48 83 ec 08          	sub    $0x8,%rsp
    7268:	e8 8b ac 00 00       	call   11ef8 <get_enclave_base>
    726d:	48 8d 15 0c bf 00 00 	lea    0xbf0c(%rip),%rdx        # 13180 <g_global_data>
    7274:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    7278:	48 83 c4 08          	add    $0x8,%rsp
    727c:	48 01 d0             	add    %rdx,%rax
    727f:	c3                   	ret    

0000000000007280 <get_heap_size>:
    7280:	f3 0f 1e fa          	endbr64 
    7284:	48 8d 05 a1 0b 01 00 	lea    0x10ba1(%rip),%rax        # 17e2c <EDMM_supported>
    728b:	48 8d 0d ee be 00 00 	lea    0xbeee(%rip),%rcx        # 13180 <g_global_data>
    7292:	8b 00                	mov    (%rax),%eax
    7294:	48 8b 79 18          	mov    0x18(%rcx),%rdi
    7298:	85 c0                	test   %eax,%eax
    729a:	74 41                	je     72dd <get_heap_size+0x5d>
    729c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    72a2:	85 c0                	test   %eax,%eax
    72a4:	74 37                	je     72dd <get_heap_size+0x5d>
    72a6:	31 d2                	xor    %edx,%edx
    72a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    72af:	00 
    72b0:	89 d0                	mov    %edx,%eax
    72b2:	48 83 c0 0b          	add    $0xb,%rax
    72b6:	48 c1 e0 05          	shl    $0x5,%rax
    72ba:	48 01 c8             	add    %rcx,%rax
    72bd:	0f b7 30             	movzwl (%rax),%esi
    72c0:	66 83 fe 03          	cmp    $0x3,%si
    72c4:	75 0a                	jne    72d0 <get_heap_size+0x50>
    72c6:	8b 40 04             	mov    0x4(%rax),%eax
    72c9:	48 c1 e0 0c          	shl    $0xc,%rax
    72cd:	48 01 c7             	add    %rax,%rdi
    72d0:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    72d6:	83 c2 01             	add    $0x1,%edx
    72d9:	39 c2                	cmp    %eax,%edx
    72db:	72 d3                	jb     72b0 <get_heap_size+0x30>
    72dd:	48 89 f8             	mov    %rdi,%rax
    72e0:	c3                   	ret    
    72e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    72e8:	00 00 00 
    72eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000072f0 <get_heap_min_size>:
    72f0:	f3 0f 1e fa          	endbr64 
    72f4:	48 8d 0d 85 be 00 00 	lea    0xbe85(%rip),%rcx        # 13180 <g_global_data>
    72fb:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7301:	85 c0                	test   %eax,%eax
    7303:	74 3b                	je     7340 <get_heap_min_size+0x50>
    7305:	31 d2                	xor    %edx,%edx
    7307:	eb 14                	jmp    731d <get_heap_min_size+0x2d>
    7309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7310:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7316:	83 c2 01             	add    $0x1,%edx
    7319:	39 c2                	cmp    %eax,%edx
    731b:	73 23                	jae    7340 <get_heap_min_size+0x50>
    731d:	89 d0                	mov    %edx,%eax
    731f:	48 83 c0 0b          	add    $0xb,%rax
    7323:	48 c1 e0 05          	shl    $0x5,%rax
    7327:	48 01 c8             	add    %rcx,%rax
    732a:	0f b7 30             	movzwl (%rax),%esi
    732d:	66 83 fe 01          	cmp    $0x1,%si
    7331:	75 dd                	jne    7310 <get_heap_min_size+0x20>
    7333:	8b 40 04             	mov    0x4(%rax),%eax
    7336:	48 c1 e0 0c          	shl    $0xc,%rax
    733a:	c3                   	ret    
    733b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7340:	31 c0                	xor    %eax,%eax
    7342:	c3                   	ret    
    7343:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    734a:	00 00 00 
    734d:	0f 1f 00             	nopl   (%rax)

0000000000007350 <get_rsrv_base>:
    7350:	f3 0f 1e fa          	endbr64 
    7354:	48 83 ec 08          	sub    $0x8,%rsp
    7358:	e8 9b ab 00 00       	call   11ef8 <get_enclave_base>
    735d:	48 8d 15 1c be 00 00 	lea    0xbe1c(%rip),%rdx        # 13180 <g_global_data>
    7364:	48 8b 52 20          	mov    0x20(%rdx),%rdx
    7368:	48 83 c4 08          	add    $0x8,%rsp
    736c:	48 01 d0             	add    %rdx,%rax
    736f:	c3                   	ret    

0000000000007370 <get_rsrv_end>:
    7370:	f3 0f 1e fa          	endbr64 
    7374:	48 83 ec 08          	sub    $0x8,%rsp
    7378:	e8 7b ab 00 00       	call   11ef8 <get_enclave_base>
    737d:	48 8d 35 fc bd 00 00 	lea    0xbdfc(%rip),%rsi        # 13180 <g_global_data>
    7384:	48 8d 15 a1 0a 01 00 	lea    0x10aa1(%rip),%rdx        # 17e2c <EDMM_supported>
    738b:	4c 8b 4e 20          	mov    0x20(%rsi),%r9
    738f:	8b 12                	mov    (%rdx),%edx
    7391:	4c 8b 46 28          	mov    0x28(%rsi),%r8
    7395:	49 83 e9 01          	sub    $0x1,%r9
    7399:	85 d2                	test   %edx,%edx
    739b:	74 40                	je     73dd <get_rsrv_end+0x6d>
    739d:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    73a3:	85 d2                	test   %edx,%edx
    73a5:	74 36                	je     73dd <get_rsrv_end+0x6d>
    73a7:	31 c9                	xor    %ecx,%ecx
    73a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    73b0:	89 ca                	mov    %ecx,%edx
    73b2:	48 83 c2 0b          	add    $0xb,%rdx
    73b6:	48 c1 e2 05          	shl    $0x5,%rdx
    73ba:	48 01 f2             	add    %rsi,%rdx
    73bd:	0f b7 3a             	movzwl (%rdx),%edi
    73c0:	66 83 ff 16          	cmp    $0x16,%di
    73c4:	75 0a                	jne    73d0 <get_rsrv_end+0x60>
    73c6:	8b 52 04             	mov    0x4(%rdx),%edx
    73c9:	48 c1 e2 0c          	shl    $0xc,%rdx
    73cd:	49 01 d0             	add    %rdx,%r8
    73d0:	8b 96 58 01 00 00    	mov    0x158(%rsi),%edx
    73d6:	83 c1 01             	add    $0x1,%ecx
    73d9:	39 d1                	cmp    %edx,%ecx
    73db:	72 d3                	jb     73b0 <get_rsrv_end+0x40>
    73dd:	4c 01 c8             	add    %r9,%rax
    73e0:	48 83 c4 08          	add    $0x8,%rsp
    73e4:	4c 01 c0             	add    %r8,%rax
    73e7:	c3                   	ret    
    73e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    73ef:	00 

00000000000073f0 <get_rsrv_size>:
    73f0:	f3 0f 1e fa          	endbr64 
    73f4:	48 8d 05 31 0a 01 00 	lea    0x10a31(%rip),%rax        # 17e2c <EDMM_supported>
    73fb:	48 8d 0d 7e bd 00 00 	lea    0xbd7e(%rip),%rcx        # 13180 <g_global_data>
    7402:	8b 00                	mov    (%rax),%eax
    7404:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    7408:	85 c0                	test   %eax,%eax
    740a:	74 41                	je     744d <get_rsrv_size+0x5d>
    740c:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7412:	85 c0                	test   %eax,%eax
    7414:	74 37                	je     744d <get_rsrv_size+0x5d>
    7416:	31 d2                	xor    %edx,%edx
    7418:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    741f:	00 
    7420:	89 d0                	mov    %edx,%eax
    7422:	48 83 c0 0b          	add    $0xb,%rax
    7426:	48 c1 e0 05          	shl    $0x5,%rax
    742a:	48 01 c8             	add    %rcx,%rax
    742d:	0f b7 30             	movzwl (%rax),%esi
    7430:	66 83 fe 16          	cmp    $0x16,%si
    7434:	75 0a                	jne    7440 <get_rsrv_size+0x50>
    7436:	8b 40 04             	mov    0x4(%rax),%eax
    7439:	48 c1 e0 0c          	shl    $0xc,%rax
    743d:	48 01 c7             	add    %rax,%rdi
    7440:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7446:	83 c2 01             	add    $0x1,%edx
    7449:	39 c2                	cmp    %eax,%edx
    744b:	72 d3                	jb     7420 <get_rsrv_size+0x30>
    744d:	48 89 f8             	mov    %rdi,%rax
    7450:	c3                   	ret    
    7451:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7458:	00 00 00 
    745b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007460 <get_rsrv_min_size>:
    7460:	f3 0f 1e fa          	endbr64 
    7464:	48 8d 0d 15 bd 00 00 	lea    0xbd15(%rip),%rcx        # 13180 <g_global_data>
    746b:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7471:	85 c0                	test   %eax,%eax
    7473:	74 3b                	je     74b0 <get_rsrv_min_size+0x50>
    7475:	31 d2                	xor    %edx,%edx
    7477:	eb 14                	jmp    748d <get_rsrv_min_size+0x2d>
    7479:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7480:	8b 81 58 01 00 00    	mov    0x158(%rcx),%eax
    7486:	83 c2 01             	add    $0x1,%edx
    7489:	39 c2                	cmp    %eax,%edx
    748b:	73 23                	jae    74b0 <get_rsrv_min_size+0x50>
    748d:	89 d0                	mov    %edx,%eax
    748f:	48 83 c0 0b          	add    $0xb,%rax
    7493:	48 c1 e0 05          	shl    $0x5,%rax
    7497:	48 01 c8             	add    %rcx,%rax
    749a:	0f b7 30             	movzwl (%rax),%esi
    749d:	66 83 fe 14          	cmp    $0x14,%si
    74a1:	75 dd                	jne    7480 <get_rsrv_min_size+0x20>
    74a3:	8b 40 04             	mov    0x4(%rax),%eax
    74a6:	48 c1 e0 0c          	shl    $0xc,%rax
    74aa:	c3                   	ret    
    74ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    74b0:	31 c0                	xor    %eax,%eax
    74b2:	c3                   	ret    
    74b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    74ba:	00 00 00 
    74bd:	0f 1f 00             	nopl   (%rax)

00000000000074c0 <get_errno_addr>:
    74c0:	f3 0f 1e fa          	endbr64 
    74c4:	48 83 ec 08          	sub    $0x8,%rsp
    74c8:	e8 76 aa 00 00       	call   11f43 <get_thread_data>
    74cd:	48 83 c4 08          	add    $0x8,%rsp
    74d1:	48 83 c0 40          	add    $0x40,%rax
    74d5:	c3                   	ret    
    74d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    74dd:	00 00 00 

00000000000074e0 <feature_supported>:
    74e0:	f3 0f 1e fa          	endbr64 
    74e4:	48 85 ff             	test   %rdi,%rdi
    74e7:	74 37                	je     7520 <feature_supported+0x40>
    74e9:	31 d2                	xor    %edx,%edx
    74eb:	eb 08                	jmp    74f5 <feature_supported+0x15>
    74ed:	0f 1f 00             	nopl   (%rax)
    74f0:	48 85 c0             	test   %rax,%rax
    74f3:	78 2b                	js     7520 <feature_supported+0x40>
    74f5:	89 d0                	mov    %edx,%eax
    74f7:	83 c2 01             	add    $0x1,%edx
    74fa:	41 89 d1             	mov    %edx,%r9d
    74fd:	49 89 c0             	mov    %rax,%r8
    7500:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    7504:	41 c1 e1 06          	shl    $0x6,%r9d
    7508:	44 39 ce             	cmp    %r9d,%esi
    750b:	73 e3                	jae    74f0 <feature_supported+0x10>
    750d:	41 c1 e0 06          	shl    $0x6,%r8d
    7511:	44 29 c6             	sub    %r8d,%esi
    7514:	89 f1                	mov    %esi,%ecx
    7516:	48 d3 e8             	shr    %cl,%rax
    7519:	83 e0 01             	and    $0x1,%eax
    751c:	c3                   	ret    
    751d:	0f 1f 00             	nopl   (%rax)
    7520:	31 c0                	xor    %eax,%eax
    7522:	c3                   	ret    
    7523:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    752a:	00 00 00 
    752d:	0f 1f 00             	nopl   (%rax)

0000000000007530 <is_stack_addr>:
    7530:	f3 0f 1e fa          	endbr64 
    7534:	55                   	push   %rbp
    7535:	48 89 f5             	mov    %rsi,%rbp
    7538:	53                   	push   %rbx
    7539:	48 89 fb             	mov    %rdi,%rbx
    753c:	48 83 ec 08          	sub    $0x8,%rsp
    7540:	e8 fe a9 00 00       	call   11f43 <get_thread_data>
    7545:	31 c9                	xor    %ecx,%ecx
    7547:	48 01 dd             	add    %rbx,%rbp
    754a:	48 89 c2             	mov    %rax,%rdx
    754d:	0f 92 c1             	setb   %cl
    7550:	48 39 68 10          	cmp    %rbp,0x10(%rax)
    7554:	0f 93 c0             	setae  %al
    7557:	48 3b 5a 18          	cmp    0x18(%rdx),%rbx
    755b:	0f 93 c2             	setae  %dl
    755e:	21 d0                	and    %edx,%eax
    7560:	48 85 c9             	test   %rcx,%rcx
    7563:	0f 94 c2             	sete   %dl
    7566:	48 83 c4 08          	add    $0x8,%rsp
    756a:	21 d0                	and    %edx,%eax
    756c:	5b                   	pop    %rbx
    756d:	5d                   	pop    %rbp
    756e:	c3                   	ret    
    756f:	90                   	nop

0000000000007570 <is_valid_sp>:
    7570:	f3 0f 1e fa          	endbr64 
    7574:	40 f6 c7 07          	test   $0x7,%dil
    7578:	74 06                	je     7580 <is_valid_sp+0x10>
    757a:	31 c0                	xor    %eax,%eax
    757c:	c3                   	ret    
    757d:	0f 1f 00             	nopl   (%rax)
    7580:	53                   	push   %rbx
    7581:	48 89 fb             	mov    %rdi,%rbx
    7584:	e8 ba a9 00 00       	call   11f43 <get_thread_data>
    7589:	48 89 c2             	mov    %rax,%rdx
    758c:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    7590:	0f 93 c0             	setae  %al
    7593:	48 39 5a 10          	cmp    %rbx,0x10(%rdx)
    7597:	5b                   	pop    %rbx
    7598:	0f 93 c2             	setae  %dl
    759b:	21 d0                	and    %edx,%eax
    759d:	c3                   	ret    
    759e:	66 90                	xchg   %ax,%ax

00000000000075a0 <is_utility_thread>:
    75a0:	f3 0f 1e fa          	endbr64 
    75a4:	48 83 ec 08          	sub    $0x8,%rsp
    75a8:	e8 96 a9 00 00       	call   11f43 <get_thread_data>
    75ad:	31 d2                	xor    %edx,%edx
    75af:	48 85 c0             	test   %rax,%rax
    75b2:	74 07                	je     75bb <is_utility_thread+0x1b>
    75b4:	48 8b 50 30          	mov    0x30(%rax),%rdx
    75b8:	83 e2 01             	and    $0x1,%edx
    75bb:	89 d0                	mov    %edx,%eax
    75bd:	48 83 c4 08          	add    $0x8,%rsp
    75c1:	c3                   	ret    
    75c2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75c9:	00 00 00 
    75cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000075d0 <get_max_tcs_num>:
    75d0:	f3 0f 1e fa          	endbr64 
    75d4:	48 8d 05 51 08 01 00 	lea    0x10851(%rip),%rax        # 17e2c <EDMM_supported>
    75db:	83 38 01             	cmpl   $0x1,(%rax)
    75de:	48 8d 05 9b bb 00 00 	lea    0xbb9b(%rip),%rax        # 13180 <g_global_data>
    75e5:	74 09                	je     75f0 <get_max_tcs_num+0x20>
    75e7:	48 8b 40 48          	mov    0x48(%rax),%rax
    75eb:	c3                   	ret    
    75ec:	0f 1f 40 00          	nopl   0x0(%rax)
    75f0:	48 8b 40 40          	mov    0x40(%rax),%rax
    75f4:	c3                   	ret    
    75f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    75fc:	00 00 00 
    75ff:	90                   	nop

0000000000007600 <is_pkru_enabled>:
    7600:	f3 0f 1e fa          	endbr64 
    7604:	48 83 ec 08          	sub    $0x8,%rsp
    7608:	e8 23 0a 00 00       	call   8030 <get_xfeature_state>
    760d:	48 83 c4 08          	add    $0x8,%rsp
    7611:	48 c1 e8 09          	shr    $0x9,%rax
    7615:	83 e0 01             	and    $0x1,%eax
    7618:	c3                   	ret    
    7619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007620 <is_tcs_binding_mode>:
    7620:	f3 0f 1e fa          	endbr64 
    7624:	48 8d 05 55 bb 00 00 	lea    0xbb55(%rip),%rax        # 13180 <g_global_data>
    762b:	48 8b 40 38          	mov    0x38(%rax),%rax
    762f:	48 85 c0             	test   %rax,%rax
    7632:	0f 94 c0             	sete   %al
    7635:	c3                   	ret    
    7636:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    763d:	00 00 00 

0000000000007640 <get_xsave_size>:
    7640:	f3 0f 1e fa          	endbr64 
    7644:	48 8d 05 35 bb 00 00 	lea    0xbb35(%rip),%rax        # 13180 <g_global_data>
    764b:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
    7652:	c3                   	ret    
    7653:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    765a:	00 00 00 
    765d:	0f 1f 00             	nopl   (%rax)

0000000000007660 <get_ssa_aexnotify>:
    7660:	f3 0f 1e fa          	endbr64 
    7664:	48 83 ec 08          	sub    $0x8,%rsp
    7668:	e8 d6 a8 00 00       	call   11f43 <get_thread_data>
    766d:	48 85 c0             	test   %rax,%rax
    7670:	74 16                	je     7688 <get_ssa_aexnotify+0x28>
    7672:	48 8b 40 20          	mov    0x20(%rax),%rax
    7676:	0f b6 80 a7 00 00 00 	movzbl 0xa7(%rax),%eax
    767d:	48 83 c4 08          	add    $0x8,%rsp
    7681:	83 e0 01             	and    $0x1,%eax
    7684:	c3                   	ret    
    7685:	0f 1f 00             	nopl   (%rax)
    7688:	31 c0                	xor    %eax,%eax
    768a:	48 83 c4 08          	add    $0x8,%rsp
    768e:	c3                   	ret    
    768f:	90                   	nop

0000000000007690 <internal_handle_exception>:
    7690:	f3 0f 1e fa          	endbr64 
    7694:	55                   	push   %rbp
    7695:	48 89 e5             	mov    %rsp,%rbp
    7698:	41 57                	push   %r15
    769a:	41 56                	push   %r14
    769c:	41 55                	push   %r13
    769e:	41 54                	push   %r12
    76a0:	53                   	push   %rbx
    76a1:	48 89 fb             	mov    %rdi,%rbx
    76a4:	48 83 ec 38          	sub    $0x38,%rsp
    76a8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    76af:	00 00 
    76b1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    76b5:	31 c0                	xor    %eax,%eax
    76b7:	e8 87 a8 00 00       	call   11f43 <get_thread_data>
    76bc:	4c 8b 60 20          	mov    0x20(%rax),%r12
    76c0:	49 89 c5             	mov    %rax,%r13
    76c3:	e8 78 ff ff ff       	call   7640 <get_xsave_size>
    76c8:	48 85 db             	test   %rbx,%rbx
    76cb:	0f 84 4f 01 00 00    	je     7820 <internal_handle_exception+0x190>
    76d1:	49 8d b4 24 ff 0f 00 	lea    0xfff(%r12),%rsi
    76d8:	00 
    76d9:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    76df:	48 8b 93 b0 00 00 00 	mov    0xb0(%rbx),%rdx
    76e6:	4c 8d b3 c0 00 00 00 	lea    0xc0(%rbx),%r14
    76ed:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    76f3:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    76fa:	4c 89 f7             	mov    %r14,%rdi
    76fd:	48 29 c6             	sub    %rax,%rsi
    7700:	e8 ab 8e 00 00       	call   105b0 <memcpy>
    7705:	8b 83 a8 00 00 00    	mov    0xa8(%rbx),%eax
    770b:	85 c0                	test   %eax,%eax
    770d:	0f 84 2e 01 00 00    	je     7841 <internal_handle_exception+0x1b1>
    7713:	49 8b 45 78          	mov    0x78(%r13),%rax
    7717:	48 85 c0             	test   %rax,%rax
    771a:	0f 88 00 01 00 00    	js     7820 <internal_handle_exception+0x190>
    7720:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7724:	83 bb 90 00 00 00 0e 	cmpl   $0xe,0x90(%rbx)
    772b:	49 89 55 78          	mov    %rdx,0x78(%r13)
    772f:	75 27                	jne    7758 <internal_handle_exception+0xc8>
    7731:	48 8b 15 48 2a 01 00 	mov    0x12a48(%rip),%rdx        # 1a180 <g_mm_pfhandler>
    7738:	48 85 d2             	test   %rdx,%rdx
    773b:	74 1b                	je     7758 <internal_handle_exception+0xc8>
    773d:	49 89 45 78          	mov    %rax,0x78(%r13)
    7741:	48 8d bb 98 00 00 00 	lea    0x98(%rbx),%rdi
    7748:	ff d2                	call   *%rdx
    774a:	83 c0 01             	add    $0x1,%eax
    774d:	0f 84 ee 00 00 00    	je     7841 <internal_handle_exception+0x1b1>
    7753:	49 83 45 78 01       	addq   $0x1,0x78(%r13)
    7758:	48 8d 3d 31 2a 01 00 	lea    0x12a31(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    775f:	e8 ec 4e 00 00       	call   c650 <sgx_spin_lock>
    7764:	48 8b 05 2d 2a 01 00 	mov    0x12a2d(%rip),%rax        # 1a198 <_ZL12g_first_node>
    776b:	48 85 c0             	test   %rax,%rax
    776e:	0f 84 b9 00 00 00    	je     782d <internal_handle_exception+0x19d>
    7774:	45 31 ff             	xor    %r15d,%r15d
    7777:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    777e:	00 00 
    7780:	48 8b 40 08          	mov    0x8(%rax),%rax
    7784:	49 83 c7 08          	add    $0x8,%r15
    7788:	48 85 c0             	test   %rax,%rax
    778b:	75 f3                	jne    7780 <internal_handle_exception+0xf0>
    778d:	4d 85 ff             	test   %r15,%r15
    7790:	0f 84 97 00 00 00    	je     782d <internal_handle_exception+0x19d>
    7796:	4c 89 ff             	mov    %r15,%rdi
    7799:	e8 02 4d 00 00       	call   c4a0 <alloca>
    779e:	49 89 c4             	mov    %rax,%r12
    77a1:	48 85 c0             	test   %rax,%rax
    77a4:	0f 84 a9 02 00 00    	je     7a53 <internal_handle_exception+0x3c3>
    77aa:	48 8b 05 e7 29 01 00 	mov    0x129e7(%rip),%rax        # 1a198 <_ZL12g_first_node>
    77b1:	4c 89 e1             	mov    %r12,%rcx
    77b4:	48 85 c0             	test   %rax,%rax
    77b7:	74 1b                	je     77d4 <internal_handle_exception+0x144>
    77b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    77c0:	48 8b 30             	mov    (%rax),%rsi
    77c3:	48 8b 40 08          	mov    0x8(%rax),%rax
    77c7:	48 83 c1 08          	add    $0x8,%rcx
    77cb:	48 89 71 f8          	mov    %rsi,-0x8(%rcx)
    77cf:	48 85 c0             	test   %rax,%rax
    77d2:	75 ec                	jne    77c0 <internal_handle_exception+0x130>
    77d4:	48 8d 3d b5 29 01 00 	lea    0x129b5(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    77db:	4d 01 e7             	add    %r12,%r15
    77de:	e8 fd 4e 00 00       	call   c6e0 <sgx_spin_unlock>
    77e3:	49 83 6d 78 01       	subq   $0x1,0x78(%r13)
    77e8:	eb 13                	jmp    77fd <internal_handle_exception+0x16d>
    77ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    77f0:	49 83 c4 08          	add    $0x8,%r12
    77f4:	4d 39 fc             	cmp    %r15,%r12
    77f7:	0f 84 e7 01 00 00    	je     79e4 <internal_handle_exception+0x354>
    77fd:	49 8b 04 24          	mov    (%r12),%rax
    7801:	48 89 df             	mov    %rbx,%rdi
    7804:	48 33 05 7d 29 01 00 	xor    0x1297d(%rip),%rax        # 1a188 <_ZL12g_veh_cookie>
    780b:	ff d0                	call   *%rax
    780d:	83 f8 ff             	cmp    $0xffffffff,%eax
    7810:	75 de                	jne    77f0 <internal_handle_exception+0x160>
    7812:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    7816:	e8 55 fd ff ff       	call   7570 <is_valid_sp>
    781b:	84 c0                	test   %al,%al
    781d:	75 22                	jne    7841 <internal_handle_exception+0x1b1>
    781f:	90                   	nop
    7820:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7827:	ff 
    7828:	e8 0a ab 00 00       	call   12337 <abort>
    782d:	48 8d 3d 5c 29 01 00 	lea    0x1295c(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7834:	e8 a7 4e 00 00       	call   c6e0 <sgx_spin_unlock>
    7839:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    7840:	ff 
    7841:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7848:	74 12                	je     785c <internal_handle_exception+0x1cc>
    784a:	4c 89 f7             	mov    %r14,%rdi
    784d:	e8 5f a2 00 00       	call   11ab1 <restore_xregs>
    7852:	48 89 df             	mov    %rbx,%rdi
    7855:	e8 f0 aa 00 00       	call   1234a <continue_execution>
    785a:	eb c4                	jmp    7820 <internal_handle_exception+0x190>
    785c:	48 89 df             	mov    %rbx,%rdi
    785f:	e8 cc ed ff ff       	call   6630 <sgx_apply_mitigations>
    7864:	4c 89 f7             	mov    %r14,%rdi
    7867:	e8 45 a2 00 00       	call   11ab1 <restore_xregs>
    786c:	e8 d2 a6 00 00       	call   11f43 <get_thread_data>
    7871:	49 89 c6             	mov    %rax,%r14
    7874:	48 8b 40 10          	mov    0x10(%rax),%rax
    7878:	49 89 c4             	mov    %rax,%r12
    787b:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7882:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    7888:	77 07                	ja     7891 <internal_handle_exception+0x201>
    788a:	4c 8d a0 00 f0 ff ff 	lea    -0x1000(%rax),%r12
    7891:	48 89 d8             	mov    %rbx,%rax
    7894:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    7898:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    789e:	4c 39 e0             	cmp    %r12,%rax
    78a1:	0f 84 93 01 00 00    	je     7a3a <internal_handle_exception+0x3aa>
    78a7:	48 05 00 10 00 00    	add    $0x1000,%rax
    78ad:	48 83 c8 01          	or     $0x1,%rax
    78b1:	49 89 c4             	mov    %rax,%r12
    78b4:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    78bb:	49 89 c7             	mov    %rax,%r15
    78be:	48 c1 e8 0b          	shr    $0xb,%rax
    78c2:	48 89 c1             	mov    %rax,%rcx
    78c5:	49 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%r15
    78cc:	81 e1 fe 0f 00 00    	and    $0xffe,%ecx
    78d2:	48 03 0d 0f 07 01 00 	add    0x1070f(%rip),%rcx        # 17fe8 <_GLOBAL_OFFSET_TABLE_+0x30>
    78d9:	44 0f b7 09          	movzwl (%rcx),%r9d
    78dd:	4b 8d 14 39          	lea    (%r9,%r15,1),%rdx
    78e1:	80 3a c3             	cmpb   $0xc3,(%rdx)
    78e4:	74 3b                	je     7921 <internal_handle_exception+0x291>
    78e6:	4d 89 f9             	mov    %r15,%r9
    78e9:	49 8d 87 00 10 00 00 	lea    0x1000(%r15),%rax
    78f0:	eb 13                	jmp    7905 <internal_handle_exception+0x275>
    78f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    78f8:	49 83 c1 01          	add    $0x1,%r9
    78fc:	4c 39 c8             	cmp    %r9,%rax
    78ff:	0f 84 5f 01 00 00    	je     7a64 <internal_handle_exception+0x3d4>
    7905:	41 80 39 c3          	cmpb   $0xc3,(%r9)
    7909:	75 ed                	jne    78f8 <internal_handle_exception+0x268>
    790b:	4c 39 c8             	cmp    %r9,%rax
    790e:	0f 84 50 01 00 00    	je     7a64 <internal_handle_exception+0x3d4>
    7914:	44 89 c8             	mov    %r9d,%eax
    7917:	4c 89 ca             	mov    %r9,%rdx
    791a:	66 25 ff 0f          	and    $0xfff,%ax
    791e:	66 89 01             	mov    %ax,(%rcx)
    7921:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7925:	48 89 df             	mov    %rbx,%rdi
    7928:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)
    792c:	e8 0f ca ff ff       	call   4340 <ct_decode>
    7931:	4d 89 e0             	mov    %r12,%r8
    7934:	be 01 00 00 00       	mov    $0x1,%esi
    7939:	49 83 e0 fe          	and    $0xfffffffffffffffe,%r8
    793d:	4c 63 c8             	movslq %eax,%r9
    7940:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7944:	4c 89 c1             	mov    %r8,%rcx
    7947:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
    794b:	49 83 f9 01          	cmp    $0x1,%r9
    794f:	48 0f 44 c8          	cmove  %rax,%rcx
    7953:	49 83 f9 02          	cmp    $0x2,%r9
    7957:	48 0f 44 c8          	cmove  %rax,%rcx
    795b:	48 89 cf             	mov    %rcx,%rdi
    795e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)
    7962:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    7966:	e8 d5 e0 ff ff       	call   5a40 <sgx_is_within_enclave>
    796b:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    796f:	4c 8b 45 a8          	mov    -0x58(%rbp),%r8
    7973:	85 c0                	test   %eax,%eax
    7975:	4c 8b 4d b0          	mov    -0x50(%rbp),%r9
    7979:	48 98                	cltq   
    797b:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
    797f:	4c 0f 45 c1          	cmovne %rcx,%r8
    7983:	4c 89 f9             	mov    %r15,%rcx
    7986:	48 83 c9 01          	or     $0x1,%rcx
    798a:	49 83 f9 02          	cmp    $0x2,%r9
    798e:	4c 0f 44 f9          	cmove  %rcx,%r15
    7992:	4c 89 fe             	mov    %r15,%rsi
    7995:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    7999:	48 83 f8 01          	cmp    $0x1,%rax
    799d:	49 0f 44 f7          	cmove  %r15,%rsi
    79a1:	41 83 ae bc 00 00 00 	subl   $0x1,0xbc(%r14)
    79a8:	01 
    79a9:	78 57                	js     7a02 <internal_handle_exception+0x372>
    79ab:	41 8b 8e b8 00 00 00 	mov    0xb8(%r14),%ecx
    79b2:	49 89 d1             	mov    %rdx,%r9
    79b5:	48 89 df             	mov    %rbx,%rdi
    79b8:	4c 89 e2             	mov    %r12,%rdx
    79bb:	89 c8                	mov    %ecx,%eax
    79bd:	c1 e1 04             	shl    $0x4,%ecx
    79c0:	d1 e8                	shr    %eax
    79c2:	83 e1 10             	and    $0x10,%ecx
    79c5:	48 09 f1             	or     %rsi,%rcx
    79c8:	41 89 86 b8 00 00 00 	mov    %eax,0xb8(%r14)
    79cf:	49 8b 76 20          	mov    0x20(%r14),%rsi
    79d3:	48 81 c6 a7 00 00 00 	add    $0xa7,%rsi
    79da:	e8 21 a2 00 00       	call   11c00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>
    79df:	e9 3c fe ff ff       	jmp    7820 <internal_handle_exception+0x190>
    79e4:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    79e8:	e8 83 fb ff ff       	call   7570 <is_valid_sp>
    79ed:	84 c0                	test   %al,%al
    79ef:	0f 84 2b fe ff ff    	je     7820 <internal_handle_exception+0x190>
    79f5:	49 c7 45 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r13)
    79fc:	ff 
    79fd:	e9 3f fe ff ff       	jmp    7841 <internal_handle_exception+0x1b1>
    7a02:	49 8d be b8 00 00 00 	lea    0xb8(%r14),%rdi
    7a09:	48 89 75 a8          	mov    %rsi,-0x58(%rbp)
    7a0d:	4c 89 45 b0          	mov    %r8,-0x50(%rbp)
    7a11:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    7a15:	e8 fa a8 00 00       	call   12314 <do_rdrand>
    7a1a:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7a1e:	4c 8b 45 b0          	mov    -0x50(%rbp),%r8
    7a22:	85 c0                	test   %eax,%eax
    7a24:	48 8b 75 a8          	mov    -0x58(%rbp),%rsi
    7a28:	74 46                	je     7a70 <internal_handle_exception+0x3e0>
    7a2a:	41 c7 86 bc 00 00 00 	movl   $0x1f,0xbc(%r14)
    7a31:	1f 00 00 00 
    7a35:	e9 71 ff ff ff       	jmp    79ab <internal_handle_exception+0x31b>
    7a3a:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    7a41:	4c 39 e1             	cmp    %r12,%rcx
    7a44:	0f 84 6a fe ff ff    	je     78b4 <internal_handle_exception+0x224>
    7a4a:	49 83 cc 01          	or     $0x1,%r12
    7a4e:	e9 61 fe ff ff       	jmp    78b4 <internal_handle_exception+0x224>
    7a53:	48 8d 3d 36 27 01 00 	lea    0x12736(%rip),%rdi        # 1a190 <_ZL14g_handler_lock>
    7a5a:	e8 81 4c 00 00       	call   c6e0 <sgx_spin_unlock>
    7a5f:	e9 bc fd ff ff       	jmp    7820 <internal_handle_exception+0x190>
    7a64:	48 8d 15 8c a4 00 00 	lea    0xa48c(%rip),%rdx        # 11ef7 <__ct_mitigation_ret>
    7a6b:	e9 b1 fe ff ff       	jmp    7921 <internal_handle_exception+0x291>
    7a70:	49 c7 46 78 ff ff ff 	movq   $0xffffffffffffffff,0x78(%r14)
    7a77:	ff 
    7a78:	e8 ba a8 00 00       	call   12337 <abort>
    7a7d:	0f 1f 00             	nopl   (%rax)

0000000000007a80 <sgx_register_exception_handler>:
    7a80:	f3 0f 1e fa          	endbr64 
    7a84:	41 55                	push   %r13
    7a86:	41 54                	push   %r12
    7a88:	41 89 fc             	mov    %edi,%r12d
    7a8b:	55                   	push   %rbp
    7a8c:	48 89 f5             	mov    %rsi,%rbp
    7a8f:	53                   	push   %rbx
    7a90:	48 83 ec 18          	sub    $0x18,%rsp
    7a94:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7a9b:	00 00 
    7a9d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7aa2:	31 c0                	xor    %eax,%eax
    7aa4:	48 83 3d dc 26 01 00 	cmpq   $0x0,0x126dc(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7aab:	00 
    7aac:	0f 84 ae 00 00 00    	je     7b60 <sgx_register_exception_handler+0xe0>
    7ab2:	31 f6                	xor    %esi,%esi
    7ab4:	48 89 ef             	mov    %rbp,%rdi
    7ab7:	e8 84 df ff ff       	call   5a40 <sgx_is_within_enclave>
    7abc:	85 c0                	test   %eax,%eax
    7abe:	0f 84 cc 00 00 00    	je     7b90 <sgx_register_exception_handler+0x110>
    7ac4:	bf 10 00 00 00       	mov    $0x10,%edi
    7ac9:	e8 42 55 00 00       	call   d010 <dlmalloc>
    7ace:	48 89 c3             	mov    %rax,%rbx
    7ad1:	48 85 c0             	test   %rax,%rax
    7ad4:	0f 84 b6 00 00 00    	je     7b90 <sgx_register_exception_handler+0x110>
    7ada:	48 33 2d a7 26 01 00 	xor    0x126a7(%rip),%rbp        # 1a188 <_ZL12g_veh_cookie>
    7ae1:	4c 8d 2d a8 26 01 00 	lea    0x126a8(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7ae8:	48 89 28             	mov    %rbp,(%rax)
    7aeb:	4c 89 ef             	mov    %r13,%rdi
    7aee:	e8 5d 4b 00 00       	call   c650 <sgx_spin_lock>
    7af3:	48 8b 15 9e 26 01 00 	mov    0x1269e(%rip),%rdx        # 1a198 <_ZL12g_first_node>
    7afa:	45 85 e4             	test   %r12d,%r12d
    7afd:	75 29                	jne    7b28 <sgx_register_exception_handler+0xa8>
    7aff:	48 85 d2             	test   %rdx,%rdx
    7b02:	74 24                	je     7b28 <sgx_register_exception_handler+0xa8>
    7b04:	0f 1f 40 00          	nopl   0x0(%rax)
    7b08:	48 89 d0             	mov    %rdx,%rax
    7b0b:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7b0f:	48 85 d2             	test   %rdx,%rdx
    7b12:	75 f4                	jne    7b08 <sgx_register_exception_handler+0x88>
    7b14:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7b1b:	00 
    7b1c:	48 89 58 08          	mov    %rbx,0x8(%rax)
    7b20:	eb 11                	jmp    7b33 <sgx_register_exception_handler+0xb3>
    7b22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7b28:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7b2c:	48 89 1d 65 26 01 00 	mov    %rbx,0x12665(%rip)        # 1a198 <_ZL12g_first_node>
    7b33:	4c 89 ef             	mov    %r13,%rdi
    7b36:	e8 a5 4b 00 00       	call   c6e0 <sgx_spin_unlock>
    7b3b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    7b40:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    7b47:	00 00 
    7b49:	75 7e                	jne    7bc9 <sgx_register_exception_handler+0x149>
    7b4b:	48 83 c4 18          	add    $0x18,%rsp
    7b4f:	48 89 d8             	mov    %rbx,%rax
    7b52:	5b                   	pop    %rbx
    7b53:	5d                   	pop    %rbp
    7b54:	41 5c                	pop    %r12
    7b56:	41 5d                	pop    %r13
    7b58:	c3                   	ret    
    7b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7b60:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    7b67:	00 
    7b68:	48 89 e3             	mov    %rsp,%rbx
    7b6b:	eb 0a                	jmp    7b77 <sgx_register_exception_handler+0xf7>
    7b6d:	0f 1f 00             	nopl   (%rax)
    7b70:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    7b75:	75 21                	jne    7b98 <sgx_register_exception_handler+0x118>
    7b77:	be 08 00 00 00       	mov    $0x8,%esi
    7b7c:	48 89 df             	mov    %rbx,%rdi
    7b7f:	e8 bc e0 ff ff       	call   5c40 <sgx_read_rand>
    7b84:	85 c0                	test   %eax,%eax
    7b86:	74 e8                	je     7b70 <sgx_register_exception_handler+0xf0>
    7b88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7b8f:	00 
    7b90:	31 db                	xor    %ebx,%ebx
    7b92:	eb a7                	jmp    7b3b <sgx_register_exception_handler+0xbb>
    7b94:	0f 1f 40 00          	nopl   0x0(%rax)
    7b98:	4c 8d 2d f1 25 01 00 	lea    0x125f1(%rip),%r13        # 1a190 <_ZL14g_handler_lock>
    7b9f:	4c 89 ef             	mov    %r13,%rdi
    7ba2:	e8 a9 4a 00 00       	call   c650 <sgx_spin_lock>
    7ba7:	48 83 3d d9 25 01 00 	cmpq   $0x0,0x125d9(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7bae:	00 
    7baf:	75 0b                	jne    7bbc <sgx_register_exception_handler+0x13c>
    7bb1:	48 8b 04 24          	mov    (%rsp),%rax
    7bb5:	48 89 05 cc 25 01 00 	mov    %rax,0x125cc(%rip)        # 1a188 <_ZL12g_veh_cookie>
    7bbc:	4c 89 ef             	mov    %r13,%rdi
    7bbf:	e8 1c 4b 00 00       	call   c6e0 <sgx_spin_unlock>
    7bc4:	e9 e9 fe ff ff       	jmp    7ab2 <sgx_register_exception_handler+0x32>
    7bc9:	e8 f2 8c 00 00       	call   108c0 <__stack_chk_fail>
    7bce:	66 90                	xchg   %ax,%ax

0000000000007bd0 <sgx_unregister_exception_handler>:
    7bd0:	f3 0f 1e fa          	endbr64 
    7bd4:	48 85 ff             	test   %rdi,%rdi
    7bd7:	0f 84 9b 00 00 00    	je     7c78 <sgx_unregister_exception_handler+0xa8>
    7bdd:	55                   	push   %rbp
    7bde:	48 8d 2d ab 25 01 00 	lea    0x125ab(%rip),%rbp        # 1a190 <_ZL14g_handler_lock>
    7be5:	53                   	push   %rbx
    7be6:	48 89 fb             	mov    %rdi,%rbx
    7be9:	48 89 ef             	mov    %rbp,%rdi
    7bec:	48 83 ec 08          	sub    $0x8,%rsp
    7bf0:	e8 5b 4a 00 00       	call   c650 <sgx_spin_lock>
    7bf5:	48 8b 05 9c 25 01 00 	mov    0x1259c(%rip),%rax        # 1a198 <_ZL12g_first_node>
    7bfc:	48 85 c0             	test   %rax,%rax
    7bff:	74 20                	je     7c21 <sgx_unregister_exception_handler+0x51>
    7c01:	48 39 d8             	cmp    %rbx,%rax
    7c04:	75 0f                	jne    7c15 <sgx_unregister_exception_handler+0x45>
    7c06:	eb 58                	jmp    7c60 <sgx_unregister_exception_handler+0x90>
    7c08:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7c0f:	00 
    7c10:	48 39 d8             	cmp    %rbx,%rax
    7c13:	74 23                	je     7c38 <sgx_unregister_exception_handler+0x68>
    7c15:	48 89 c2             	mov    %rax,%rdx
    7c18:	48 8b 40 08          	mov    0x8(%rax),%rax
    7c1c:	48 85 c0             	test   %rax,%rax
    7c1f:	75 ef                	jne    7c10 <sgx_unregister_exception_handler+0x40>
    7c21:	48 89 ef             	mov    %rbp,%rdi
    7c24:	e8 b7 4a 00 00       	call   c6e0 <sgx_spin_unlock>
    7c29:	48 83 c4 08          	add    $0x8,%rsp
    7c2d:	31 c0                	xor    %eax,%eax
    7c2f:	5b                   	pop    %rbx
    7c30:	5d                   	pop    %rbp
    7c31:	c3                   	ret    
    7c32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7c38:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7c3c:	48 89 ef             	mov    %rbp,%rdi
    7c3f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    7c43:	e8 98 4a 00 00       	call   c6e0 <sgx_spin_unlock>
    7c48:	48 89 df             	mov    %rbx,%rdi
    7c4b:	e8 b0 71 00 00       	call   ee00 <dlfree>
    7c50:	48 83 c4 08          	add    $0x8,%rsp
    7c54:	b8 01 00 00 00       	mov    $0x1,%eax
    7c59:	5b                   	pop    %rbx
    7c5a:	5d                   	pop    %rbp
    7c5b:	c3                   	ret    
    7c5c:	0f 1f 40 00          	nopl   0x0(%rax)
    7c60:	48 8b 43 08          	mov    0x8(%rbx),%rax
    7c64:	48 89 ef             	mov    %rbp,%rdi
    7c67:	48 89 05 2a 25 01 00 	mov    %rax,0x1252a(%rip)        # 1a198 <_ZL12g_first_node>
    7c6e:	e8 6d 4a 00 00       	call   c6e0 <sgx_spin_unlock>
    7c73:	eb d3                	jmp    7c48 <sgx_unregister_exception_handler+0x78>
    7c75:	0f 1f 00             	nopl   (%rax)
    7c78:	31 c0                	xor    %eax,%eax
    7c7a:	c3                   	ret    
    7c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007c80 <trts_handle_exception>:
    7c80:	f3 0f 1e fa          	endbr64 
    7c84:	41 57                	push   %r15
    7c86:	41 56                	push   %r14
    7c88:	41 55                	push   %r13
    7c8a:	41 54                	push   %r12
    7c8c:	55                   	push   %rbp
    7c8d:	53                   	push   %rbx
    7c8e:	48 89 fb             	mov    %rdi,%rbx
    7c91:	48 83 ec 08          	sub    $0x8,%rsp
    7c95:	e8 a9 a2 00 00       	call   11f43 <get_thread_data>
    7c9a:	48 85 c0             	test   %rax,%rax
    7c9d:	48 89 c5             	mov    %rax,%rbp
    7ca0:	0f 94 c2             	sete   %dl
    7ca3:	48 85 db             	test   %rbx,%rbx
    7ca6:	0f 94 c0             	sete   %al
    7ca9:	08 c2                	or     %al,%dl
    7cab:	75 33                	jne    7ce0 <trts_handle_exception+0x60>
    7cad:	48 89 df             	mov    %rbx,%rdi
    7cb0:	41 89 d4             	mov    %edx,%r12d
    7cb3:	e8 b8 e0 ff ff       	call   5d70 <check_static_stack_canary>
    7cb8:	85 c0                	test   %eax,%eax
    7cba:	75 24                	jne    7ce0 <trts_handle_exception+0x60>
    7cbc:	e8 43 a2 00 00       	call   11f04 <get_enclave_state>
    7cc1:	83 f8 02             	cmp    $0x2,%eax
    7cc4:	75 1a                	jne    7ce0 <trts_handle_exception+0x60>
    7cc6:	48 83 7d 78 ff       	cmpq   $0xffffffffffffffff,0x78(%rbp)
    7ccb:	74 13                	je     7ce0 <trts_handle_exception+0x60>
    7ccd:	48 8b 45 10          	mov    0x10(%rbp),%rax
    7cd1:	48 05 00 04 01 00    	add    $0x10400,%rax
    7cd7:	48 39 c3             	cmp    %rax,%rbx
    7cda:	74 24                	je     7d00 <trts_handle_exception+0x80>
    7cdc:	0f 1f 40 00          	nopl   0x0(%rax)
    7ce0:	bf 03 00 00 00       	mov    $0x3,%edi
    7ce5:	e8 2b a2 00 00       	call   11f15 <set_enclave_state>
    7cea:	b8 06 10 00 00       	mov    $0x1006,%eax
    7cef:	48 83 c4 08          	add    $0x8,%rsp
    7cf3:	5b                   	pop    %rbx
    7cf4:	5d                   	pop    %rbp
    7cf5:	41 5c                	pop    %r12
    7cf7:	41 5d                	pop    %r13
    7cf9:	41 5e                	pop    %r14
    7cfb:	41 5f                	pop    %r15
    7cfd:	c3                   	ret    
    7cfe:	66 90                	xchg   %ax,%ax
    7d00:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7d04:	e8 37 f9 ff ff       	call   7640 <get_xsave_size>
    7d09:	48 05 b7 10 00 00    	add    $0x10b7,%rax
    7d0f:	49 81 e5 00 f0 ff ff 	and    $0xfffffffffffff000,%r13
    7d16:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    7d1c:	49 29 c5             	sub    %rax,%r13
    7d1f:	4c 39 eb             	cmp    %r13,%rbx
    7d22:	75 bc                	jne    7ce0 <trts_handle_exception+0x60>
    7d24:	4c 8b 6d 20          	mov    0x20(%rbp),%r13
    7d28:	be 08 00 00 00       	mov    $0x8,%esi
    7d2d:	4d 8b b5 90 00 00 00 	mov    0x90(%r13),%r14
    7d34:	4c 89 f7             	mov    %r14,%rdi
    7d37:	e8 64 dd ff ff       	call   5aa0 <sgx_is_outside_enclave>
    7d3c:	85 c0                	test   %eax,%eax
    7d3e:	0f 84 ec 01 00 00    	je     7f30 <trts_handle_exception+0x2b0>
    7d44:	49 8b 5d 20          	mov    0x20(%r13),%rbx
    7d48:	49 39 de             	cmp    %rbx,%r14
    7d4b:	0f 84 df 01 00 00    	je     7f30 <trts_handle_exception+0x2b0>
    7d51:	31 f6                	xor    %esi,%esi
    7d53:	48 89 df             	mov    %rbx,%rdi
    7d56:	e8 d5 f7 ff ff       	call   7530 <is_stack_addr>
    7d5b:	84 c0                	test   %al,%al
    7d5d:	0f 84 cd 01 00 00    	je     7f30 <trts_handle_exception+0x2b0>
    7d63:	48 8b 45 38          	mov    0x38(%rbp),%rax
    7d67:	48 8d b0 b8 01 00 00 	lea    0x1b8(%rax),%rsi
    7d6e:	48 29 f3             	sub    %rsi,%rbx
    7d71:	48 83 e3 c0          	and    $0xffffffffffffffc0,%rbx
    7d75:	48 89 df             	mov    %rbx,%rdi
    7d78:	e8 b3 f7 ff ff       	call   7530 <is_stack_addr>
    7d7d:	84 c0                	test   %al,%al
    7d7f:	0f 84 ab 01 00 00    	je     7f30 <trts_handle_exception+0x2b0>
    7d85:	4c 8d 7b f8          	lea    -0x8(%rbx),%r15
    7d89:	be 08 00 00 00       	mov    $0x8,%esi
    7d8e:	4c 89 ff             	mov    %r15,%rdi
    7d91:	e8 9a f7 ff ff       	call   7530 <is_stack_addr>
    7d96:	41 89 c6             	mov    %eax,%r14d
    7d99:	84 c0                	test   %al,%al
    7d9b:	0f 84 8f 01 00 00    	je     7f30 <trts_handle_exception+0x2b0>
    7da1:	48 8b bd b0 00 00 00 	mov    0xb0(%rbp),%rdi
    7da8:	49 39 ff             	cmp    %rdi,%r15
    7dab:	0f 83 93 01 00 00    	jae    7f44 <trts_handle_exception+0x2c4>
    7db1:	4c 8d a7 ff 0f 00 00 	lea    0xfff(%rdi),%r12
    7db8:	4d 29 fc             	sub    %r15,%r12
    7dbb:	49 81 e4 00 f0 ff ff 	and    $0xfffffffffffff000,%r12
    7dc2:	49 39 fc             	cmp    %rdi,%r12
    7dc5:	0f 83 65 01 00 00    	jae    7f30 <trts_handle_exception+0x2b0>
    7dcb:	4c 29 e7             	sub    %r12,%rdi
    7dce:	48 3b 7d 18          	cmp    0x18(%rbp),%rdi
    7dd2:	0f 82 58 01 00 00    	jb     7f30 <trts_handle_exception+0x2b0>
    7dd8:	4d 85 e4             	test   %r12,%r12
    7ddb:	0f 84 4f 01 00 00    	je     7f30 <trts_handle_exception+0x2b0>
    7de1:	4c 89 e6             	mov    %r12,%rsi
    7de4:	e8 b7 3a 00 00       	call   b8a0 <mm_commit>
    7de9:	85 c0                	test   %eax,%eax
    7deb:	0f 85 3f 01 00 00    	jne    7f30 <trts_handle_exception+0x2b0>
    7df1:	48 8d 05 1c 00 01 00 	lea    0x1001c(%rip),%rax        # 17e14 <g_aexnotify_supported>
    7df8:	4c 29 a5 b0 00 00 00 	sub    %r12,0xb0(%rbp)
    7dff:	45 89 f4             	mov    %r14d,%r12d
    7e02:	8b 08                	mov    (%rax),%ecx
    7e04:	31 c0                	xor    %eax,%eax
    7e06:	89 83 a8 00 00 00    	mov    %eax,0xa8(%rbx)
    7e0c:	41 0f b6 85 a0 00 00 	movzbl 0xa0(%r13),%eax
    7e13:	00 
    7e14:	89 83 90 00 00 00    	mov    %eax,0x90(%rbx)
    7e1a:	41 0f b6 95 a1 00 00 	movzbl 0xa1(%r13),%edx
    7e21:	00 
    7e22:	83 e8 0d             	sub    $0xd,%eax
    7e25:	83 e2 07             	and    $0x7,%edx
    7e28:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    7e2e:	48 8b 55 38          	mov    0x38(%rbp),%rdx
    7e32:	48 89 93 b0 00 00 00 	mov    %rdx,0xb0(%rbx)
    7e39:	49 8b 55 00          	mov    0x0(%r13),%rdx
    7e3d:	48 89 13             	mov    %rdx,(%rbx)
    7e40:	49 8b 55 08          	mov    0x8(%r13),%rdx
    7e44:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    7e48:	49 8b 55 10          	mov    0x10(%r13),%rdx
    7e4c:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    7e50:	49 8b 55 18          	mov    0x18(%r13),%rdx
    7e54:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    7e58:	49 8b 55 20          	mov    0x20(%r13),%rdx
    7e5c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    7e60:	49 8b 55 28          	mov    0x28(%r13),%rdx
    7e64:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    7e68:	49 8b 55 30          	mov    0x30(%r13),%rdx
    7e6c:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    7e70:	49 8b 55 38          	mov    0x38(%r13),%rdx
    7e74:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    7e78:	49 8b 95 80 00 00 00 	mov    0x80(%r13),%rdx
    7e7f:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    7e86:	49 8b 95 88 00 00 00 	mov    0x88(%r13),%rdx
    7e8d:	48 89 93 88 00 00 00 	mov    %rdx,0x88(%rbx)
    7e94:	49 8b 75 40          	mov    0x40(%r13),%rsi
    7e98:	48 89 73 40          	mov    %rsi,0x40(%rbx)
    7e9c:	49 8b 75 48          	mov    0x48(%r13),%rsi
    7ea0:	48 89 73 48          	mov    %rsi,0x48(%rbx)
    7ea4:	49 8b 75 50          	mov    0x50(%r13),%rsi
    7ea8:	48 89 73 50          	mov    %rsi,0x50(%rbx)
    7eac:	49 8b 75 58          	mov    0x58(%r13),%rsi
    7eb0:	48 89 73 58          	mov    %rsi,0x58(%rbx)
    7eb4:	49 8b 75 60          	mov    0x60(%r13),%rsi
    7eb8:	48 89 73 60          	mov    %rsi,0x60(%rbx)
    7ebc:	49 8b 75 68          	mov    0x68(%r13),%rsi
    7ec0:	48 89 73 68          	mov    %rsi,0x68(%rbx)
    7ec4:	49 8b 75 70          	mov    0x70(%r13),%rsi
    7ec8:	48 89 73 70          	mov    %rsi,0x70(%rbx)
    7ecc:	49 8b 75 78          	mov    0x78(%r13),%rsi
    7ed0:	48 89 73 78          	mov    %rsi,0x78(%rbx)
    7ed4:	83 f8 01             	cmp    $0x1,%eax
    7ed7:	77 15                	ja     7eee <trts_handle_exception+0x26e>
    7ed9:	49 8b 45 f0          	mov    -0x10(%r13),%rax
    7edd:	48 89 83 98 00 00 00 	mov    %rax,0x98(%rbx)
    7ee4:	41 8b 45 f8          	mov    -0x8(%r13),%eax
    7ee8:	89 83 a0 00 00 00    	mov    %eax,0xa0(%rbx)
    7eee:	85 c9                	test   %ecx,%ecx
    7ef0:	0f 85 99 00 00 00    	jne    7f8f <trts_handle_exception+0x30f>
    7ef6:	45 84 e4             	test   %r12b,%r12b
    7ef9:	0f 85 ec 00 00 00    	jne    7feb <trts_handle_exception+0x36b>
    7eff:	48 8d 05 8a f7 ff ff 	lea    -0x876(%rip),%rax        # 7690 <internal_handle_exception>
    7f06:	4d 89 7d 20          	mov    %r15,0x20(%r13)
    7f0a:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    7f11:	49 89 5d 00          	mov    %rbx,0x0(%r13)
    7f15:	49 89 5d 38          	mov    %rbx,0x38(%r13)
    7f19:	48 8b 83 88 00 00 00 	mov    0x88(%rbx),%rax
    7f20:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    7f24:	31 c0                	xor    %eax,%eax
    7f26:	e9 c4 fd ff ff       	jmp    7cef <trts_handle_exception+0x6f>
    7f2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7f30:	bf 03 00 00 00       	mov    $0x3,%edi
    7f35:	e8 db 9f 00 00       	call   11f15 <set_enclave_state>
    7f3a:	b8 09 10 00 00       	mov    $0x1009,%eax
    7f3f:	e9 ab fd ff ff       	jmp    7cef <trts_handle_exception+0x6f>
    7f44:	48 8d 15 c9 fe 00 00 	lea    0xfec9(%rip),%rdx        # 17e14 <g_aexnotify_supported>
    7f4b:	49 8b 85 88 00 00 00 	mov    0x88(%r13),%rax
    7f52:	48 3b 05 87 00 01 00 	cmp    0x10087(%rip),%rax        # 17fe0 <_GLOBAL_OFFSET_TABLE_+0x28>
    7f59:	8b 0a                	mov    (%rdx),%ecx
    7f5b:	74 6a                	je     7fc7 <trts_handle_exception+0x347>
    7f5d:	48 3b 05 74 00 01 00 	cmp    0x10074(%rip),%rax        # 17fd8 <_GLOBAL_OFFSET_TABLE_+0x20>
    7f64:	0f 84 8c 00 00 00    	je     7ff6 <trts_handle_exception+0x376>
    7f6a:	85 c9                	test   %ecx,%ecx
    7f6c:	75 0e                	jne    7f7c <trts_handle_exception+0x2fc>
    7f6e:	41 80 bd a3 00 00 00 	cmpb   $0x0,0xa3(%r13)
    7f75:	00 
    7f76:	0f 89 64 fd ff ff    	jns    7ce0 <trts_handle_exception+0x60>
    7f7c:	41 0f b6 85 a3 00 00 	movzbl 0xa3(%r13),%eax
    7f83:	00 
    7f84:	c0 e8 07             	shr    $0x7,%al
    7f87:	0f b6 c0             	movzbl %al,%eax
    7f8a:	e9 77 fe ff ff       	jmp    7e06 <trts_handle_exception+0x186>
    7f8f:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    7f93:	e8 c8 f6 ff ff       	call   7660 <get_ssa_aexnotify>
    7f98:	48 8b 7d 58          	mov    0x58(%rbp),%rdi
    7f9c:	89 83 ac 00 00 00    	mov    %eax,0xac(%rbx)
    7fa2:	e8 0a 9b 00 00       	call   11ab1 <restore_xregs>
    7fa7:	83 bb ac 00 00 00 01 	cmpl   $0x1,0xac(%rbx)
    7fae:	74 76                	je     8026 <trts_handle_exception+0x3a6>
    7fb0:	48 8d 15 d9 f6 ff ff 	lea    -0x927(%rip),%rdx        # 7690 <internal_handle_exception>
    7fb7:	4c 89 fe             	mov    %r15,%rsi
    7fba:	48 89 df             	mov    %rbx,%rdi
    7fbd:	e8 ee a3 00 00       	call   123b0 <second_phase>
    7fc2:	e9 19 fd ff ff       	jmp    7ce0 <trts_handle_exception+0x60>
    7fc7:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    7fcc:	75 8f                	jne    7f5d <trts_handle_exception+0x2dd>
    7fce:	48 83 c0 03          	add    $0x3,%rax
    7fd2:	49 83 8d 80 00 00 00 	orq    $0x1,0x80(%r13)
    7fd9:	01 
    7fda:	45 89 f4             	mov    %r14d,%r12d
    7fdd:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    7fe4:	31 c0                	xor    %eax,%eax
    7fe6:	e9 1b fe ff ff       	jmp    7e06 <trts_handle_exception+0x186>
    7feb:	48 89 53 f8          	mov    %rdx,-0x8(%rbx)
    7fef:	31 c0                	xor    %eax,%eax
    7ff1:	e9 f9 fc ff ff       	jmp    7cef <trts_handle_exception+0x6f>
    7ff6:	49 83 7d 00 08       	cmpq   $0x8,0x0(%r13)
    7ffb:	0f 85 69 ff ff ff    	jne    7f6a <trts_handle_exception+0x2ea>
    8001:	48 83 c0 03          	add    $0x3,%rax
    8005:	49 83 8d 80 00 00 00 	orq    $0x40,0x80(%r13)
    800c:	40 
    800d:	45 89 f4             	mov    %r14d,%r12d
    8010:	49 89 85 88 00 00 00 	mov    %rax,0x88(%r13)
    8017:	31 c0                	xor    %eax,%eax
    8019:	49 c7 45 00 01 00 00 	movq   $0x1,0x0(%r13)
    8020:	00 
    8021:	e9 e0 fd ff ff       	jmp    7e06 <trts_handle_exception+0x186>
    8026:	31 ff                	xor    %edi,%edi
    8028:	e8 b3 e3 ff ff       	call   63e0 <sgx_set_ssa_aexnotify>
    802d:	eb 81                	jmp    7fb0 <trts_handle_exception+0x330>
    802f:	90                   	nop

0000000000008030 <get_xfeature_state>:
    8030:	f3 0f 1e fa          	endbr64 
    8034:	48 83 ec 08          	sub    $0x8,%rsp
    8038:	e8 53 92 00 00       	call   11290 <sgx_self_report>
    803d:	31 d2                	xor    %edx,%edx
    803f:	48 8b 40 38          	mov    0x38(%rax),%rax
    8043:	48 83 f8 03          	cmp    $0x3,%rax
    8047:	0f 95 c2             	setne  %dl
    804a:	89 15 f4 20 01 00    	mov    %edx,0x120f4(%rip)        # 1a144 <g_xsave_enabled>
    8050:	48 83 c4 08          	add    $0x8,%rsp
    8054:	c3                   	ret    
    8055:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    805c:	00 00 00 
    805f:	90                   	nop

0000000000008060 <has_text_relo>:
    8060:	85 d2                	test   %edx,%edx
    8062:	74 5b                	je     80bf <has_text_relo+0x5f>
    8064:	89 d2                	mov    %edx,%edx
    8066:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    806d:	00 
    806e:	48 29 d0             	sub    %rdx,%rax
    8071:	48 8d 04 c6          	lea    (%rsi,%rax,8),%rax
    8075:	eb 12                	jmp    8089 <has_text_relo+0x29>
    8077:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    807e:	00 00 
    8080:	48 83 c6 38          	add    $0x38,%rsi
    8084:	48 39 c6             	cmp    %rax,%rsi
    8087:	74 36                	je     80bf <has_text_relo+0x5f>
    8089:	83 3e 02             	cmpl   $0x2,(%rsi)
    808c:	75 f2                	jne    8080 <has_text_relo+0x20>
    808e:	48 8b 56 20          	mov    0x20(%rsi),%rdx
    8092:	48 03 7e 18          	add    0x18(%rsi),%rdi
    8096:	48 c1 ea 04          	shr    $0x4,%rdx
    809a:	74 23                	je     80bf <has_text_relo+0x5f>
    809c:	48 c1 e2 04          	shl    $0x4,%rdx
    80a0:	48 01 fa             	add    %rdi,%rdx
    80a3:	eb 12                	jmp    80b7 <has_text_relo+0x57>
    80a5:	0f 1f 00             	nopl   (%rax)
    80a8:	48 83 f8 16          	cmp    $0x16,%rax
    80ac:	74 1a                	je     80c8 <has_text_relo+0x68>
    80ae:	48 83 c7 10          	add    $0x10,%rdi
    80b2:	48 39 fa             	cmp    %rdi,%rdx
    80b5:	74 08                	je     80bf <has_text_relo+0x5f>
    80b7:	48 8b 07             	mov    (%rdi),%rax
    80ba:	48 85 c0             	test   %rax,%rax
    80bd:	75 e9                	jne    80a8 <has_text_relo+0x48>
    80bf:	31 c0                	xor    %eax,%eax
    80c1:	c3                   	ret    
    80c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    80c8:	b8 01 00 00 00       	mov    $0x1,%eax
    80cd:	c3                   	ret    
    80ce:	66 90                	xchg   %ax,%ax

00000000000080d0 <do_relocs>:
    80d0:	49 89 d3             	mov    %rdx,%r11
    80d3:	48 8d 14 37          	lea    (%rdi,%rsi,1),%rdx
    80d7:	49 01 fb             	add    %rdi,%r11
    80da:	48 85 c9             	test   %rcx,%rcx
    80dd:	0f 84 c2 01 00 00    	je     82a5 <do_relocs+0x1d5>
    80e3:	55                   	push   %rbp
    80e4:	49 89 c9             	mov    %rcx,%r9
    80e7:	31 f6                	xor    %esi,%esi
    80e9:	4c 8d 05 c0 af 00 00 	lea    0xafc0(%rip),%r8        # 130b0 <g_dyn_entry_table+0xa0>
    80f0:	53                   	push   %rbx
    80f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    80f8:	4c 8b 12             	mov    (%rdx),%r10
    80fb:	48 8b 42 08          	mov    0x8(%rdx),%rax
    80ff:	49 01 fa             	add    %rdi,%r10
    8102:	89 c1                	mov    %eax,%ecx
    8104:	83 f8 12             	cmp    $0x12,%eax
    8107:	0f 87 85 00 00 00    	ja     8192 <do_relocs+0xc2>
    810d:	49 63 0c 88          	movslq (%r8,%rcx,4),%rcx
    8111:	4c 01 c1             	add    %r8,%rcx
    8114:	3e ff e1             	notrack jmp *%rcx
    8117:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    811e:	00 00 
    8120:	48 c1 e8 20          	shr    $0x20,%rax
    8124:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    8128:	49 8d 1c c3          	lea    (%r11,%rax,8),%rbx
    812c:	0f b6 43 04          	movzbl 0x4(%rbx),%eax
    8130:	c0 e8 04             	shr    $0x4,%al
    8133:	3c 02                	cmp    $0x2,%al
    8135:	0f 84 05 01 00 00    	je     8240 <do_relocs+0x170>
    813b:	48 85 db             	test   %rbx,%rbx
    813e:	0f 84 8c 00 00 00    	je     81d0 <do_relocs+0x100>
    8144:	48 85 ff             	test   %rdi,%rdi
    8147:	74 49                	je     8192 <do_relocs+0xc2>
    8149:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    814f:	75 41                	jne    8192 <do_relocs+0xc2>
    8151:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8156:	75 3a                	jne    8192 <do_relocs+0xc2>
    8158:	48 89 f8             	mov    %rdi,%rax
    815b:	48 03 47 20          	add    0x20(%rdi),%rax
    815f:	74 31                	je     8192 <do_relocs+0xc2>
    8161:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    8165:	66 85 ed             	test   %bp,%bp
    8168:	74 28                	je     8192 <do_relocs+0xc2>
    816a:	83 ed 01             	sub    $0x1,%ebp
    816d:	48 8d 0c ed 00 00 00 	lea    0x0(,%rbp,8),%rcx
    8174:	00 
    8175:	48 29 e9             	sub    %rbp,%rcx
    8178:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    817d:	0f 1f 00             	nopl   (%rax)
    8180:	83 38 07             	cmpl   $0x7,(%rax)
    8183:	0f 84 e7 00 00 00    	je     8270 <do_relocs+0x1a0>
    8189:	48 83 c0 38          	add    $0x38,%rax
    818d:	48 39 c8             	cmp    %rcx,%rax
    8190:	75 ee                	jne    8180 <do_relocs+0xb0>
    8192:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8197:	5b                   	pop    %rbx
    8198:	5d                   	pop    %rbp
    8199:	c3                   	ret    
    819a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    81a0:	48 c1 e8 20          	shr    $0x20,%rax
    81a4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    81a8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    81ac:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    81b0:	c0 e8 04             	shr    $0x4,%al
    81b3:	3c 02                	cmp    $0x2,%al
    81b5:	0f 84 95 00 00 00    	je     8250 <do_relocs+0x180>
    81bb:	48 85 c9             	test   %rcx,%rcx
    81be:	74 10                	je     81d0 <do_relocs+0x100>
    81c0:	48 8b 42 10          	mov    0x10(%rdx),%rax
    81c4:	48 01 f8             	add    %rdi,%rax
    81c7:	48 03 41 08          	add    0x8(%rcx),%rax
    81cb:	49 89 02             	mov    %rax,(%r10)
    81ce:	66 90                	xchg   %ax,%ax
    81d0:	48 83 c6 01          	add    $0x1,%rsi
    81d4:	48 83 c2 18          	add    $0x18,%rdx
    81d8:	49 39 f1             	cmp    %rsi,%r9
    81db:	0f 85 17 ff ff ff    	jne    80f8 <do_relocs+0x28>
    81e1:	31 c0                	xor    %eax,%eax
    81e3:	5b                   	pop    %rbx
    81e4:	5d                   	pop    %rbp
    81e5:	c3                   	ret    
    81e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    81ed:	00 00 00 
    81f0:	48 c1 e8 20          	shr    $0x20,%rax
    81f4:	48 8d 04 40          	lea    (%rax,%rax,2),%rax
    81f8:	49 8d 0c c3          	lea    (%r11,%rax,8),%rcx
    81fc:	0f b6 41 04          	movzbl 0x4(%rcx),%eax
    8200:	c0 e8 04             	shr    $0x4,%al
    8203:	3c 02                	cmp    $0x2,%al
    8205:	74 59                	je     8260 <do_relocs+0x190>
    8207:	48 85 c9             	test   %rcx,%rcx
    820a:	74 c4                	je     81d0 <do_relocs+0x100>
    820c:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8210:	48 03 41 08          	add    0x8(%rcx),%rax
    8214:	49 89 02             	mov    %rax,(%r10)
    8217:	eb b7                	jmp    81d0 <do_relocs+0x100>
    8219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8220:	49 c7 02 01 00 00 00 	movq   $0x1,(%r10)
    8227:	eb a7                	jmp    81d0 <do_relocs+0x100>
    8229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8230:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8234:	48 01 f8             	add    %rdi,%rax
    8237:	49 89 02             	mov    %rax,(%r10)
    823a:	eb 94                	jmp    81d0 <do_relocs+0x100>
    823c:	0f 1f 40 00          	nopl   0x0(%rax)
    8240:	48 83 7b 08 00       	cmpq   $0x0,0x8(%rbx)
    8245:	0f 85 f0 fe ff ff    	jne    813b <do_relocs+0x6b>
    824b:	eb 83                	jmp    81d0 <do_relocs+0x100>
    824d:	0f 1f 00             	nopl   (%rax)
    8250:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8255:	0f 85 60 ff ff ff    	jne    81bb <do_relocs+0xeb>
    825b:	e9 70 ff ff ff       	jmp    81d0 <do_relocs+0x100>
    8260:	48 83 79 08 00       	cmpq   $0x0,0x8(%rcx)
    8265:	75 a0                	jne    8207 <do_relocs+0x137>
    8267:	e9 64 ff ff ff       	jmp    81d0 <do_relocs+0x100>
    826c:	0f 1f 40 00          	nopl   0x0(%rax)
    8270:	48 8b 48 28          	mov    0x28(%rax),%rcx
    8274:	48 8b 40 30          	mov    0x30(%rax),%rax
    8278:	48 83 f8 01          	cmp    $0x1,%rax
    827c:	76 0b                	jbe    8289 <do_relocs+0x1b9>
    827e:	48 8d 4c 01 ff       	lea    -0x1(%rcx,%rax,1),%rcx
    8283:	48 f7 d8             	neg    %rax
    8286:	48 21 c1             	and    %rax,%rcx
    8289:	48 85 c9             	test   %rcx,%rcx
    828c:	0f 84 00 ff ff ff    	je     8192 <do_relocs+0xc2>
    8292:	48 8b 42 10          	mov    0x10(%rdx),%rax
    8296:	48 03 43 08          	add    0x8(%rbx),%rax
    829a:	48 29 c8             	sub    %rcx,%rax
    829d:	49 89 02             	mov    %rax,(%r10)
    82a0:	e9 2b ff ff ff       	jmp    81d0 <do_relocs+0x100>
    82a5:	31 c0                	xor    %eax,%eax
    82a7:	c3                   	ret    
    82a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    82af:	00 

00000000000082b0 <relocate_enclave>:
    82b0:	f3 0f 1e fa          	endbr64 
    82b4:	48 85 ff             	test   %rdi,%rdi
    82b7:	0f 84 d3 01 00 00    	je     8490 <relocate_enclave+0x1e0>
    82bd:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    82c3:	0f 85 c7 01 00 00    	jne    8490 <relocate_enclave+0x1e0>
    82c9:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    82ce:	0f 85 bc 01 00 00    	jne    8490 <relocate_enclave+0x1e0>
    82d4:	41 57                	push   %r15
    82d6:	41 56                	push   %r14
    82d8:	41 55                	push   %r13
    82da:	41 54                	push   %r12
    82dc:	55                   	push   %rbp
    82dd:	53                   	push   %rbx
    82de:	48 89 fb             	mov    %rdi,%rbx
    82e1:	48 83 ec 08          	sub    $0x8,%rsp
    82e5:	48 03 5f 20          	add    0x20(%rdi),%rbx
    82e9:	0f 84 fd 00 00 00    	je     83ec <relocate_enclave+0x13c>
    82ef:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    82f3:	66 85 d2             	test   %dx,%dx
    82f6:	0f 84 c4 01 00 00    	je     84c0 <relocate_enclave+0x210>
    82fc:	83 ea 01             	sub    $0x1,%edx
    82ff:	48 8d 2d f6 ad 00 00 	lea    0xadf6(%rip),%rbp        # 130fc <g_dyn_entry_table+0xec>
    8306:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    830d:	00 
    830e:	48 29 d0             	sub    %rdx,%rax
    8311:	4c 8d 64 c3 38       	lea    0x38(%rbx,%rax,8),%r12
    8316:	eb 15                	jmp    832d <relocate_enclave+0x7d>
    8318:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    831f:	00 
    8320:	48 83 c3 38          	add    $0x38,%rbx
    8324:	49 39 dc             	cmp    %rbx,%r12
    8327:	0f 84 93 01 00 00    	je     84c0 <relocate_enclave+0x210>
    832d:	83 3b 02             	cmpl   $0x2,(%rbx)
    8330:	75 ee                	jne    8320 <relocate_enclave+0x70>
    8332:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    8336:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    833a:	48 01 fa             	add    %rdi,%rdx
    833d:	49 c1 ea 04          	shr    $0x4,%r10
    8341:	74 dd                	je     8320 <relocate_enclave+0x70>
    8343:	49 c1 e2 04          	shl    $0x4,%r10
    8347:	45 31 f6             	xor    %r14d,%r14d
    834a:	45 31 ed             	xor    %r13d,%r13d
    834d:	31 c0                	xor    %eax,%eax
    834f:	49 01 d2             	add    %rdx,%r10
    8352:	45 31 ff             	xor    %r15d,%r15d
    8355:	45 31 c9             	xor    %r9d,%r9d
    8358:	45 31 c0             	xor    %r8d,%r8d
    835b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8360:	48 8b 32             	mov    (%rdx),%rsi
    8363:	48 85 f6             	test   %rsi,%rsi
    8366:	74 30                	je     8398 <relocate_enclave+0xe8>
    8368:	48 83 fe 17          	cmp    $0x17,%rsi
    836c:	77 1a                	ja     8388 <relocate_enclave+0xd8>
    836e:	48 63 74 b5 00       	movslq 0x0(%rbp,%rsi,4),%rsi
    8373:	48 01 ee             	add    %rbp,%rsi
    8376:	3e ff e6             	notrack jmp *%rsi
    8379:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8380:	4c 8b 42 08          	mov    0x8(%rdx),%r8
    8384:	0f 1f 40 00          	nopl   0x0(%rax)
    8388:	48 83 c2 10          	add    $0x10,%rdx
    838c:	49 39 d2             	cmp    %rdx,%r10
    838f:	75 cf                	jne    8360 <relocate_enclave+0xb0>
    8391:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8398:	4d 85 c9             	test   %r9,%r9
    839b:	0f 84 ff 00 00 00    	je     84a0 <relocate_enclave+0x1f0>
    83a1:	4d 85 ed             	test   %r13,%r13
    83a4:	74 46                	je     83ec <relocate_enclave+0x13c>
    83a6:	31 d2                	xor    %edx,%edx
    83a8:	4c 89 ce             	mov    %r9,%rsi
    83ab:	4c 89 04 24          	mov    %r8,(%rsp)
    83af:	49 f7 f5             	div    %r13
    83b2:	4c 89 c2             	mov    %r8,%rdx
    83b5:	48 89 c1             	mov    %rax,%rcx
    83b8:	e8 13 fd ff ff       	call   80d0 <do_relocs>
    83bd:	85 c0                	test   %eax,%eax
    83bf:	75 2b                	jne    83ec <relocate_enclave+0x13c>
    83c1:	4d 85 ff             	test   %r15,%r15
    83c4:	4c 8b 04 24          	mov    (%rsp),%r8
    83c8:	0f 84 52 ff ff ff    	je     8320 <relocate_enclave+0x70>
    83ce:	31 d2                	xor    %edx,%edx
    83d0:	4c 89 f0             	mov    %r14,%rax
    83d3:	4c 89 fe             	mov    %r15,%rsi
    83d6:	49 f7 f5             	div    %r13
    83d9:	4c 89 c2             	mov    %r8,%rdx
    83dc:	48 89 c1             	mov    %rax,%rcx
    83df:	e8 ec fc ff ff       	call   80d0 <do_relocs>
    83e4:	85 c0                	test   %eax,%eax
    83e6:	0f 84 34 ff ff ff    	je     8320 <relocate_enclave+0x70>
    83ec:	48 83 c4 08          	add    $0x8,%rsp
    83f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    83f5:	5b                   	pop    %rbx
    83f6:	5d                   	pop    %rbp
    83f7:	41 5c                	pop    %r12
    83f9:	41 5d                	pop    %r13
    83fb:	41 5e                	pop    %r14
    83fd:	41 5f                	pop    %r15
    83ff:	c3                   	ret    
    8400:	4c 8b 7a 08          	mov    0x8(%rdx),%r15
    8404:	48 83 c2 10          	add    $0x10,%rdx
    8408:	49 39 d2             	cmp    %rdx,%r10
    840b:	0f 85 4f ff ff ff    	jne    8360 <relocate_enclave+0xb0>
    8411:	eb 85                	jmp    8398 <relocate_enclave+0xe8>
    8413:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8418:	48 8b 42 08          	mov    0x8(%rdx),%rax
    841c:	48 83 c2 10          	add    $0x10,%rdx
    8420:	49 39 d2             	cmp    %rdx,%r10
    8423:	0f 85 37 ff ff ff    	jne    8360 <relocate_enclave+0xb0>
    8429:	e9 6a ff ff ff       	jmp    8398 <relocate_enclave+0xe8>
    842e:	66 90                	xchg   %ax,%ax
    8430:	4c 8b 4a 08          	mov    0x8(%rdx),%r9
    8434:	48 83 c2 10          	add    $0x10,%rdx
    8438:	49 39 d2             	cmp    %rdx,%r10
    843b:	0f 85 1f ff ff ff    	jne    8360 <relocate_enclave+0xb0>
    8441:	e9 52 ff ff ff       	jmp    8398 <relocate_enclave+0xe8>
    8446:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    844d:	00 00 00 
    8450:	4c 8b 72 08          	mov    0x8(%rdx),%r14
    8454:	48 83 c2 10          	add    $0x10,%rdx
    8458:	49 39 d2             	cmp    %rdx,%r10
    845b:	0f 85 ff fe ff ff    	jne    8360 <relocate_enclave+0xb0>
    8461:	e9 32 ff ff ff       	jmp    8398 <relocate_enclave+0xe8>
    8466:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    846d:	00 00 00 
    8470:	4c 8b 6a 08          	mov    0x8(%rdx),%r13
    8474:	48 83 c2 10          	add    $0x10,%rdx
    8478:	49 39 d2             	cmp    %rdx,%r10
    847b:	0f 85 df fe ff ff    	jne    8360 <relocate_enclave+0xb0>
    8481:	e9 12 ff ff ff       	jmp    8398 <relocate_enclave+0xe8>
    8486:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    848d:	00 00 00 
    8490:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8495:	c3                   	ret    
    8496:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    849d:	00 00 00 
    84a0:	4d 85 ff             	test   %r15,%r15
    84a3:	0f 84 77 fe ff ff    	je     8320 <relocate_enclave+0x70>
    84a9:	4d 85 ed             	test   %r13,%r13
    84ac:	0f 84 3a ff ff ff    	je     83ec <relocate_enclave+0x13c>
    84b2:	e9 17 ff ff ff       	jmp    83ce <relocate_enclave+0x11e>
    84b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    84be:	00 00 
    84c0:	48 83 c4 08          	add    $0x8,%rsp
    84c4:	31 c0                	xor    %eax,%eax
    84c6:	5b                   	pop    %rbx
    84c7:	5d                   	pop    %rbp
    84c8:	41 5c                	pop    %r12
    84ca:	41 5d                	pop    %r13
    84cc:	41 5e                	pop    %r14
    84ce:	41 5f                	pop    %r15
    84d0:	c3                   	ret    
    84d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    84d8:	00 00 00 
    84db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000084e0 <elf_tls_info>:
    84e0:	f3 0f 1e fa          	endbr64 
    84e4:	49 89 f0             	mov    %rsi,%r8
    84e7:	48 89 f9             	mov    %rdi,%rcx
    84ea:	48 89 d6             	mov    %rdx,%rsi
    84ed:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    84f2:	48 85 ff             	test   %rdi,%rdi
    84f5:	74 7e                	je     8575 <elf_tls_info+0x95>
    84f7:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    84fd:	75 75                	jne    8574 <elf_tls_info+0x94>
    84ff:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8504:	75 6e                	jne    8574 <elf_tls_info+0x94>
    8506:	48 8b 47 20          	mov    0x20(%rdi),%rax
    850a:	48 01 f8             	add    %rdi,%rax
    850d:	4d 85 c0             	test   %r8,%r8
    8510:	0f 94 c2             	sete   %dl
    8513:	48 85 f6             	test   %rsi,%rsi
    8516:	40 0f 94 c7          	sete   %dil
    851a:	40 08 fa             	or     %dil,%dl
    851d:	75 50                	jne    856f <elf_tls_info+0x8f>
    851f:	48 85 c0             	test   %rax,%rax
    8522:	74 4b                	je     856f <elf_tls_info+0x8f>
    8524:	0f b7 79 38          	movzwl 0x38(%rcx),%edi
    8528:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    852f:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    8536:	66 85 ff             	test   %di,%di
    8539:	74 31                	je     856c <elf_tls_info+0x8c>
    853b:	83 ef 01             	sub    $0x1,%edi
    853e:	48 8d 14 fd 00 00 00 	lea    0x0(,%rdi,8),%rdx
    8545:	00 
    8546:	48 29 fa             	sub    %rdi,%rdx
    8549:	48 8d 54 d0 38       	lea    0x38(%rax,%rdx,8),%rdx
    854e:	eb 09                	jmp    8559 <elf_tls_info+0x79>
    8550:	48 83 c0 38          	add    $0x38,%rax
    8554:	48 39 d0             	cmp    %rdx,%rax
    8557:	74 13                	je     856c <elf_tls_info+0x8c>
    8559:	83 38 07             	cmpl   $0x7,(%rax)
    855c:	75 f2                	jne    8550 <elf_tls_info+0x70>
    855e:	48 03 48 10          	add    0x10(%rax),%rcx
    8562:	49 89 08             	mov    %rcx,(%r8)
    8565:	48 8b 40 20          	mov    0x20(%rax),%rax
    8569:	48 89 06             	mov    %rax,(%rsi)
    856c:	31 c0                	xor    %eax,%eax
    856e:	c3                   	ret    
    856f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8574:	c3                   	ret    
    8575:	c3                   	ret    
    8576:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    857d:	00 00 00 

0000000000008580 <elf_get_init_array>:
    8580:	f3 0f 1e fa          	endbr64 
    8584:	49 89 f8             	mov    %rdi,%r8
    8587:	49 89 f1             	mov    %rsi,%r9
    858a:	49 89 d2             	mov    %rdx,%r10
    858d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8592:	48 85 ff             	test   %rdi,%rdi
    8595:	0f 84 c8 00 00 00    	je     8663 <elf_get_init_array+0xe3>
    859b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    85a1:	0f 85 b6 00 00 00    	jne    865d <elf_get_init_array+0xdd>
    85a7:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    85ac:	0f 85 ab 00 00 00    	jne    865d <elf_get_init_array+0xdd>
    85b2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    85b6:	48 01 fa             	add    %rdi,%rdx
    85b9:	48 85 f6             	test   %rsi,%rsi
    85bc:	0f 94 c0             	sete   %al
    85bf:	4d 85 d2             	test   %r10,%r10
    85c2:	0f 94 c1             	sete   %cl
    85c5:	08 c8                	or     %cl,%al
    85c7:	0f 85 8b 00 00 00    	jne    8658 <elf_get_init_array+0xd8>
    85cd:	48 85 d2             	test   %rdx,%rdx
    85d0:	0f 84 82 00 00 00    	je     8658 <elf_get_init_array+0xd8>
    85d6:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    85da:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    85e1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    85e8:	66 85 c9             	test   %cx,%cx
    85eb:	74 73                	je     8660 <elf_get_init_array+0xe0>
    85ed:	83 e9 01             	sub    $0x1,%ecx
    85f0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    85f7:	00 
    85f8:	48 29 c8             	sub    %rcx,%rax
    85fb:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    8600:	eb 0f                	jmp    8611 <elf_get_init_array+0x91>
    8602:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8608:	48 83 c2 38          	add    $0x38,%rdx
    860c:	48 39 fa             	cmp    %rdi,%rdx
    860f:	74 4f                	je     8660 <elf_get_init_array+0xe0>
    8611:	83 3a 02             	cmpl   $0x2,(%rdx)
    8614:	75 f2                	jne    8608 <elf_get_init_array+0x88>
    8616:	48 8b 42 18          	mov    0x18(%rdx),%rax
    861a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    861e:	4c 01 c0             	add    %r8,%rax
    8621:	48 c1 ee 04          	shr    $0x4,%rsi
    8625:	74 e1                	je     8608 <elf_get_init_array+0x88>
    8627:	48 c1 e6 04          	shl    $0x4,%rsi
    862b:	48 01 c6             	add    %rax,%rsi
    862e:	eb 16                	jmp    8646 <elf_get_init_array+0xc6>
    8630:	48 83 f9 1b          	cmp    $0x1b,%rcx
    8634:	75 07                	jne    863d <elf_get_init_array+0xbd>
    8636:	48 8b 48 08          	mov    0x8(%rax),%rcx
    863a:	49 89 0a             	mov    %rcx,(%r10)
    863d:	48 83 c0 10          	add    $0x10,%rax
    8641:	48 39 c6             	cmp    %rax,%rsi
    8644:	74 c2                	je     8608 <elf_get_init_array+0x88>
    8646:	48 8b 08             	mov    (%rax),%rcx
    8649:	48 83 f9 19          	cmp    $0x19,%rcx
    864d:	75 e1                	jne    8630 <elf_get_init_array+0xb0>
    864f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8653:	49 89 09             	mov    %rcx,(%r9)
    8656:	eb e5                	jmp    863d <elf_get_init_array+0xbd>
    8658:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    865d:	c3                   	ret    
    865e:	66 90                	xchg   %ax,%ax
    8660:	31 c0                	xor    %eax,%eax
    8662:	c3                   	ret    
    8663:	c3                   	ret    
    8664:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    866b:	00 00 00 
    866e:	66 90                	xchg   %ax,%ax

0000000000008670 <elf_get_uninit_array>:
    8670:	f3 0f 1e fa          	endbr64 
    8674:	49 89 f8             	mov    %rdi,%r8
    8677:	49 89 f1             	mov    %rsi,%r9
    867a:	49 89 d2             	mov    %rdx,%r10
    867d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8682:	48 85 ff             	test   %rdi,%rdi
    8685:	0f 84 c8 00 00 00    	je     8753 <elf_get_uninit_array+0xe3>
    868b:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8691:	0f 85 b6 00 00 00    	jne    874d <elf_get_uninit_array+0xdd>
    8697:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    869c:	0f 85 ab 00 00 00    	jne    874d <elf_get_uninit_array+0xdd>
    86a2:	48 8b 57 20          	mov    0x20(%rdi),%rdx
    86a6:	48 01 fa             	add    %rdi,%rdx
    86a9:	48 85 f6             	test   %rsi,%rsi
    86ac:	0f 94 c0             	sete   %al
    86af:	4d 85 d2             	test   %r10,%r10
    86b2:	0f 94 c1             	sete   %cl
    86b5:	08 c8                	or     %cl,%al
    86b7:	0f 85 8b 00 00 00    	jne    8748 <elf_get_uninit_array+0xd8>
    86bd:	48 85 d2             	test   %rdx,%rdx
    86c0:	0f 84 82 00 00 00    	je     8748 <elf_get_uninit_array+0xd8>
    86c6:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    86ca:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    86d1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    86d8:	66 85 c9             	test   %cx,%cx
    86db:	74 73                	je     8750 <elf_get_uninit_array+0xe0>
    86dd:	83 e9 01             	sub    $0x1,%ecx
    86e0:	48 8d 04 cd 00 00 00 	lea    0x0(,%rcx,8),%rax
    86e7:	00 
    86e8:	48 29 c8             	sub    %rcx,%rax
    86eb:	48 8d 7c c2 38       	lea    0x38(%rdx,%rax,8),%rdi
    86f0:	eb 0f                	jmp    8701 <elf_get_uninit_array+0x91>
    86f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    86f8:	48 83 c2 38          	add    $0x38,%rdx
    86fc:	48 39 fa             	cmp    %rdi,%rdx
    86ff:	74 4f                	je     8750 <elf_get_uninit_array+0xe0>
    8701:	83 3a 02             	cmpl   $0x2,(%rdx)
    8704:	75 f2                	jne    86f8 <elf_get_uninit_array+0x88>
    8706:	48 8b 42 18          	mov    0x18(%rdx),%rax
    870a:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    870e:	4c 01 c0             	add    %r8,%rax
    8711:	48 c1 ee 04          	shr    $0x4,%rsi
    8715:	74 e1                	je     86f8 <elf_get_uninit_array+0x88>
    8717:	48 c1 e6 04          	shl    $0x4,%rsi
    871b:	48 01 c6             	add    %rax,%rsi
    871e:	eb 16                	jmp    8736 <elf_get_uninit_array+0xc6>
    8720:	48 83 f9 1c          	cmp    $0x1c,%rcx
    8724:	75 07                	jne    872d <elf_get_uninit_array+0xbd>
    8726:	48 8b 48 08          	mov    0x8(%rax),%rcx
    872a:	49 89 0a             	mov    %rcx,(%r10)
    872d:	48 83 c0 10          	add    $0x10,%rax
    8731:	48 39 c6             	cmp    %rax,%rsi
    8734:	74 c2                	je     86f8 <elf_get_uninit_array+0x88>
    8736:	48 8b 08             	mov    (%rax),%rcx
    8739:	48 83 f9 1a          	cmp    $0x1a,%rcx
    873d:	75 e1                	jne    8720 <elf_get_uninit_array+0xb0>
    873f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8743:	49 89 09             	mov    %rcx,(%r9)
    8746:	eb e5                	jmp    872d <elf_get_uninit_array+0xbd>
    8748:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    874d:	c3                   	ret    
    874e:	66 90                	xchg   %ax,%ax
    8750:	31 c0                	xor    %eax,%eax
    8752:	c3                   	ret    
    8753:	c3                   	ret    
    8754:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    875b:	00 00 00 
    875e:	66 90                	xchg   %ax,%ax

0000000000008760 <change_protection>:
    8760:	f3 0f 1e fa          	endbr64 
    8764:	48 85 ff             	test   %rdi,%rdi
    8767:	0f 84 be 01 00 00    	je     892b <change_protection+0x1cb>
    876d:	41 56                	push   %r14
    876f:	41 55                	push   %r13
    8771:	49 89 fd             	mov    %rdi,%r13
    8774:	41 54                	push   %r12
    8776:	55                   	push   %rbp
    8777:	53                   	push   %rbx
    8778:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    877e:	0f 85 bc 00 00 00    	jne    8840 <change_protection+0xe0>
    8784:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    8789:	0f 85 b1 00 00 00    	jne    8840 <change_protection+0xe0>
    878f:	48 89 fb             	mov    %rdi,%rbx
    8792:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8796:	0f 84 a4 00 00 00    	je     8840 <change_protection+0xe0>
    879c:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    87a0:	48 89 de             	mov    %rbx,%rsi
    87a3:	89 d1                	mov    %edx,%ecx
    87a5:	e8 b6 f8 ff ff       	call   8060 <has_text_relo>
    87aa:	41 89 c6             	mov    %eax,%r14d
    87ad:	66 85 c9             	test   %cx,%cx
    87b0:	0f 84 ea 00 00 00    	je     88a0 <change_protection+0x140>
    87b6:	49 bc ff ff ff ff 02 	movabs $0x2ffffffff,%r12
    87bd:	00 00 00 
    87c0:	31 ed                	xor    %ebp,%ebp
    87c2:	eb 18                	jmp    87dc <change_protection+0x7c>
    87c4:	0f 1f 40 00          	nopl   0x0(%rax)
    87c8:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    87cd:	83 c5 01             	add    $0x1,%ebp
    87d0:	48 83 c3 38          	add    $0x38,%rbx
    87d4:	39 c5                	cmp    %eax,%ebp
    87d6:	0f 83 c4 00 00 00    	jae    88a0 <change_protection+0x140>
    87dc:	45 85 f6             	test   %r14d,%r14d
    87df:	74 0c                	je     87ed <change_protection+0x8d>
    87e1:	48 8b 03             	mov    (%rbx),%rax
    87e4:	4c 21 e0             	and    %r12,%rax
    87e7:	48 83 f8 01          	cmp    $0x1,%rax
    87eb:	74 63                	je     8850 <change_protection+0xf0>
    87ed:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    87f3:	75 d3                	jne    87c8 <change_protection+0x68>
    87f5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    87f9:	48 8b 73 28          	mov    0x28(%rbx),%rsi
    87fd:	48 01 fe             	add    %rdi,%rsi
    8800:	48 89 f8             	mov    %rdi,%rax
    8803:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    880a:	48 31 f0             	xor    %rsi,%rax
    880d:	48 3d ff 0f 00 00    	cmp    $0xfff,%rax
    8813:	76 b3                	jbe    87c8 <change_protection+0x68>
    8815:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    881c:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8823:	ba 01 00 00 00       	mov    $0x1,%edx
    8828:	48 29 fe             	sub    %rdi,%rsi
    882b:	4c 01 ef             	add    %r13,%rdi
    882e:	e8 bd 30 00 00       	call   b8f0 <mm_modify_permissions>
    8833:	85 c0                	test   %eax,%eax
    8835:	74 91                	je     87c8 <change_protection+0x68>
    8837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    883e:	00 00 
    8840:	b8 01 00 00 00       	mov    $0x1,%eax
    8845:	5b                   	pop    %rbx
    8846:	5d                   	pop    %rbp
    8847:	41 5c                	pop    %r12
    8849:	41 5d                	pop    %r13
    884b:	41 5e                	pop    %r14
    884d:	c3                   	ret    
    884e:	66 90                	xchg   %ax,%ax
    8850:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8854:	8b 4b 04             	mov    0x4(%rbx),%ecx
    8857:	48 89 c7             	mov    %rax,%rdi
    885a:	89 ca                	mov    %ecx,%edx
    885c:	48 03 43 28          	add    0x28(%rbx),%rax
    8860:	c1 e9 02             	shr    $0x2,%ecx
    8863:	83 e2 01             	and    $0x1,%edx
    8866:	48 8d b0 ff 0f 00 00 	lea    0xfff(%rax),%rsi
    886d:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    8874:	83 e1 01             	and    $0x1,%ecx
    8877:	48 c1 e2 02          	shl    $0x2,%rdx
    887b:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    8882:	48 29 fe             	sub    %rdi,%rsi
    8885:	09 ca                	or     %ecx,%edx
    8887:	4c 01 ef             	add    %r13,%rdi
    888a:	e8 61 30 00 00       	call   b8f0 <mm_modify_permissions>
    888f:	85 c0                	test   %eax,%eax
    8891:	0f 84 56 ff ff ff    	je     87ed <change_protection+0x8d>
    8897:	eb a7                	jmp    8840 <change_protection+0xe0>
    8899:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    88a0:	8b 05 32 aa 00 00    	mov    0xaa32(%rip),%eax        # 132d8 <g_global_data+0x158>
    88a6:	85 c0                	test   %eax,%eax
    88a8:	74 9b                	je     8845 <change_protection+0xe5>
    88aa:	31 d2                	xor    %edx,%edx
    88ac:	48 8d 3d cd a8 00 00 	lea    0xa8cd(%rip),%rdi        # 13180 <g_global_data>
    88b3:	eb 10                	jmp    88c5 <change_protection+0x165>
    88b5:	0f 1f 00             	nopl   (%rax)
    88b8:	8b 05 1a aa 00 00    	mov    0xaa1a(%rip),%eax        # 132d8 <g_global_data+0x158>
    88be:	83 c2 01             	add    $0x1,%edx
    88c1:	39 c2                	cmp    %eax,%edx
    88c3:	73 5b                	jae    8920 <change_protection+0x1c0>
    88c5:	89 d1                	mov    %edx,%ecx
    88c7:	48 8d 41 0b          	lea    0xb(%rcx),%rax
    88cb:	48 c1 e0 05          	shl    $0x5,%rax
    88cf:	48 01 f8             	add    %rdi,%rax
    88d2:	0f b7 30             	movzwl (%rax),%esi
    88d5:	66 83 fe 14          	cmp    $0x14,%si
    88d9:	75 dd                	jne    88b8 <change_protection+0x158>
    88db:	48 c1 e1 05          	shl    $0x5,%rcx
    88df:	48 01 f9             	add    %rdi,%rcx
    88e2:	48 8b 89 78 01 00 00 	mov    0x178(%rcx),%rcx
    88e9:	48 81 f9 07 02 00 00 	cmp    $0x207,%rcx
    88f0:	75 c6                	jne    88b8 <change_protection+0x158>
    88f2:	8b 48 04             	mov    0x4(%rax),%ecx
    88f5:	85 c9                	test   %ecx,%ecx
    88f7:	74 bf                	je     88b8 <change_protection+0x158>
    88f9:	8b 70 04             	mov    0x4(%rax),%esi
    88fc:	48 8b 40 08          	mov    0x8(%rax),%rax
    8900:	ba 03 00 00 00       	mov    $0x3,%edx
    8905:	48 c1 e6 0c          	shl    $0xc,%rsi
    8909:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    890e:	e8 dd 2f 00 00       	call   b8f0 <mm_modify_permissions>
    8913:	85 c0                	test   %eax,%eax
    8915:	0f 95 c0             	setne  %al
    8918:	0f b6 c0             	movzbl %al,%eax
    891b:	e9 25 ff ff ff       	jmp    8845 <change_protection+0xe5>
    8920:	5b                   	pop    %rbx
    8921:	31 c0                	xor    %eax,%eax
    8923:	5d                   	pop    %rbp
    8924:	41 5c                	pop    %r12
    8926:	41 5d                	pop    %r13
    8928:	41 5e                	pop    %r14
    892a:	c3                   	ret    
    892b:	b8 01 00 00 00       	mov    $0x1,%eax
    8930:	c3                   	ret    
    8931:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8938:	00 00 00 
    893b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008940 <init_segment_emas>:
    8940:	f3 0f 1e fa          	endbr64 
    8944:	48 85 ff             	test   %rdi,%rdi
    8947:	0f 84 e8 00 00 00    	je     8a35 <init_segment_emas+0xf5>
    894d:	41 55                	push   %r13
    894f:	49 89 fd             	mov    %rdi,%r13
    8952:	41 54                	push   %r12
    8954:	55                   	push   %rbp
    8955:	53                   	push   %rbx
    8956:	48 83 ec 08          	sub    $0x8,%rsp
    895a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    8960:	0f 85 ae 00 00 00    	jne    8a14 <init_segment_emas+0xd4>
    8966:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    896b:	0f 85 a3 00 00 00    	jne    8a14 <init_segment_emas+0xd4>
    8971:	48 89 fb             	mov    %rdi,%rbx
    8974:	48 03 5f 20          	add    0x20(%rdi),%rbx
    8978:	0f 84 96 00 00 00    	je     8a14 <init_segment_emas+0xd4>
    897e:	0f b7 57 38          	movzwl 0x38(%rdi),%edx
    8982:	48 89 de             	mov    %rbx,%rsi
    8985:	45 31 e4             	xor    %r12d,%r12d
    8988:	89 d1                	mov    %edx,%ecx
    898a:	e8 d1 f6 ff ff       	call   8060 <has_text_relo>
    898f:	89 c5                	mov    %eax,%ebp
    8991:	66 85 c9             	test   %cx,%cx
    8994:	75 1c                	jne    89b2 <init_segment_emas+0x72>
    8996:	e9 8d 00 00 00       	jmp    8a28 <init_segment_emas+0xe8>
    899b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    89a0:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    89a5:	41 83 c4 01          	add    $0x1,%r12d
    89a9:	48 83 c3 38          	add    $0x38,%rbx
    89ad:	41 39 c4             	cmp    %eax,%r12d
    89b0:	73 76                	jae    8a28 <init_segment_emas+0xe8>
    89b2:	83 3b 01             	cmpl   $0x1,(%rbx)
    89b5:	75 e9                	jne    89a0 <init_segment_emas+0x60>
    89b7:	8b 4b 04             	mov    0x4(%rbx),%ecx
    89ba:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    89be:	89 c8                	mov    %ecx,%eax
    89c0:	48 89 f2             	mov    %rsi,%rdx
    89c3:	48 03 73 28          	add    0x28(%rbx),%rsi
    89c7:	83 e0 02             	and    $0x2,%eax
    89ca:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    89d1:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    89d8:	09 e8                	or     %ebp,%eax
    89da:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    89e1:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    89e6:	83 f8 01             	cmp    $0x1,%eax
    89e9:	48 19 c0             	sbb    %rax,%rax
    89ec:	83 e1 01             	and    $0x1,%ecx
    89ef:	48 29 d6             	sub    %rdx,%rsi
    89f2:	45 31 c9             	xor    %r9d,%r9d
    89f5:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    89f9:	48 c1 e1 02          	shl    $0x2,%rcx
    89fd:	45 31 c0             	xor    %r8d,%r8d
    8a00:	ba 80 02 00 00       	mov    $0x280,%edx
    8a05:	48 83 c0 03          	add    $0x3,%rax
    8a09:	09 c1                	or     %eax,%ecx
    8a0b:	e8 70 2d 00 00       	call   b780 <mm_init_ema>
    8a10:	85 c0                	test   %eax,%eax
    8a12:	74 8c                	je     89a0 <init_segment_emas+0x60>
    8a14:	48 83 c4 08          	add    $0x8,%rsp
    8a18:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8a1d:	5b                   	pop    %rbx
    8a1e:	5d                   	pop    %rbp
    8a1f:	41 5c                	pop    %r12
    8a21:	41 5d                	pop    %r13
    8a23:	c3                   	ret    
    8a24:	0f 1f 40 00          	nopl   0x0(%rax)
    8a28:	48 83 c4 08          	add    $0x8,%rsp
    8a2c:	31 c0                	xor    %eax,%eax
    8a2e:	5b                   	pop    %rbx
    8a2f:	5d                   	pop    %rbp
    8a30:	41 5c                	pop    %r12
    8a32:	41 5d                	pop    %r13
    8a34:	c3                   	ret    
    8a35:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8a3a:	c3                   	ret    
    8a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000008a40 <__cxa_atexit>:
    8a40:	f3 0f 1e fa          	endbr64 
    8a44:	41 55                	push   %r13
    8a46:	49 89 d5             	mov    %rdx,%r13
    8a49:	41 54                	push   %r12
    8a4b:	49 89 f4             	mov    %rsi,%r12
    8a4e:	55                   	push   %rbp
    8a4f:	48 89 fd             	mov    %rdi,%rbp
    8a52:	53                   	push   %rbx
    8a53:	48 83 ec 18          	sub    $0x18,%rsp
    8a57:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8a5e:	00 00 
    8a60:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    8a65:	31 c0                	xor    %eax,%eax
    8a67:	48 83 3d 31 17 01 00 	cmpq   $0x0,0x11731(%rip)        # 1a1a0 <g_exit_function_cookie>
    8a6e:	00 
    8a6f:	0f 84 8b 00 00 00    	je     8b00 <__cxa_atexit+0xc0>
    8a75:	31 f6                	xor    %esi,%esi
    8a77:	48 89 ef             	mov    %rbp,%rdi
    8a7a:	e8 c1 cf ff ff       	call   5a40 <sgx_is_within_enclave>
    8a7f:	85 c0                	test   %eax,%eax
    8a81:	0f 84 a1 00 00 00    	je     8b28 <__cxa_atexit+0xe8>
    8a87:	bf 20 00 00 00       	mov    $0x20,%edi
    8a8c:	e8 7f 45 00 00       	call   d010 <dlmalloc>
    8a91:	48 89 c3             	mov    %rax,%rbx
    8a94:	48 85 c0             	test   %rax,%rax
    8a97:	0f 84 8b 00 00 00    	je     8b28 <__cxa_atexit+0xe8>
    8a9d:	48 8b 05 fc 16 01 00 	mov    0x116fc(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8aa4:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    8aa8:	48 31 c5             	xor    %rax,%rbp
    8aab:	49 31 c4             	xor    %rax,%r12
    8aae:	48 89 2b             	mov    %rbp,(%rbx)
    8ab1:	48 8d 2d f0 16 01 00 	lea    0x116f0(%rip),%rbp        # 1a1a8 <g_exit_function_lock>
    8ab8:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    8abc:	48 89 ef             	mov    %rbp,%rdi
    8abf:	e8 8c 3b 00 00       	call   c650 <sgx_spin_lock>
    8ac4:	48 8b 05 e5 16 01 00 	mov    0x116e5(%rip),%rax        # 1a1b0 <g_exit_function>
    8acb:	48 89 ef             	mov    %rbp,%rdi
    8ace:	48 89 1d db 16 01 00 	mov    %rbx,0x116db(%rip)        # 1a1b0 <g_exit_function>
    8ad5:	48 89 43 18          	mov    %rax,0x18(%rbx)
    8ad9:	e8 02 3c 00 00       	call   c6e0 <sgx_spin_unlock>
    8ade:	31 c0                	xor    %eax,%eax
    8ae0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8ae5:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    8aec:	00 00 
    8aee:	75 71                	jne    8b61 <__cxa_atexit+0x121>
    8af0:	48 83 c4 18          	add    $0x18,%rsp
    8af4:	5b                   	pop    %rbx
    8af5:	5d                   	pop    %rbp
    8af6:	41 5c                	pop    %r12
    8af8:	41 5d                	pop    %r13
    8afa:	c3                   	ret    
    8afb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8b00:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    8b07:	00 
    8b08:	48 89 e3             	mov    %rsp,%rbx
    8b0b:	eb 0a                	jmp    8b17 <__cxa_atexit+0xd7>
    8b0d:	0f 1f 00             	nopl   (%rax)
    8b10:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    8b15:	75 19                	jne    8b30 <__cxa_atexit+0xf0>
    8b17:	be 08 00 00 00       	mov    $0x8,%esi
    8b1c:	48 89 df             	mov    %rbx,%rdi
    8b1f:	e8 1c d1 ff ff       	call   5c40 <sgx_read_rand>
    8b24:	85 c0                	test   %eax,%eax
    8b26:	74 e8                	je     8b10 <__cxa_atexit+0xd0>
    8b28:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b2d:	eb b1                	jmp    8ae0 <__cxa_atexit+0xa0>
    8b2f:	90                   	nop
    8b30:	48 8d 1d 71 16 01 00 	lea    0x11671(%rip),%rbx        # 1a1a8 <g_exit_function_lock>
    8b37:	48 89 df             	mov    %rbx,%rdi
    8b3a:	e8 11 3b 00 00       	call   c650 <sgx_spin_lock>
    8b3f:	48 83 3d 59 16 01 00 	cmpq   $0x0,0x11659(%rip)        # 1a1a0 <g_exit_function_cookie>
    8b46:	00 
    8b47:	75 0b                	jne    8b54 <__cxa_atexit+0x114>
    8b49:	48 8b 04 24          	mov    (%rsp),%rax
    8b4d:	48 89 05 4c 16 01 00 	mov    %rax,0x1164c(%rip)        # 1a1a0 <g_exit_function_cookie>
    8b54:	48 89 df             	mov    %rbx,%rdi
    8b57:	e8 84 3b 00 00       	call   c6e0 <sgx_spin_unlock>
    8b5c:	e9 14 ff ff ff       	jmp    8a75 <__cxa_atexit+0x35>
    8b61:	e8 5a 7d 00 00       	call   108c0 <__stack_chk_fail>
    8b66:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8b6d:	00 00 00 

0000000000008b70 <atexit>:
    8b70:	f3 0f 1e fa          	endbr64 
    8b74:	48 8b 15 f5 f6 00 00 	mov    0xf6f5(%rip),%rdx        # 18270 <__dso_handle>
    8b7b:	31 f6                	xor    %esi,%esi
    8b7d:	e9 be fe ff ff       	jmp    8a40 <__cxa_atexit>
    8b82:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8b89:	00 00 00 
    8b8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000008b90 <init_global_object>:
    8b90:	f3 0f 1e fa          	endbr64 
    8b94:	55                   	push   %rbp
    8b95:	53                   	push   %rbx
    8b96:	48 83 ec 28          	sub    $0x28,%rsp
    8b9a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8ba1:	00 00 
    8ba3:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8ba8:	31 c0                	xor    %eax,%eax
    8baa:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8bb1:	00 00 
    8bb3:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    8bba:	00 00 
    8bbc:	e8 37 93 00 00       	call   11ef8 <get_enclave_base>
    8bc1:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8bc6:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8bcb:	48 89 c7             	mov    %rax,%rdi
    8bce:	48 89 c3             	mov    %rax,%rbx
    8bd1:	e8 aa f9 ff ff       	call   8580 <elf_get_init_array>
    8bd6:	85 c0                	test   %eax,%eax
    8bd8:	75 31                	jne    8c0b <init_global_object+0x7b>
    8bda:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8bdf:	48 85 c0             	test   %rax,%rax
    8be2:	74 27                	je     8c0b <init_global_object+0x7b>
    8be4:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    8be9:	48 85 ed             	test   %rbp,%rbp
    8bec:	74 1d                	je     8c0b <init_global_object+0x7b>
    8bee:	48 01 c3             	add    %rax,%rbx
    8bf1:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    8bf5:	48 01 dd             	add    %rbx,%rbp
    8bf8:	48 39 eb             	cmp    %rbp,%rbx
    8bfb:	73 0e                	jae    8c0b <init_global_object+0x7b>
    8bfd:	0f 1f 00             	nopl   (%rax)
    8c00:	ff 13                	call   *(%rbx)
    8c02:	48 83 c3 08          	add    $0x8,%rbx
    8c06:	48 39 eb             	cmp    %rbp,%rbx
    8c09:	72 f5                	jb     8c00 <init_global_object+0x70>
    8c0b:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8c10:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8c17:	00 00 
    8c19:	75 07                	jne    8c22 <init_global_object+0x92>
    8c1b:	48 83 c4 28          	add    $0x28,%rsp
    8c1f:	5b                   	pop    %rbx
    8c20:	5d                   	pop    %rbp
    8c21:	c3                   	ret    
    8c22:	e8 99 7c 00 00       	call   108c0 <__stack_chk_fail>
    8c27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8c2e:	00 00 

0000000000008c30 <uninit_global_object>:
    8c30:	f3 0f 1e fa          	endbr64 
    8c34:	55                   	push   %rbp
    8c35:	53                   	push   %rbx
    8c36:	48 83 ec 28          	sub    $0x28,%rsp
    8c3a:	48 8b 1d 6f 15 01 00 	mov    0x1156f(%rip),%rbx        # 1a1b0 <g_exit_function>
    8c41:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8c48:	00 00 
    8c4a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    8c4f:	31 c0                	xor    %eax,%eax
    8c51:	48 c7 05 54 15 01 00 	movq   $0x0,0x11554(%rip)        # 1a1b0 <g_exit_function>
    8c58:	00 00 00 00 
    8c5c:	48 85 db             	test   %rbx,%rbx
    8c5f:	74 2b                	je     8c8c <uninit_global_object+0x5c>
    8c61:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8c68:	48 8b 05 31 15 01 00 	mov    0x11531(%rip),%rax        # 1a1a0 <g_exit_function_cookie>
    8c6f:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    8c73:	48 31 c7             	xor    %rax,%rdi
    8c76:	48 33 03             	xor    (%rbx),%rax
    8c79:	ff d0                	call   *%rax
    8c7b:	48 89 df             	mov    %rbx,%rdi
    8c7e:	48 8b 5b 18          	mov    0x18(%rbx),%rbx
    8c82:	e8 79 61 00 00       	call   ee00 <dlfree>
    8c87:	48 85 db             	test   %rbx,%rbx
    8c8a:	75 dc                	jne    8c68 <uninit_global_object+0x38>
    8c8c:	e8 67 92 00 00       	call   11ef8 <get_enclave_base>
    8c91:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    8c96:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    8c9b:	48 89 c7             	mov    %rax,%rdi
    8c9e:	48 89 c5             	mov    %rax,%rbp
    8ca1:	e8 ca f9 ff ff       	call   8670 <elf_get_uninit_array>
    8ca6:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    8cab:	48 85 d2             	test   %rdx,%rdx
    8cae:	74 2b                	je     8cdb <uninit_global_object+0xab>
    8cb0:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    8cb5:	48 85 c0             	test   %rax,%rax
    8cb8:	74 21                	je     8cdb <uninit_global_object+0xab>
    8cba:	48 01 d5             	add    %rdx,%rbp
    8cbd:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    8cc1:	48 8d 5c 05 f8       	lea    -0x8(%rbp,%rax,1),%rbx
    8cc6:	48 39 eb             	cmp    %rbp,%rbx
    8cc9:	72 10                	jb     8cdb <uninit_global_object+0xab>
    8ccb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8cd0:	ff 13                	call   *(%rbx)
    8cd2:	48 83 eb 08          	sub    $0x8,%rbx
    8cd6:	48 39 eb             	cmp    %rbp,%rbx
    8cd9:	73 f5                	jae    8cd0 <uninit_global_object+0xa0>
    8cdb:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    8ce0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    8ce7:	00 00 
    8ce9:	75 07                	jne    8cf2 <uninit_global_object+0xc2>
    8ceb:	48 83 c4 28          	add    $0x28,%rsp
    8cef:	5b                   	pop    %rbx
    8cf0:	5d                   	pop    %rbp
    8cf1:	c3                   	ret    
    8cf2:	e8 c9 7b 00 00       	call   108c0 <__stack_chk_fail>
    8cf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8cfe:	00 00 

0000000000008d00 <__tls_get_addr>:
    8d00:	f3 0f 1e fa          	endbr64 
    8d04:	53                   	push   %rbx
    8d05:	48 89 fb             	mov    %rdi,%rbx
    8d08:	e8 36 92 00 00       	call   11f43 <get_thread_data>
    8d0d:	48 8b 40 68          	mov    0x68(%rax),%rax
    8d11:	48 03 43 08          	add    0x8(%rbx),%rax
    8d15:	5b                   	pop    %rbx
    8d16:	c3                   	ret    
    8d17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    8d1e:	00 00 

0000000000008d20 <bit_array_new>:
    8d20:	f3 0f 1e fa          	endbr64 
    8d24:	41 54                	push   %r12
    8d26:	55                   	push   %rbp
    8d27:	53                   	push   %rbx
    8d28:	48 85 ff             	test   %rdi,%rdi
    8d2b:	74 63                	je     8d90 <bit_array_new+0x70>
    8d2d:	48 8d 47 07          	lea    0x7(%rdi),%rax
    8d31:	48 89 fb             	mov    %rdi,%rbx
    8d34:	48 89 c2             	mov    %rax,%rdx
    8d37:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    8d3b:	48 39 fa             	cmp    %rdi,%rdx
    8d3e:	72 50                	jb     8d90 <bit_array_new+0x70>
    8d40:	48 c1 e8 03          	shr    $0x3,%rax
    8d44:	bf 18 00 00 00       	mov    $0x18,%edi
    8d49:	49 89 c4             	mov    %rax,%r12
    8d4c:	e8 af 25 00 00       	call   b300 <emalloc>
    8d51:	48 89 c5             	mov    %rax,%rbp
    8d54:	48 85 c0             	test   %rax,%rax
    8d57:	74 37                	je     8d90 <bit_array_new+0x70>
    8d59:	4c 89 20             	mov    %r12,(%rax)
    8d5c:	4c 89 e7             	mov    %r12,%rdi
    8d5f:	48 89 58 08          	mov    %rbx,0x8(%rax)
    8d63:	e8 98 25 00 00       	call   b300 <emalloc>
    8d68:	48 89 45 10          	mov    %rax,0x10(%rbp)
    8d6c:	48 85 c0             	test   %rax,%rax
    8d6f:	74 0f                	je     8d80 <bit_array_new+0x60>
    8d71:	48 89 e8             	mov    %rbp,%rax
    8d74:	5b                   	pop    %rbx
    8d75:	5d                   	pop    %rbp
    8d76:	41 5c                	pop    %r12
    8d78:	c3                   	ret    
    8d79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8d80:	48 89 ef             	mov    %rbp,%rdi
    8d83:	e8 f8 27 00 00       	call   b580 <efree>
    8d88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8d8f:	00 
    8d90:	31 ed                	xor    %ebp,%ebp
    8d92:	eb dd                	jmp    8d71 <bit_array_new+0x51>
    8d94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8d9b:	00 00 00 
    8d9e:	66 90                	xchg   %ax,%ax

0000000000008da0 <bit_array_new_set>:
    8da0:	f3 0f 1e fa          	endbr64 
    8da4:	53                   	push   %rbx
    8da5:	e8 76 ff ff ff       	call   8d20 <bit_array_new>
    8daa:	48 89 c3             	mov    %rax,%rbx
    8dad:	48 85 c0             	test   %rax,%rax
    8db0:	74 11                	je     8dc3 <bit_array_new_set+0x23>
    8db2:	48 8b 10             	mov    (%rax),%rdx
    8db5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8db9:	be ff 00 00 00       	mov    $0xff,%esi
    8dbe:	e8 2d 7a 00 00       	call   107f0 <memset>
    8dc3:	48 89 d8             	mov    %rbx,%rax
    8dc6:	5b                   	pop    %rbx
    8dc7:	c3                   	ret    
    8dc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    8dcf:	00 

0000000000008dd0 <bit_array_new_reset>:
    8dd0:	f3 0f 1e fa          	endbr64 
    8dd4:	53                   	push   %rbx
    8dd5:	e8 46 ff ff ff       	call   8d20 <bit_array_new>
    8dda:	48 89 c3             	mov    %rax,%rbx
    8ddd:	48 85 c0             	test   %rax,%rax
    8de0:	74 0e                	je     8df0 <bit_array_new_reset+0x20>
    8de2:	48 8b 10             	mov    (%rax),%rdx
    8de5:	48 8b 78 10          	mov    0x10(%rax),%rdi
    8de9:	31 f6                	xor    %esi,%esi
    8deb:	e8 00 7a 00 00       	call   107f0 <memset>
    8df0:	48 89 d8             	mov    %rbx,%rax
    8df3:	5b                   	pop    %rbx
    8df4:	c3                   	ret    
    8df5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8dfc:	00 00 00 
    8dff:	90                   	nop

0000000000008e00 <bit_array_delete>:
    8e00:	f3 0f 1e fa          	endbr64 
    8e04:	53                   	push   %rbx
    8e05:	48 89 fb             	mov    %rdi,%rbx
    8e08:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8e0c:	e8 6f 27 00 00       	call   b580 <efree>
    8e11:	48 89 df             	mov    %rbx,%rdi
    8e14:	5b                   	pop    %rbx
    8e15:	e9 66 27 00 00       	jmp    b580 <efree>
    8e1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000008e20 <bit_array_test>:
    8e20:	f3 0f 1e fa          	endbr64 
    8e24:	48 89 f1             	mov    %rsi,%rcx
    8e27:	48 89 f2             	mov    %rsi,%rdx
    8e2a:	48 8b 77 10          	mov    0x10(%rdi),%rsi
    8e2e:	b8 01 00 00 00       	mov    $0x1,%eax
    8e33:	83 e1 07             	and    $0x7,%ecx
    8e36:	48 c1 ea 03          	shr    $0x3,%rdx
    8e3a:	d3 e0                	shl    %cl,%eax
    8e3c:	84 04 16             	test   %al,(%rsi,%rdx,1)
    8e3f:	0f 95 c0             	setne  %al
    8e42:	c3                   	ret    
    8e43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8e4a:	00 00 00 
    8e4d:	0f 1f 00             	nopl   (%rax)

0000000000008e50 <set_mask>:
    8e50:	f3 0f 1e fa          	endbr64 
    8e54:	89 f1                	mov    %esi,%ecx
    8e56:	b8 01 00 00 00       	mov    $0x1,%eax
    8e5b:	d3 e0                	shl    %cl,%eax
    8e5d:	89 f9                	mov    %edi,%ecx
    8e5f:	83 e8 01             	sub    $0x1,%eax
    8e62:	d3 e0                	shl    %cl,%eax
    8e64:	c3                   	ret    
    8e65:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8e6c:	00 00 00 
    8e6f:	90                   	nop

0000000000008e70 <bit_array_test_range>:
    8e70:	f3 0f 1e fa          	endbr64 
    8e74:	48 89 f0             	mov    %rsi,%rax
    8e77:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    8e7b:	83 e6 07             	and    $0x7,%esi
    8e7e:	b9 08 00 00 00       	mov    $0x8,%ecx
    8e83:	48 c1 e8 03          	shr    $0x3,%rax
    8e87:	48 29 f1             	sub    %rsi,%rcx
    8e8a:	44 0f b6 0c 07       	movzbl (%rdi,%rax,1),%r9d
    8e8f:	48 39 d1             	cmp    %rdx,%rcx
    8e92:	72 24                	jb     8eb8 <bit_array_test_range+0x48>
    8e94:	89 d1                	mov    %edx,%ecx
    8e96:	b8 01 00 00 00       	mov    $0x1,%eax
    8e9b:	41 f7 d1             	not    %r9d
    8e9e:	d3 e0                	shl    %cl,%eax
    8ea0:	89 f1                	mov    %esi,%ecx
    8ea2:	83 e8 01             	sub    $0x1,%eax
    8ea5:	d3 e0                	shl    %cl,%eax
    8ea7:	41 84 c1             	test   %al,%r9b
    8eaa:	41 0f 94 c2          	sete   %r10b
    8eae:	44 89 d0             	mov    %r10d,%eax
    8eb1:	c3                   	ret    
    8eb2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8eb8:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8ebe:	41 f7 d1             	not    %r9d
    8ec1:	45 31 d2             	xor    %r10d,%r10d
    8ec4:	41 d3 e0             	shl    %cl,%r8d
    8ec7:	89 f1                	mov    %esi,%ecx
    8ec9:	41 83 e8 01          	sub    $0x1,%r8d
    8ecd:	41 d3 e0             	shl    %cl,%r8d
    8ed0:	45 84 c1             	test   %r8b,%r9b
    8ed3:	75 d9                	jne    8eae <bit_array_test_range+0x3e>
    8ed5:	48 8d 4c 16 f8       	lea    -0x8(%rsi,%rdx,1),%rcx
    8eda:	48 83 f9 07          	cmp    $0x7,%rcx
    8ede:	77 12                	ja     8ef2 <bit_array_test_range+0x82>
    8ee0:	eb 26                	jmp    8f08 <bit_array_test_range+0x98>
    8ee2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8ee8:	48 83 e9 08          	sub    $0x8,%rcx
    8eec:	48 83 f9 07          	cmp    $0x7,%rcx
    8ef0:	76 16                	jbe    8f08 <bit_array_test_range+0x98>
    8ef2:	48 83 c0 01          	add    $0x1,%rax
    8ef6:	80 3c 07 ff          	cmpb   $0xff,(%rdi,%rax,1)
    8efa:	74 ec                	je     8ee8 <bit_array_test_range+0x78>
    8efc:	45 31 d2             	xor    %r10d,%r10d
    8eff:	44 89 d0             	mov    %r10d,%eax
    8f02:	c3                   	ret    
    8f03:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8f08:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8f0e:	48 85 c9             	test   %rcx,%rcx
    8f11:	74 9b                	je     8eae <bit_array_test_range+0x3e>
    8f13:	ba 01 00 00 00       	mov    $0x1,%edx
    8f18:	0f b6 74 07 01       	movzbl 0x1(%rdi,%rax,1),%esi
    8f1d:	d3 e2                	shl    %cl,%edx
    8f1f:	83 ea 01             	sub    $0x1,%edx
    8f22:	21 d6                	and    %edx,%esi
    8f24:	40 38 d6             	cmp    %dl,%sil
    8f27:	41 0f 94 c2          	sete   %r10b
    8f2b:	eb 81                	jmp    8eae <bit_array_test_range+0x3e>
    8f2d:	0f 1f 00             	nopl   (%rax)

0000000000008f30 <bit_array_test_range_any>:
    8f30:	f3 0f 1e fa          	endbr64 
    8f34:	49 89 f8             	mov    %rdi,%r8
    8f37:	48 89 f0             	mov    %rsi,%rax
    8f3a:	48 89 d7             	mov    %rdx,%rdi
    8f3d:	83 e6 07             	and    $0x7,%esi
    8f40:	49 8b 50 10          	mov    0x10(%r8),%rdx
    8f44:	b9 08 00 00 00       	mov    $0x8,%ecx
    8f49:	48 c1 e8 03          	shr    $0x3,%rax
    8f4d:	48 29 f1             	sub    %rsi,%rcx
    8f50:	44 0f b6 0c 02       	movzbl (%rdx,%rax,1),%r9d
    8f55:	48 39 f9             	cmp    %rdi,%rcx
    8f58:	72 1e                	jb     8f78 <bit_array_test_range_any+0x48>
    8f5a:	89 f9                	mov    %edi,%ecx
    8f5c:	b8 01 00 00 00       	mov    $0x1,%eax
    8f61:	d3 e0                	shl    %cl,%eax
    8f63:	89 f1                	mov    %esi,%ecx
    8f65:	83 e8 01             	sub    $0x1,%eax
    8f68:	d3 e0                	shl    %cl,%eax
    8f6a:	41 84 c1             	test   %al,%r9b
    8f6d:	41 0f 95 c2          	setne  %r10b
    8f71:	44 89 d0             	mov    %r10d,%eax
    8f74:	c3                   	ret    
    8f75:	0f 1f 00             	nopl   (%rax)
    8f78:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    8f7e:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8f84:	41 d3 e0             	shl    %cl,%r8d
    8f87:	89 f1                	mov    %esi,%ecx
    8f89:	41 83 e8 01          	sub    $0x1,%r8d
    8f8d:	41 d3 e0             	shl    %cl,%r8d
    8f90:	45 84 c1             	test   %r8b,%r9b
    8f93:	75 dc                	jne    8f71 <bit_array_test_range_any+0x41>
    8f95:	48 8d 4c 3e f8       	lea    -0x8(%rsi,%rdi,1),%rcx
    8f9a:	48 83 f9 07          	cmp    $0x7,%rcx
    8f9e:	77 12                	ja     8fb2 <bit_array_test_range_any+0x82>
    8fa0:	eb 2e                	jmp    8fd0 <bit_array_test_range_any+0xa0>
    8fa2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8fa8:	48 83 e9 08          	sub    $0x8,%rcx
    8fac:	48 83 f9 07          	cmp    $0x7,%rcx
    8fb0:	76 1e                	jbe    8fd0 <bit_array_test_range_any+0xa0>
    8fb2:	48 83 c0 01          	add    $0x1,%rax
    8fb6:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    8fba:	74 ec                	je     8fa8 <bit_array_test_range_any+0x78>
    8fbc:	41 ba 01 00 00 00    	mov    $0x1,%r10d
    8fc2:	44 89 d0             	mov    %r10d,%eax
    8fc5:	c3                   	ret    
    8fc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    8fcd:	00 00 00 
    8fd0:	45 31 d2             	xor    %r10d,%r10d
    8fd3:	48 85 c9             	test   %rcx,%rcx
    8fd6:	74 99                	je     8f71 <bit_array_test_range_any+0x41>
    8fd8:	be 01 00 00 00       	mov    $0x1,%esi
    8fdd:	d3 e6                	shl    %cl,%esi
    8fdf:	83 ee 01             	sub    $0x1,%esi
    8fe2:	40 84 74 02 01       	test   %sil,0x1(%rdx,%rax,1)
    8fe7:	41 0f 95 c2          	setne  %r10b
    8feb:	eb 84                	jmp    8f71 <bit_array_test_range_any+0x41>
    8fed:	0f 1f 00             	nopl   (%rax)

0000000000008ff0 <bit_array_set>:
    8ff0:	f3 0f 1e fa          	endbr64 
    8ff4:	48 89 f1             	mov    %rsi,%rcx
    8ff7:	48 89 f0             	mov    %rsi,%rax
    8ffa:	ba 01 00 00 00       	mov    $0x1,%edx
    8fff:	48 c1 e8 03          	shr    $0x3,%rax
    9003:	83 e1 07             	and    $0x7,%ecx
    9006:	48 03 47 10          	add    0x10(%rdi),%rax
    900a:	d3 e2                	shl    %cl,%edx
    900c:	08 10                	or     %dl,(%rax)
    900e:	c3                   	ret    
    900f:	90                   	nop

0000000000009010 <bit_array_set_range>:
    9010:	f3 0f 1e fa          	endbr64 
    9014:	48 89 f0             	mov    %rsi,%rax
    9017:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    901b:	83 e6 07             	and    $0x7,%esi
    901e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9023:	48 c1 e8 03          	shr    $0x3,%rax
    9027:	48 29 f1             	sub    %rsi,%rcx
    902a:	49 89 d0             	mov    %rdx,%r8
    902d:	49 01 c1             	add    %rax,%r9
    9030:	45 0f b6 11          	movzbl (%r9),%r10d
    9034:	48 39 d1             	cmp    %rdx,%rcx
    9037:	73 67                	jae    90a0 <bit_array_set_range+0x90>
    9039:	ba 01 00 00 00       	mov    $0x1,%edx
    903e:	d3 e2                	shl    %cl,%edx
    9040:	89 f1                	mov    %esi,%ecx
    9042:	83 ea 01             	sub    $0x1,%edx
    9045:	d3 e2                	shl    %cl,%edx
    9047:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    904c:	41 09 d2             	or     %edx,%r10d
    904f:	45 88 11             	mov    %r10b,(%r9)
    9052:	48 83 f9 07          	cmp    $0x7,%rcx
    9056:	76 68                	jbe    90c0 <bit_array_set_range+0xb0>
    9058:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    905c:	48 83 c0 01          	add    $0x1,%rax
    9060:	48 c1 ea 03          	shr    $0x3,%rdx
    9064:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    9068:	eb 0a                	jmp    9074 <bit_array_set_range+0x64>
    906a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9070:	48 83 c0 01          	add    $0x1,%rax
    9074:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9078:	c6 04 02 ff          	movb   $0xff,(%rdx,%rax,1)
    907c:	48 39 f0             	cmp    %rsi,%rax
    907f:	75 ef                	jne    9070 <bit_array_set_range+0x60>
    9081:	83 e1 07             	and    $0x7,%ecx
    9084:	48 85 c9             	test   %rcx,%rcx
    9087:	74 12                	je     909b <bit_array_set_range+0x8b>
    9089:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    908d:	b8 01 00 00 00       	mov    $0x1,%eax
    9092:	d3 e0                	shl    %cl,%eax
    9094:	83 e8 01             	sub    $0x1,%eax
    9097:	08 44 32 01          	or     %al,0x1(%rdx,%rsi,1)
    909b:	c3                   	ret    
    909c:	0f 1f 40 00          	nopl   0x0(%rax)
    90a0:	89 d1                	mov    %edx,%ecx
    90a2:	b8 01 00 00 00       	mov    $0x1,%eax
    90a7:	d3 e0                	shl    %cl,%eax
    90a9:	89 f1                	mov    %esi,%ecx
    90ab:	83 e8 01             	sub    $0x1,%eax
    90ae:	d3 e0                	shl    %cl,%eax
    90b0:	44 09 d0             	or     %r10d,%eax
    90b3:	41 88 01             	mov    %al,(%r9)
    90b6:	c3                   	ret    
    90b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    90be:	00 00 
    90c0:	48 89 c6             	mov    %rax,%rsi
    90c3:	eb bf                	jmp    9084 <bit_array_set_range+0x74>
    90c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    90cc:	00 00 00 
    90cf:	90                   	nop

00000000000090d0 <bit_array_set_all>:
    90d0:	f3 0f 1e fa          	endbr64 
    90d4:	48 8b 17             	mov    (%rdi),%rdx
    90d7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    90db:	be ff 00 00 00       	mov    $0xff,%esi
    90e0:	e9 0b 77 00 00       	jmp    107f0 <memset>
    90e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    90ec:	00 00 00 
    90ef:	90                   	nop

00000000000090f0 <clear_mask>:
    90f0:	f3 0f 1e fa          	endbr64 
    90f4:	89 f1                	mov    %esi,%ecx
    90f6:	b8 01 00 00 00       	mov    $0x1,%eax
    90fb:	d3 e0                	shl    %cl,%eax
    90fd:	89 f9                	mov    %edi,%ecx
    90ff:	83 e8 01             	sub    $0x1,%eax
    9102:	d3 e0                	shl    %cl,%eax
    9104:	f7 d0                	not    %eax
    9106:	c3                   	ret    
    9107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    910e:	00 00 

0000000000009110 <bit_array_reset_range>:
    9110:	f3 0f 1e fa          	endbr64 
    9114:	48 89 f0             	mov    %rsi,%rax
    9117:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    911b:	83 e6 07             	and    $0x7,%esi
    911e:	b9 08 00 00 00       	mov    $0x8,%ecx
    9123:	48 c1 e8 03          	shr    $0x3,%rax
    9127:	48 29 f1             	sub    %rsi,%rcx
    912a:	49 89 d0             	mov    %rdx,%r8
    912d:	49 01 c1             	add    %rax,%r9
    9130:	45 0f b6 11          	movzbl (%r9),%r10d
    9134:	48 39 d1             	cmp    %rdx,%rcx
    9137:	73 67                	jae    91a0 <bit_array_reset_range+0x90>
    9139:	ba 01 00 00 00       	mov    $0x1,%edx
    913e:	d3 e2                	shl    %cl,%edx
    9140:	89 f1                	mov    %esi,%ecx
    9142:	83 ea 01             	sub    $0x1,%edx
    9145:	d3 e2                	shl    %cl,%edx
    9147:	4a 8d 4c 06 f8       	lea    -0x8(%rsi,%r8,1),%rcx
    914c:	f7 d2                	not    %edx
    914e:	44 21 d2             	and    %r10d,%edx
    9151:	41 88 11             	mov    %dl,(%r9)
    9154:	48 83 f9 07          	cmp    $0x7,%rcx
    9158:	76 66                	jbe    91c0 <bit_array_reset_range+0xb0>
    915a:	48 8d 51 f8          	lea    -0x8(%rcx),%rdx
    915e:	48 83 c0 01          	add    $0x1,%rax
    9162:	48 c1 ea 03          	shr    $0x3,%rdx
    9166:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    916a:	eb 08                	jmp    9174 <bit_array_reset_range+0x64>
    916c:	0f 1f 40 00          	nopl   0x0(%rax)
    9170:	48 83 c0 01          	add    $0x1,%rax
    9174:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    9178:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
    917c:	48 39 f0             	cmp    %rsi,%rax
    917f:	75 ef                	jne    9170 <bit_array_reset_range+0x60>
    9181:	83 e1 07             	and    $0x7,%ecx
    9184:	48 85 c9             	test   %rcx,%rcx
    9187:	74 0f                	je     9198 <bit_array_reset_range+0x88>
    9189:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    918d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    9192:	d3 e0                	shl    %cl,%eax
    9194:	20 44 32 01          	and    %al,0x1(%rdx,%rsi,1)
    9198:	c3                   	ret    
    9199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    91a0:	89 d1                	mov    %edx,%ecx
    91a2:	b8 01 00 00 00       	mov    $0x1,%eax
    91a7:	d3 e0                	shl    %cl,%eax
    91a9:	89 f1                	mov    %esi,%ecx
    91ab:	83 e8 01             	sub    $0x1,%eax
    91ae:	d3 e0                	shl    %cl,%eax
    91b0:	f7 d0                	not    %eax
    91b2:	44 21 d0             	and    %r10d,%eax
    91b5:	41 88 01             	mov    %al,(%r9)
    91b8:	c3                   	ret    
    91b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    91c0:	48 89 c6             	mov    %rax,%rsi
    91c3:	eb bf                	jmp    9184 <bit_array_reset_range+0x74>
    91c5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    91cc:	00 00 00 
    91cf:	90                   	nop

00000000000091d0 <bit_array_reset_all>:
    91d0:	f3 0f 1e fa          	endbr64 
    91d4:	48 8b 17             	mov    (%rdi),%rdx
    91d7:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    91db:	31 f6                	xor    %esi,%esi
    91dd:	e9 0e 76 00 00       	jmp    107f0 <memset>
    91e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    91e9:	00 00 00 
    91ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000091f0 <bit_array_reattach>:
    91f0:	f3 0f 1e fa          	endbr64 
    91f4:	41 54                	push   %r12
    91f6:	49 89 d4             	mov    %rdx,%r12
    91f9:	55                   	push   %rbp
    91fa:	48 89 f5             	mov    %rsi,%rbp
    91fd:	53                   	push   %rbx
    91fe:	48 89 fb             	mov    %rdi,%rbx
    9201:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    9205:	48 85 ff             	test   %rdi,%rdi
    9208:	74 05                	je     920f <bit_array_reattach+0x1f>
    920a:	e8 71 23 00 00       	call   b580 <efree>
    920f:	48 8d 45 07          	lea    0x7(%rbp),%rax
    9213:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    9217:	48 c1 e8 03          	shr    $0x3,%rax
    921b:	4c 89 63 10          	mov    %r12,0x10(%rbx)
    921f:	48 89 03             	mov    %rax,(%rbx)
    9222:	5b                   	pop    %rbx
    9223:	5d                   	pop    %rbp
    9224:	41 5c                	pop    %r12
    9226:	c3                   	ret    
    9227:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    922e:	00 00 

0000000000009230 <bit_array_split>:
    9230:	f3 0f 1e fa          	endbr64 
    9234:	41 57                	push   %r15
    9236:	41 56                	push   %r14
    9238:	41 55                	push   %r13
    923a:	41 54                	push   %r12
    923c:	55                   	push   %rbp
    923d:	53                   	push   %rbx
    923e:	48 89 fb             	mov    %rdi,%rbx
    9241:	48 83 ec 38          	sub    $0x38,%rsp
    9245:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    924a:	48 89 4c 24 10       	mov    %rcx,0x10(%rsp)
    924f:	48 85 f6             	test   %rsi,%rsi
    9252:	0f 84 88 01 00 00    	je     93e0 <bit_array_split+0x1b0>
    9258:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    925c:	45 31 e4             	xor    %r12d,%r12d
    925f:	4c 39 f6             	cmp    %r14,%rsi
    9262:	72 24                	jb     9288 <bit_array_split+0x58>
    9264:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    9269:	48 89 18             	mov    %rbx,(%rax)
    926c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    9271:	4c 89 20             	mov    %r12,(%rax)
    9274:	31 c0                	xor    %eax,%eax
    9276:	48 83 c4 38          	add    $0x38,%rsp
    927a:	5b                   	pop    %rbx
    927b:	5d                   	pop    %rbp
    927c:	41 5c                	pop    %r12
    927e:	41 5d                	pop    %r13
    9280:	41 5e                	pop    %r14
    9282:	41 5f                	pop    %r15
    9284:	c3                   	ret    
    9285:	0f 1f 00             	nopl   (%rax)
    9288:	48 8d 46 07          	lea    0x7(%rsi),%rax
    928c:	48 89 f5             	mov    %rsi,%rbp
    928f:	41 89 f7             	mov    %esi,%r15d
    9292:	48 89 74 24 18       	mov    %rsi,0x18(%rsp)
    9297:	48 c1 e8 03          	shr    $0x3,%rax
    929b:	49 29 f6             	sub    %rsi,%r14
    929e:	48 c1 ed 03          	shr    $0x3,%rbp
    92a2:	41 83 e7 07          	and    $0x7,%r15d
    92a6:	48 89 c7             	mov    %rax,%rdi
    92a9:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    92ae:	e8 4d 20 00 00       	call   b300 <emalloc>
    92b3:	49 89 c5             	mov    %rax,%r13
    92b6:	48 85 c0             	test   %rax,%rax
    92b9:	0f 84 98 01 00 00    	je     9457 <bit_array_split+0x227>
    92bf:	48 85 ed             	test   %rbp,%rbp
    92c2:	0f 84 80 01 00 00    	je     9448 <bit_array_split+0x218>
    92c8:	31 c0                	xor    %eax,%eax
    92ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    92d0:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    92d4:	0f b6 14 02          	movzbl (%rdx,%rax,1),%edx
    92d8:	41 88 54 05 00       	mov    %dl,0x0(%r13,%rax,1)
    92dd:	48 83 c0 01          	add    $0x1,%rax
    92e1:	48 39 c5             	cmp    %rax,%rbp
    92e4:	75 ea                	jne    92d0 <bit_array_split+0xa0>
    92e6:	48 89 ea             	mov    %rbp,%rdx
    92e9:	45 84 ff             	test   %r15b,%r15b
    92ec:	0f 85 fe 00 00 00    	jne    93f0 <bit_array_split+0x1c0>
    92f2:	4c 89 f7             	mov    %r14,%rdi
    92f5:	e8 26 fa ff ff       	call   8d20 <bit_array_new>
    92fa:	49 89 c4             	mov    %rax,%r12
    92fd:	48 85 c0             	test   %rax,%rax
    9300:	0f 84 49 01 00 00    	je     944f <bit_array_split+0x21f>
    9306:	49 89 ea             	mov    %rbp,%r10
    9309:	31 d2                	xor    %edx,%edx
    930b:	49 83 fe 07          	cmp    $0x7,%r14
    930f:	76 78                	jbe    9389 <bit_array_split+0x159>
    9311:	49 8d 46 f8          	lea    -0x8(%r14),%rax
    9315:	45 0f b6 df          	movzbl %r15b,%r11d
    9319:	41 b9 08 00 00 00    	mov    $0x8,%r9d
    931f:	31 ff                	xor    %edi,%edi
    9321:	48 c1 e8 03          	shr    $0x3,%rax
    9325:	48 8d 55 01          	lea    0x1(%rbp),%rdx
    9329:	44 88 7c 24 2f       	mov    %r15b,0x2f(%rsp)
    932e:	45 29 d9             	sub    %r11d,%r9d
    9331:	48 89 c6             	mov    %rax,%rsi
    9334:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    9338:	eb 0a                	jmp    9344 <bit_array_split+0x114>
    933a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9340:	48 83 c2 01          	add    $0x1,%rdx
    9344:	4c 8b 43 10          	mov    0x10(%rbx),%r8
    9348:	48 89 e8             	mov    %rbp,%rax
    934b:	44 89 d9             	mov    %r11d,%ecx
    934e:	49 89 ff             	mov    %rdi,%r15
    9351:	48 89 d5             	mov    %rdx,%rbp
    9354:	48 83 c7 01          	add    $0x1,%rdi
    9358:	41 0f b6 04 00       	movzbl (%r8,%rax,1),%eax
    935d:	45 0f b6 04 10       	movzbl (%r8,%rdx,1),%r8d
    9362:	d3 f8                	sar    %cl,%eax
    9364:	44 89 c9             	mov    %r9d,%ecx
    9367:	41 d3 e0             	shl    %cl,%r8d
    936a:	49 8b 4c 24 10       	mov    0x10(%r12),%rcx
    936f:	44 09 c0             	or     %r8d,%eax
    9372:	42 88 04 39          	mov    %al,(%rcx,%r15,1)
    9376:	4c 39 d2             	cmp    %r10,%rdx
    9379:	75 c5                	jne    9340 <bit_array_split+0x110>
    937b:	44 0f b6 7c 24 2f    	movzbl 0x2f(%rsp),%r15d
    9381:	48 8d 56 01          	lea    0x1(%rsi),%rdx
    9385:	41 83 e6 07          	and    $0x7,%r14d
    9389:	b8 08 00 00 00       	mov    $0x8,%eax
    938e:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    9392:	44 29 f8             	sub    %r15d,%eax
    9395:	48 0f be c0          	movsbq %al,%rax
    9399:	4c 39 f0             	cmp    %r14,%rax
    939c:	72 72                	jb     9410 <bit_array_split+0x1e0>
    939e:	4d 85 f6             	test   %r14,%r14
    93a1:	74 16                	je     93b9 <bit_array_split+0x189>
    93a3:	42 0f b6 04 17       	movzbl (%rdi,%r10,1),%eax
    93a8:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    93ad:	44 89 f9             	mov    %r15d,%ecx
    93b0:	d3 f8                	sar    %cl,%eax
    93b2:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    93b5:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    93b9:	48 85 ff             	test   %rdi,%rdi
    93bc:	74 05                	je     93c3 <bit_array_split+0x193>
    93be:	e8 bd 21 00 00       	call   b580 <efree>
    93c3:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    93c8:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    93cc:	48 89 03             	mov    %rax,(%rbx)
    93cf:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    93d4:	48 89 43 08          	mov    %rax,0x8(%rbx)
    93d8:	e9 87 fe ff ff       	jmp    9264 <bit_array_split+0x34>
    93dd:	0f 1f 00             	nopl   (%rax)
    93e0:	49 89 fc             	mov    %rdi,%r12
    93e3:	31 db                	xor    %ebx,%ebx
    93e5:	e9 7a fe ff ff       	jmp    9264 <bit_array_split+0x34>
    93ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    93f0:	48 8b 73 10          	mov    0x10(%rbx),%rsi
    93f4:	b8 01 00 00 00       	mov    $0x1,%eax
    93f9:	44 89 f9             	mov    %r15d,%ecx
    93fc:	d3 e0                	shl    %cl,%eax
    93fe:	83 e8 01             	sub    $0x1,%eax
    9401:	22 04 16             	and    (%rsi,%rdx,1),%al
    9404:	41 88 44 15 00       	mov    %al,0x0(%r13,%rdx,1)
    9409:	e9 e4 fe ff ff       	jmp    92f2 <bit_array_split+0xc2>
    940e:	66 90                	xchg   %ax,%ax
    9410:	42 0f b6 44 17 01    	movzbl 0x1(%rdi,%r10,1),%eax
    9416:	45 0f b6 c7          	movzbl %r15b,%r8d
    941a:	b9 08 00 00 00       	mov    $0x8,%ecx
    941f:	42 0f b6 3c 17       	movzbl (%rdi,%r10,1),%edi
    9424:	44 29 c1             	sub    %r8d,%ecx
    9427:	49 8b 74 24 10       	mov    0x10(%r12),%rsi
    942c:	d3 e0                	shl    %cl,%eax
    942e:	44 89 f9             	mov    %r15d,%ecx
    9431:	d3 ff                	sar    %cl,%edi
    9433:	09 f8                	or     %edi,%eax
    9435:	88 04 16             	mov    %al,(%rsi,%rdx,1)
    9438:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    943c:	e9 78 ff ff ff       	jmp    93b9 <bit_array_split+0x189>
    9441:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9448:	31 d2                	xor    %edx,%edx
    944a:	e9 9a fe ff ff       	jmp    92e9 <bit_array_split+0xb9>
    944f:	4c 89 ef             	mov    %r13,%rdi
    9452:	e8 29 21 00 00       	call   b580 <efree>
    9457:	b8 0c 00 00 00       	mov    $0xc,%eax
    945c:	e9 15 fe ff ff       	jmp    9276 <bit_array_split+0x46>
    9461:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9468:	00 00 00 
    946b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009470 <ema_do_uncommit_real>:
    9470:	55                   	push   %rbp
    9471:	48 89 e5             	mov    %rsp,%rbp
    9474:	41 57                	push   %r15
    9476:	41 56                	push   %r14
    9478:	41 55                	push   %r13
    947a:	41 54                	push   %r12
    947c:	53                   	push   %rbx
    947d:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    9481:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    9488:	89 4c 24 28          	mov    %ecx,0x28(%rsp)
    948c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9493:	00 00 
    9495:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    949c:	00 
    949d:	48 8b 47 18          	mov    0x18(%rdi),%rax
    94a1:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    94a5:	0f 85 68 01 00 00    	jne    9613 <ema_do_uncommit_real+0x1a3>
    94ab:	25 00 ff 00 00       	and    $0xff00,%eax
    94b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    94b4:	48 89 fb             	mov    %rdi,%rbx
    94b7:	49 89 f7             	mov    %rsi,%r15
    94ba:	89 44 24 24          	mov    %eax,0x24(%rsp)
    94be:	8b 44 24 28          	mov    0x28(%rsp),%eax
    94c2:	49 89 d4             	mov    %rdx,%r12
    94c5:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    94cc:	00 00 
    94ce:	80 cc 04             	or     $0x4,%ah
    94d1:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    94d6:	48 c7 44 24 40 10 04 	movq   $0x410,0x40(%rsp)
    94dd:	00 00 
    94df:	89 44 24 2c          	mov    %eax,0x2c(%rsp)
    94e3:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    94e8:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    94ed:	0f 1f 00             	nopl   (%rax)
    94f0:	4d 39 e7             	cmp    %r12,%r15
    94f3:	72 17                	jb     950c <ema_do_uncommit_real+0x9c>
    94f5:	e9 19 01 00 00       	jmp    9613 <ema_do_uncommit_real+0x1a3>
    94fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9500:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9507:	4d 39 e7             	cmp    %r12,%r15
    950a:	73 17                	jae    9523 <ema_do_uncommit_real+0xb3>
    950c:	4c 89 fe             	mov    %r15,%rsi
    950f:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    9513:	48 2b 33             	sub    (%rbx),%rsi
    9516:	48 c1 ee 0c          	shr    $0xc,%rsi
    951a:	e8 01 f9 ff ff       	call   8e20 <bit_array_test>
    951f:	84 c0                	test   %al,%al
    9521:	74 dd                	je     9500 <ema_do_uncommit_real+0x90>
    9523:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    9528:	4d 39 fc             	cmp    %r15,%r12
    952b:	0f 84 e2 00 00 00    	je     9613 <ema_do_uncommit_real+0x1a3>
    9531:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    9538:	4d 39 e7             	cmp    %r12,%r15
    953b:	72 17                	jb     9554 <ema_do_uncommit_real+0xe4>
    953d:	e9 f5 00 00 00       	jmp    9637 <ema_do_uncommit_real+0x1c7>
    9542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9548:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    954f:	4d 39 e7             	cmp    %r12,%r15
    9552:	73 17                	jae    956b <ema_do_uncommit_real+0xfb>
    9554:	4c 89 fe             	mov    %r15,%rsi
    9557:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    955b:	48 2b 33             	sub    (%rbx),%rsi
    955e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9562:	e8 b9 f8 ff ff       	call   8e20 <bit_array_test>
    9567:	84 c0                	test   %al,%al
    9569:	75 dd                	jne    9548 <ema_do_uncommit_real+0xd8>
    956b:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    9570:	4c 89 f8             	mov    %r15,%rax
    9573:	48 29 c8             	sub    %rcx,%rax
    9576:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    957b:	8b 54 24 24          	mov    0x24(%rsp),%edx
    957f:	8b 44 24 28          	mov    0x28(%rsp),%eax
    9583:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    9587:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
    958c:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    9591:	09 c2                	or     %eax,%edx
    9593:	e8 d8 c1 ff ff       	call   5770 <sgx_mm_modify_ocall>
    9598:	85 c0                	test   %eax,%eax
    959a:	75 70                	jne    960c <ema_do_uncommit_real+0x19c>
    959c:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    95a1:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    95a6:	49 89 c6             	mov    %rax,%r14
    95a9:	4c 39 f8             	cmp    %r15,%rax
    95ac:	73 21                	jae    95cf <ema_do_uncommit_real+0x15f>
    95ae:	66 90                	xchg   %ax,%ax
    95b0:	4c 89 f6             	mov    %r14,%rsi
    95b3:	4c 89 ef             	mov    %r13,%rdi
    95b6:	e8 04 8d 00 00       	call   122bf <do_eaccept>
    95bb:	85 c0                	test   %eax,%eax
    95bd:	0f 85 82 00 00 00    	jne    9645 <ema_do_uncommit_real+0x1d5>
    95c3:	49 81 c6 00 10 00 00 	add    $0x1000,%r14
    95ca:	4d 39 fe             	cmp    %r15,%r14
    95cd:	72 e1                	jb     95b0 <ema_do_uncommit_real+0x140>
    95cf:	4c 8b 74 24 30       	mov    0x30(%rsp),%r14
    95d4:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    95d9:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    95dd:	4c 89 f2             	mov    %r14,%rdx
    95e0:	4c 89 ee             	mov    %r13,%rsi
    95e3:	48 2b 33             	sub    (%rbx),%rsi
    95e6:	48 c1 ea 0c          	shr    $0xc,%rdx
    95ea:	48 c1 ee 0c          	shr    $0xc,%rsi
    95ee:	e8 1d fb ff ff       	call   9110 <bit_array_reset_range>
    95f3:	8b 4c 24 2c          	mov    0x2c(%rsp),%ecx
    95f7:	4c 89 f6             	mov    %r14,%rsi
    95fa:	4c 89 ef             	mov    %r13,%rdi
    95fd:	89 ca                	mov    %ecx,%edx
    95ff:	e8 6c c1 ff ff       	call   5770 <sgx_mm_modify_ocall>
    9604:	85 c0                	test   %eax,%eax
    9606:	0f 84 e4 fe ff ff    	je     94f0 <ema_do_uncommit_real+0x80>
    960c:	b8 0e 00 00 00       	mov    $0xe,%eax
    9611:	eb 02                	jmp    9615 <ema_do_uncommit_real+0x1a5>
    9613:	31 c0                	xor    %eax,%eax
    9615:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    961c:	00 
    961d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9624:	00 00 
    9626:	75 22                	jne    964a <ema_do_uncommit_real+0x1da>
    9628:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    962c:	5b                   	pop    %rbx
    962d:	41 5c                	pop    %r12
    962f:	41 5d                	pop    %r13
    9631:	41 5e                	pop    %r14
    9633:	41 5f                	pop    %r15
    9635:	5d                   	pop    %rbp
    9636:	c3                   	ret    
    9637:	48 c7 44 24 30 00 10 	movq   $0x1000,0x30(%rsp)
    963e:	00 00 
    9640:	e9 36 ff ff ff       	jmp    957b <ema_do_uncommit_real+0x10b>
    9645:	e8 ed 8c 00 00       	call   12337 <abort>
    964a:	e8 71 72 00 00       	call   108c0 <__stack_chk_fail>
    964f:	90                   	nop

0000000000009650 <get_ema_alloc_flags>:
    9650:	f3 0f 1e fa          	endbr64 
    9654:	8b 47 10             	mov    0x10(%rdi),%eax
    9657:	c3                   	ret    
    9658:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    965f:	00 

0000000000009660 <get_ema_si_flags>:
    9660:	f3 0f 1e fa          	endbr64 
    9664:	48 8b 47 18          	mov    0x18(%rdi),%rax
    9668:	c3                   	ret    
    9669:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000009670 <ema_fault_handler>:
    9670:	f3 0f 1e fa          	endbr64 
    9674:	48 85 f6             	test   %rsi,%rsi
    9677:	74 07                	je     9680 <ema_fault_handler+0x10>
    9679:	48 8b 47 30          	mov    0x30(%rdi),%rax
    967d:	48 89 06             	mov    %rax,(%rsi)
    9680:	48 8b 47 28          	mov    0x28(%rdi),%rax
    9684:	c3                   	ret    
    9685:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    968c:	00 00 00 
    968f:	90                   	nop

0000000000009690 <ema_set_eaccept_full>:
    9690:	f3 0f 1e fa          	endbr64 
    9694:	53                   	push   %rbx
    9695:	48 89 fb             	mov    %rdi,%rbx
    9698:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    969c:	48 85 ff             	test   %rdi,%rdi
    969f:	74 0f                	je     96b0 <ema_set_eaccept_full+0x20>
    96a1:	e8 2a fa ff ff       	call   90d0 <bit_array_set_all>
    96a6:	31 c0                	xor    %eax,%eax
    96a8:	5b                   	pop    %rbx
    96a9:	c3                   	ret    
    96aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    96b0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    96b4:	48 c1 ef 0c          	shr    $0xc,%rdi
    96b8:	e8 e3 f6 ff ff       	call   8da0 <bit_array_new_set>
    96bd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    96c1:	48 85 c0             	test   %rax,%rax
    96c4:	75 e0                	jne    96a6 <ema_set_eaccept_full+0x16>
    96c6:	b8 0c 00 00 00       	mov    $0xc,%eax
    96cb:	5b                   	pop    %rbx
    96cc:	c3                   	ret    
    96cd:	0f 1f 00             	nopl   (%rax)

00000000000096d0 <ema_clear_eaccept_full>:
    96d0:	f3 0f 1e fa          	endbr64 
    96d4:	53                   	push   %rbx
    96d5:	48 89 fb             	mov    %rdi,%rbx
    96d8:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    96dc:	48 85 ff             	test   %rdi,%rdi
    96df:	74 0f                	je     96f0 <ema_clear_eaccept_full+0x20>
    96e1:	e8 ea fa ff ff       	call   91d0 <bit_array_reset_all>
    96e6:	31 c0                	xor    %eax,%eax
    96e8:	5b                   	pop    %rbx
    96e9:	c3                   	ret    
    96ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    96f0:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    96f4:	48 c1 ef 0c          	shr    $0xc,%rdi
    96f8:	e8 d3 f6 ff ff       	call   8dd0 <bit_array_new_reset>
    96fd:	48 89 43 20          	mov    %rax,0x20(%rbx)
    9701:	48 85 c0             	test   %rax,%rax
    9704:	75 e0                	jne    96e6 <ema_clear_eaccept_full+0x16>
    9706:	b8 0c 00 00 00       	mov    $0xc,%eax
    970b:	5b                   	pop    %rbx
    970c:	c3                   	ret    
    970d:	0f 1f 00             	nopl   (%rax)

0000000000009710 <ema_set_eaccept>:
    9710:	f3 0f 1e fa          	endbr64 
    9714:	48 85 ff             	test   %rdi,%rdi
    9717:	74 6f                	je     9788 <ema_set_eaccept+0x78>
    9719:	55                   	push   %rbp
    971a:	48 89 fd             	mov    %rdi,%rbp
    971d:	48 83 ec 10          	sub    $0x10,%rsp
    9721:	48 8b 07             	mov    (%rdi),%rax
    9724:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    9728:	48 29 c6             	sub    %rax,%rsi
    972b:	48 29 c2             	sub    %rax,%rdx
    972e:	48 c1 ee 0c          	shr    $0xc,%rsi
    9732:	48 c1 ea 0c          	shr    $0xc,%rdx
    9736:	48 85 ff             	test   %rdi,%rdi
    9739:	74 15                	je     9750 <ema_set_eaccept+0x40>
    973b:	48 29 f2             	sub    %rsi,%rdx
    973e:	e8 cd f8 ff ff       	call   9010 <bit_array_set_range>
    9743:	31 c0                	xor    %eax,%eax
    9745:	48 83 c4 10          	add    $0x10,%rsp
    9749:	5d                   	pop    %rbp
    974a:	c3                   	ret    
    974b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    9750:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    9754:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    9759:	48 89 34 24          	mov    %rsi,(%rsp)
    975d:	48 c1 ef 0c          	shr    $0xc,%rdi
    9761:	e8 6a f6 ff ff       	call   8dd0 <bit_array_new_reset>
    9766:	48 8b 34 24          	mov    (%rsp),%rsi
    976a:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    976f:	48 85 c0             	test   %rax,%rax
    9772:	48 89 45 20          	mov    %rax,0x20(%rbp)
    9776:	48 89 c7             	mov    %rax,%rdi
    9779:	75 c0                	jne    973b <ema_set_eaccept+0x2b>
    977b:	b8 0c 00 00 00       	mov    $0xc,%eax
    9780:	eb c3                	jmp    9745 <ema_set_eaccept+0x35>
    9782:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9788:	b8 16 00 00 00       	mov    $0x16,%eax
    978d:	c3                   	ret    
    978e:	66 90                	xchg   %ax,%ax

0000000000009790 <ema_page_committed>:
    9790:	f3 0f 1e fa          	endbr64 
    9794:	48 8b 47 20          	mov    0x20(%rdi),%rax
    9798:	48 85 c0             	test   %rax,%rax
    979b:	74 13                	je     97b0 <ema_page_committed+0x20>
    979d:	48 2b 37             	sub    (%rdi),%rsi
    97a0:	48 89 c7             	mov    %rax,%rdi
    97a3:	48 c1 ee 0c          	shr    $0xc,%rsi
    97a7:	e9 74 f6 ff ff       	jmp    8e20 <bit_array_test>
    97ac:	0f 1f 40 00          	nopl   0x0(%rax)
    97b0:	31 c0                	xor    %eax,%eax
    97b2:	c3                   	ret    
    97b3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    97ba:	00 00 00 
    97bd:	0f 1f 00             	nopl   (%rax)

00000000000097c0 <search_ema>:
    97c0:	f3 0f 1e fa          	endbr64 
    97c4:	48 8b 0f             	mov    (%rdi),%rcx
    97c7:	48 8b 41 38          	mov    0x38(%rcx),%rax
    97cb:	48 39 c1             	cmp    %rax,%rcx
    97ce:	74 1a                	je     97ea <search_ema+0x2a>
    97d0:	48 8b 10             	mov    (%rax),%rdx
    97d3:	48 39 d6             	cmp    %rdx,%rsi
    97d6:	72 09                	jb     97e1 <search_ema+0x21>
    97d8:	48 03 50 08          	add    0x8(%rax),%rdx
    97dc:	48 39 d6             	cmp    %rdx,%rsi
    97df:	72 0b                	jb     97ec <search_ema+0x2c>
    97e1:	48 8b 40 38          	mov    0x38(%rax),%rax
    97e5:	48 39 c1             	cmp    %rax,%rcx
    97e8:	75 e6                	jne    97d0 <search_ema+0x10>
    97ea:	31 c0                	xor    %eax,%eax
    97ec:	c3                   	ret    
    97ed:	0f 1f 00             	nopl   (%rax)

00000000000097f0 <insert_ema>:
    97f0:	f3 0f 1e fa          	endbr64 
    97f4:	48 8b 56 40          	mov    0x40(%rsi),%rdx
    97f8:	66 48 0f 6e c6       	movq   %rsi,%xmm0
    97fd:	48 89 f8             	mov    %rdi,%rax
    9800:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9805:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9809:	0f 11 47 38          	movups %xmm0,0x38(%rdi)
    980d:	48 89 7a 38          	mov    %rdi,0x38(%rdx)
    9811:	48 89 7e 40          	mov    %rdi,0x40(%rsi)
    9815:	c3                   	ret    
    9816:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    981d:	00 00 00 

0000000000009820 <push_back_ema>:
    9820:	f3 0f 1e fa          	endbr64 
    9824:	48 8b 07             	mov    (%rdi),%rax
    9827:	48 8b 50 40          	mov    0x40(%rax),%rdx
    982b:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9830:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    9835:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    9839:	0f 11 46 38          	movups %xmm0,0x38(%rsi)
    983d:	48 89 72 38          	mov    %rsi,0x38(%rdx)
    9841:	48 89 70 40          	mov    %rsi,0x40(%rax)
    9845:	c3                   	ret    
    9846:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    984d:	00 00 00 

0000000000009850 <search_ema_range>:
    9850:	f3 0f 1e fa          	endbr64 
    9854:	4c 8b 0f             	mov    (%rdi),%r9
    9857:	49 89 fa             	mov    %rdi,%r10
    985a:	49 8b 41 38          	mov    0x38(%r9),%rax
    985e:	49 39 c1             	cmp    %rax,%r9
    9861:	75 0e                	jne    9871 <search_ema_range+0x21>
    9863:	eb 4b                	jmp    98b0 <search_ema_range+0x60>
    9865:	0f 1f 00             	nopl   (%rax)
    9868:	48 8b 40 38          	mov    0x38(%rax),%rax
    986c:	49 39 c1             	cmp    %rax,%r9
    986f:	74 3f                	je     98b0 <search_ema_range+0x60>
    9871:	48 8b 38             	mov    (%rax),%rdi
    9874:	48 03 78 08          	add    0x8(%rax),%rdi
    9878:	48 39 fe             	cmp    %rdi,%rsi
    987b:	73 eb                	jae    9868 <search_ema_range+0x18>
    987d:	49 39 c1             	cmp    %rax,%r9
    9880:	74 2e                	je     98b0 <search_ema_range+0x60>
    9882:	48 39 10             	cmp    %rdx,(%rax)
    9885:	73 29                	jae    98b0 <search_ema_range+0x60>
    9887:	48 89 01             	mov    %rax,(%rcx)
    988a:	49 8b 0a             	mov    (%r10),%rcx
    988d:	48 39 c1             	cmp    %rax,%rcx
    9890:	74 14                	je     98a6 <search_ema_range+0x56>
    9892:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9898:	48 8b 40 38          	mov    0x38(%rax),%rax
    989c:	48 39 c1             	cmp    %rax,%rcx
    989f:	74 05                	je     98a6 <search_ema_range+0x56>
    98a1:	48 39 10             	cmp    %rdx,(%rax)
    98a4:	72 f2                	jb     9898 <search_ema_range+0x48>
    98a6:	31 d2                	xor    %edx,%edx
    98a8:	49 89 00             	mov    %rax,(%r8)
    98ab:	89 d0                	mov    %edx,%eax
    98ad:	c3                   	ret    
    98ae:	66 90                	xchg   %ax,%ax
    98b0:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    98b7:	31 c0                	xor    %eax,%eax
    98b9:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    98be:	eb e8                	jmp    98a8 <search_ema_range+0x58>

00000000000098c0 <ema_split>:
    98c0:	f3 0f 1e fa          	endbr64 
    98c4:	41 56                	push   %r14
    98c6:	41 89 d6             	mov    %edx,%r14d
    98c9:	41 55                	push   %r13
    98cb:	49 89 cd             	mov    %rcx,%r13
    98ce:	41 54                	push   %r12
    98d0:	49 89 f4             	mov    %rsi,%r12
    98d3:	55                   	push   %rbp
    98d4:	53                   	push   %rbx
    98d5:	48 89 fb             	mov    %rdi,%rbx
    98d8:	bf 48 00 00 00       	mov    $0x48,%edi
    98dd:	48 83 ec 30          	sub    $0x30,%rsp
    98e1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    98e8:	00 00 
    98ea:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    98ef:	31 c0                	xor    %eax,%eax
    98f1:	e8 0a 1a 00 00       	call   b300 <emalloc>
    98f6:	48 85 c0             	test   %rax,%rax
    98f9:	0f 84 39 01 00 00    	je     9a38 <ema_split+0x178>
    98ff:	48 c7 44 24 18 00 00 	movq   $0x0,0x18(%rsp)
    9906:	00 00 
    9908:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    990c:	48 89 c5             	mov    %rax,%rbp
    990f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9916:	00 00 
    9918:	48 85 ff             	test   %rdi,%rdi
    991b:	74 21                	je     993e <ema_split+0x7e>
    991d:	4c 89 e6             	mov    %r12,%rsi
    9920:	48 8d 4c 24 20       	lea    0x20(%rsp),%rcx
    9925:	48 8d 54 24 18       	lea    0x18(%rsp),%rdx
    992a:	48 2b 33             	sub    (%rbx),%rsi
    992d:	48 c1 ee 0c          	shr    $0xc,%rsi
    9931:	e8 fa f8 ff ff       	call   9230 <bit_array_split>
    9936:	85 c0                	test   %eax,%eax
    9938:	0f 85 e2 00 00 00    	jne    9a20 <ema_split+0x160>
    993e:	ba 48 00 00 00       	mov    $0x48,%edx
    9943:	48 89 de             	mov    %rbx,%rsi
    9946:	48 89 ef             	mov    %rbp,%rdi
    9949:	e8 62 6c 00 00       	call   105b0 <memcpy>
    994e:	45 84 f6             	test   %r14b,%r14b
    9951:	0f 85 99 00 00 00    	jne    99f0 <ema_split+0x130>
    9957:	48 8b 43 38          	mov    0x38(%rbx),%rax
    995b:	48 89 d9             	mov    %rbx,%rcx
    995e:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9962:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9967:	66 48 0f 6e da       	movq   %rdx,%xmm3
    996c:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    9970:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9974:	48 89 6a 38          	mov    %rbp,0x38(%rdx)
    9978:	48 89 ea             	mov    %rbp,%rdx
    997b:	48 89 68 40          	mov    %rbp,0x40(%rax)
    997f:	48 8b 03             	mov    (%rbx),%rax
    9982:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    9986:	4c 89 e7             	mov    %r12,%rdi
    9989:	48 29 c7             	sub    %rax,%rdi
    998c:	66 48 0f 6e c0       	movq   %rax,%xmm0
    9991:	48 01 f0             	add    %rsi,%rax
    9994:	66 48 0f 6e cf       	movq   %rdi,%xmm1
    9999:	4c 29 e0             	sub    %r12,%rax
    999c:	48 83 7b 20 00       	cmpq   $0x0,0x20(%rbx)
    99a1:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    99a5:	0f 11 01             	movups %xmm0,(%rcx)
    99a8:	4c 89 22             	mov    %r12,(%rdx)
    99ab:	48 89 42 08          	mov    %rax,0x8(%rdx)
    99af:	74 12                	je     99c3 <ema_split+0x103>
    99b1:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    99b6:	48 89 41 20          	mov    %rax,0x20(%rcx)
    99ba:	48 8b 44 24 20       	mov    0x20(%rsp),%rax
    99bf:	48 89 42 20          	mov    %rax,0x20(%rdx)
    99c3:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    99c7:	31 c0                	xor    %eax,%eax
    99c9:	48 8b 54 24 28       	mov    0x28(%rsp),%rdx
    99ce:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    99d5:	00 00 
    99d7:	75 66                	jne    9a3f <ema_split+0x17f>
    99d9:	48 83 c4 30          	add    $0x30,%rsp
    99dd:	5b                   	pop    %rbx
    99de:	5d                   	pop    %rbp
    99df:	41 5c                	pop    %r12
    99e1:	41 5d                	pop    %r13
    99e3:	41 5e                	pop    %r14
    99e5:	c3                   	ret    
    99e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    99ed:	00 00 00 
    99f0:	48 8b 43 40          	mov    0x40(%rbx),%rax
    99f4:	66 48 0f 6e c3       	movq   %rbx,%xmm0
    99f9:	48 89 da             	mov    %rbx,%rdx
    99fc:	48 89 e9             	mov    %rbp,%rcx
    99ff:	66 48 0f 6e d0       	movq   %rax,%xmm2
    9a04:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    9a08:	0f 11 45 38          	movups %xmm0,0x38(%rbp)
    9a0c:	48 89 68 38          	mov    %rbp,0x38(%rax)
    9a10:	48 89 6b 40          	mov    %rbp,0x40(%rbx)
    9a14:	e9 66 ff ff ff       	jmp    997f <ema_split+0xbf>
    9a19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9a20:	48 89 ef             	mov    %rbp,%rdi
    9a23:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    9a27:	e8 54 1b 00 00       	call   b580 <efree>
    9a2c:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    9a30:	eb 97                	jmp    99c9 <ema_split+0x109>
    9a32:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9a38:	b8 0c 00 00 00       	mov    $0xc,%eax
    9a3d:	eb 8a                	jmp    99c9 <ema_split+0x109>
    9a3f:	e8 7c 6e 00 00       	call   108c0 <__stack_chk_fail>
    9a44:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9a4b:	00 00 00 
    9a4e:	66 90                	xchg   %ax,%ax

0000000000009a50 <ema_split_ex>:
    9a50:	f3 0f 1e fa          	endbr64 
    9a54:	41 54                	push   %r12
    9a56:	49 89 cc             	mov    %rcx,%r12
    9a59:	55                   	push   %rbp
    9a5a:	48 89 d5             	mov    %rdx,%rbp
    9a5d:	53                   	push   %rbx
    9a5e:	48 89 fb             	mov    %rdi,%rbx
    9a61:	48 83 ec 10          	sub    $0x10,%rsp
    9a65:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    9a6c:	00 00 
    9a6e:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    9a73:	48 8b 07             	mov    (%rdi),%rax
    9a76:	48 39 f0             	cmp    %rsi,%rax
    9a79:	72 35                	jb     9ab0 <ema_split_ex+0x60>
    9a7b:	48 03 43 08          	add    0x8(%rbx),%rax
    9a7f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    9a86:	00 
    9a87:	48 39 c5             	cmp    %rax,%rbp
    9a8a:	72 44                	jb     9ad0 <ema_split_ex+0x80>
    9a8c:	48 89 d8             	mov    %rbx,%rax
    9a8f:	49 89 04 24          	mov    %rax,(%r12)
    9a93:	31 c0                	xor    %eax,%eax
    9a95:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    9a9a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9aa1:	00 00 
    9aa3:	75 5b                	jne    9b00 <ema_split_ex+0xb0>
    9aa5:	48 83 c4 10          	add    $0x10,%rsp
    9aa9:	5b                   	pop    %rbx
    9aaa:	5d                   	pop    %rbp
    9aab:	41 5c                	pop    %r12
    9aad:	c3                   	ret    
    9aae:	66 90                	xchg   %ax,%ax
    9ab0:	31 d2                	xor    %edx,%edx
    9ab2:	48 89 e1             	mov    %rsp,%rcx
    9ab5:	e8 06 fe ff ff       	call   98c0 <ema_split>
    9aba:	85 c0                	test   %eax,%eax
    9abc:	75 d7                	jne    9a95 <ema_split_ex+0x45>
    9abe:	48 8b 14 24          	mov    (%rsp),%rdx
    9ac2:	48 85 d2             	test   %rdx,%rdx
    9ac5:	74 31                	je     9af8 <ema_split_ex+0xa8>
    9ac7:	48 8b 02             	mov    (%rdx),%rax
    9aca:	48 89 d3             	mov    %rdx,%rbx
    9acd:	eb ac                	jmp    9a7b <ema_split_ex+0x2b>
    9acf:	90                   	nop
    9ad0:	48 89 e1             	mov    %rsp,%rcx
    9ad3:	ba 01 00 00 00       	mov    $0x1,%edx
    9ad8:	48 89 ee             	mov    %rbp,%rsi
    9adb:	48 89 df             	mov    %rbx,%rdi
    9ade:	e8 dd fd ff ff       	call   98c0 <ema_split>
    9ae3:	85 c0                	test   %eax,%eax
    9ae5:	75 ae                	jne    9a95 <ema_split_ex+0x45>
    9ae7:	48 8b 04 24          	mov    (%rsp),%rax
    9aeb:	48 85 c0             	test   %rax,%rax
    9aee:	75 9f                	jne    9a8f <ema_split_ex+0x3f>
    9af0:	eb 9a                	jmp    9a8c <ema_split_ex+0x3c>
    9af2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9af8:	48 8b 03             	mov    (%rbx),%rax
    9afb:	e9 7b ff ff ff       	jmp    9a7b <ema_split_ex+0x2b>
    9b00:	e8 bb 6d 00 00       	call   108c0 <__stack_chk_fail>
    9b05:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    9b0c:	00 00 00 
    9b0f:	90                   	nop

0000000000009b10 <find_free_region>:
    9b10:	f3 0f 1e fa          	endbr64 
    9b14:	41 57                	push   %r15
    9b16:	49 89 cf             	mov    %rcx,%r15
    9b19:	41 56                	push   %r14
    9b1b:	49 89 fe             	mov    %rdi,%r14
    9b1e:	41 55                	push   %r13
    9b20:	49 89 d5             	mov    %rdx,%r13
    9b23:	41 54                	push   %r12
    9b25:	49 f7 dd             	neg    %r13
    9b28:	55                   	push   %rbp
    9b29:	48 89 f5             	mov    %rsi,%rbp
    9b2c:	53                   	push   %rbx
    9b2d:	48 89 d3             	mov    %rdx,%rbx
    9b30:	48 83 ec 18          	sub    $0x18,%rsp
    9b34:	4c 8b 27             	mov    (%rdi),%r12
    9b37:	49 8b 4c 24 38       	mov    0x38(%r12),%rcx
    9b3c:	49 c7 00 00 00 00 00 	movq   $0x0,(%r8)
    9b43:	49 c7 07 00 00 00 00 	movq   $0x0,(%r15)
    9b4a:	49 39 cc             	cmp    %rcx,%r12
    9b4d:	0f 84 a5 00 00 00    	je     9bf8 <find_free_region+0xe8>
    9b53:	48 8b 51 38          	mov    0x38(%rcx),%rdx
    9b57:	4c 8b 11             	mov    (%rcx),%r10
    9b5a:	48 8d 73 ff          	lea    -0x1(%rbx),%rsi
    9b5e:	49 39 d4             	cmp    %rdx,%r12
    9b61:	0f 84 02 01 00 00    	je     9c69 <find_free_region+0x159>
    9b67:	4c 8b 0d 92 0e 02 00 	mov    0x20e92(%rip),%r9        # 2aa00 <mm_user_end>
    9b6e:	48 89 c8             	mov    %rcx,%rax
    9b71:	48 8d 3d f0 04 01 00 	lea    0x104f0(%rip),%rdi        # 1a068 <g_rts_ema_root>
    9b78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9b7f:	00 
    9b80:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9b84:	48 01 f3             	add    %rsi,%rbx
    9b87:	48 89 d8             	mov    %rbx,%rax
    9b8a:	4c 01 d0             	add    %r10,%rax
    9b8d:	4c 8b 12             	mov    (%rdx),%r10
    9b90:	4c 21 e8             	and    %r13,%rax
    9b93:	49 39 c2             	cmp    %rax,%r10
    9b96:	72 48                	jb     9be0 <find_free_region+0xd0>
    9b98:	4d 89 d3             	mov    %r10,%r11
    9b9b:	49 29 c3             	sub    %rax,%r11
    9b9e:	49 39 eb             	cmp    %rbp,%r11
    9ba1:	72 3d                	jb     9be0 <find_free_region+0xd0>
    9ba3:	49 39 fe             	cmp    %rdi,%r14
    9ba6:	75 16                	jne    9bbe <find_free_region+0xae>
    9ba8:	49 89 eb             	mov    %rbp,%r11
    9bab:	49 01 c3             	add    %rax,%r11
    9bae:	72 30                	jb     9be0 <find_free_region+0xd0>
    9bb0:	4c 39 c8             	cmp    %r9,%rax
    9bb3:	73 09                	jae    9bbe <find_free_region+0xae>
    9bb5:	4c 39 1d 4c 0e 02 00 	cmp    %r11,0x20e4c(%rip)        # 2aa08 <mm_user_base>
    9bbc:	72 22                	jb     9be0 <find_free_region+0xd0>
    9bbe:	49 89 10             	mov    %rdx,(%r8)
    9bc1:	49 89 07             	mov    %rax,(%r15)
    9bc4:	48 83 c4 18          	add    $0x18,%rsp
    9bc8:	b8 01 00 00 00       	mov    $0x1,%eax
    9bcd:	5b                   	pop    %rbx
    9bce:	5d                   	pop    %rbp
    9bcf:	41 5c                	pop    %r12
    9bd1:	41 5d                	pop    %r13
    9bd3:	41 5e                	pop    %r14
    9bd5:	41 5f                	pop    %r15
    9bd7:	c3                   	ret    
    9bd8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9bdf:	00 
    9be0:	48 8b 5a 38          	mov    0x38(%rdx),%rbx
    9be4:	48 89 d0             	mov    %rdx,%rax
    9be7:	49 39 dc             	cmp    %rbx,%r12
    9bea:	0f 84 80 00 00 00    	je     9c70 <find_free_region+0x160>
    9bf0:	48 89 da             	mov    %rbx,%rdx
    9bf3:	eb 8b                	jmp    9b80 <find_free_region+0x70>
    9bf5:	0f 1f 00             	nopl   (%rax)
    9bf8:	48 8d 05 69 04 01 00 	lea    0x10469(%rip),%rax        # 1a068 <g_rts_ema_root>
    9bff:	48 8b 15 02 0e 02 00 	mov    0x20e02(%rip),%rdx        # 2aa08 <mm_user_base>
    9c06:	48 39 c7             	cmp    %rax,%rdi
    9c09:	74 25                	je     9c30 <find_free_region+0x120>
    9c0b:	48 8d 44 1a ff       	lea    -0x1(%rdx,%rbx,1),%rax
    9c10:	4c 21 e8             	and    %r13,%rax
    9c13:	48 01 c5             	add    %rax,%rbp
    9c16:	72 40                	jb     9c58 <find_free_region+0x148>
    9c18:	48 39 d0             	cmp    %rdx,%rax
    9c1b:	72 3b                	jb     9c58 <find_free_region+0x148>
    9c1d:	48 39 2d dc 0d 02 00 	cmp    %rbp,0x20ddc(%rip)        # 2aa00 <mm_user_end>
    9c24:	72 32                	jb     9c58 <find_free_region+0x148>
    9c26:	49 89 07             	mov    %rax,(%r15)
    9c29:	4d 89 20             	mov    %r12,(%r8)
    9c2c:	eb 96                	jmp    9bc4 <find_free_region+0xb4>
    9c2e:	66 90                	xchg   %ax,%ax
    9c30:	48 39 f2             	cmp    %rsi,%rdx
    9c33:	0f 83 be 01 00 00    	jae    9df7 <find_free_region+0x2e7>
    9c39:	48 8b 05 c0 0d 02 00 	mov    0x20dc0(%rip),%rax        # 2aa00 <mm_user_end>
    9c40:	4c 8d 74 03 ff       	lea    -0x1(%rbx,%rax,1),%r14
    9c45:	48 89 e8             	mov    %rbp,%rax
    9c48:	4d 21 ee             	and    %r13,%r14
    9c4b:	4c 01 f0             	add    %r14,%rax
    9c4e:	0f 83 e4 00 00 00    	jae    9d38 <find_free_region+0x228>
    9c54:	0f 1f 40 00          	nopl   0x0(%rax)
    9c58:	31 c0                	xor    %eax,%eax
    9c5a:	48 83 c4 18          	add    $0x18,%rsp
    9c5e:	5b                   	pop    %rbx
    9c5f:	5d                   	pop    %rbp
    9c60:	41 5c                	pop    %r12
    9c62:	41 5d                	pop    %r13
    9c64:	41 5e                	pop    %r14
    9c66:	41 5f                	pop    %r15
    9c68:	c3                   	ret    
    9c69:	48 89 d3             	mov    %rdx,%rbx
    9c6c:	48 89 ca             	mov    %rcx,%rdx
    9c6f:	90                   	nop
    9c70:	4d 8d 24 32          	lea    (%r10,%rsi,1),%r12
    9c74:	4c 03 62 08          	add    0x8(%rdx),%r12
    9c78:	48 89 ee             	mov    %rbp,%rsi
    9c7b:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9c80:	4d 21 ec             	and    %r13,%r12
    9c83:	48 89 0c 24          	mov    %rcx,(%rsp)
    9c87:	4c 89 e7             	mov    %r12,%rdi
    9c8a:	e8 71 bc ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9c8f:	48 8b 0c 24          	mov    (%rsp),%rcx
    9c93:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9c98:	84 c0                	test   %al,%al
    9c9a:	74 4c                	je     9ce8 <find_free_region+0x1d8>
    9c9c:	48 89 ee             	mov    %rbp,%rsi
    9c9f:	31 d2                	xor    %edx,%edx
    9ca1:	48 8d 05 c0 03 01 00 	lea    0x103c0(%rip),%rax        # 1a068 <g_rts_ema_root>
    9ca8:	4c 01 e6             	add    %r12,%rsi
    9cab:	0f 92 c2             	setb   %dl
    9cae:	49 39 c6             	cmp    %rax,%r14
    9cb1:	0f 84 a7 00 00 00    	je     9d5e <find_free_region+0x24e>
    9cb7:	48 85 d2             	test   %rdx,%rdx
    9cba:	0f 85 20 01 00 00    	jne    9de0 <find_free_region+0x2d0>
    9cc0:	4c 3b 25 41 0d 02 00 	cmp    0x20d41(%rip),%r12        # 2aa08 <mm_user_base>
    9cc7:	0f 82 13 01 00 00    	jb     9de0 <find_free_region+0x2d0>
    9ccd:	48 39 35 2c 0d 02 00 	cmp    %rsi,0x20d2c(%rip)        # 2aa00 <mm_user_end>
    9cd4:	0f 82 06 01 00 00    	jb     9de0 <find_free_region+0x2d0>
    9cda:	49 89 18             	mov    %rbx,(%r8)
    9cdd:	4d 89 27             	mov    %r12,(%r15)
    9ce0:	e9 df fe ff ff       	jmp    9bc4 <find_free_region+0xb4>
    9ce5:	0f 1f 00             	nopl   (%rax)
    9ce8:	48 8b 19             	mov    (%rcx),%rbx
    9ceb:	48 39 eb             	cmp    %rbp,%rbx
    9cee:	0f 82 64 ff ff ff    	jb     9c58 <find_free_region+0x148>
    9cf4:	48 29 eb             	sub    %rbp,%rbx
    9cf7:	48 8d 05 6a 03 01 00 	lea    0x1036a(%rip),%rax        # 1a068 <g_rts_ema_root>
    9cfe:	4c 21 eb             	and    %r13,%rbx
    9d01:	49 39 c6             	cmp    %rax,%r14
    9d04:	0f 84 85 00 00 00    	je     9d8f <find_free_region+0x27f>
    9d0a:	48 01 dd             	add    %rbx,%rbp
    9d0d:	0f 82 45 ff ff ff    	jb     9c58 <find_free_region+0x148>
    9d13:	48 3b 1d ee 0c 02 00 	cmp    0x20cee(%rip),%rbx        # 2aa08 <mm_user_base>
    9d1a:	0f 82 38 ff ff ff    	jb     9c58 <find_free_region+0x148>
    9d20:	48 39 2d d9 0c 02 00 	cmp    %rbp,0x20cd9(%rip)        # 2aa00 <mm_user_end>
    9d27:	0f 82 2b ff ff ff    	jb     9c58 <find_free_region+0x148>
    9d2d:	49 89 1f             	mov    %rbx,(%r15)
    9d30:	49 89 08             	mov    %rcx,(%r8)
    9d33:	e9 8c fe ff ff       	jmp    9bc4 <find_free_region+0xb4>
    9d38:	48 89 ee             	mov    %rbp,%rsi
    9d3b:	4c 89 f7             	mov    %r14,%rdi
    9d3e:	4c 89 04 24          	mov    %r8,(%rsp)
    9d42:	e8 b9 bb ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9d47:	4c 8b 04 24          	mov    (%rsp),%r8
    9d4b:	84 c0                	test   %al,%al
    9d4d:	0f 84 05 ff ff ff    	je     9c58 <find_free_region+0x148>
    9d53:	4d 89 37             	mov    %r14,(%r15)
    9d56:	4d 89 20             	mov    %r12,(%r8)
    9d59:	e9 66 fe ff ff       	jmp    9bc4 <find_free_region+0xb4>
    9d5e:	48 85 d2             	test   %rdx,%rdx
    9d61:	75 1a                	jne    9d7d <find_free_region+0x26d>
    9d63:	4c 3b 25 96 0c 02 00 	cmp    0x20c96(%rip),%r12        # 2aa00 <mm_user_end>
    9d6a:	0f 83 6a ff ff ff    	jae    9cda <find_free_region+0x1ca>
    9d70:	48 39 35 91 0c 02 00 	cmp    %rsi,0x20c91(%rip)        # 2aa08 <mm_user_base>
    9d77:	0f 83 5d ff ff ff    	jae    9cda <find_free_region+0x1ca>
    9d7d:	48 8b 19             	mov    (%rcx),%rbx
    9d80:	48 39 eb             	cmp    %rbp,%rbx
    9d83:	0f 82 cf fe ff ff    	jb     9c58 <find_free_region+0x148>
    9d89:	48 29 eb             	sub    %rbp,%rbx
    9d8c:	4c 21 eb             	and    %r13,%rbx
    9d8f:	48 89 ee             	mov    %rbp,%rsi
    9d92:	48 89 df             	mov    %rbx,%rdi
    9d95:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    9d9a:	48 89 0c 24          	mov    %rcx,(%rsp)
    9d9e:	e8 5d bb ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9da3:	84 c0                	test   %al,%al
    9da5:	0f 84 ad fe ff ff    	je     9c58 <find_free_region+0x148>
    9dab:	48 01 dd             	add    %rbx,%rbp
    9dae:	0f 82 a4 fe ff ff    	jb     9c58 <find_free_region+0x148>
    9db4:	48 3b 1d 45 0c 02 00 	cmp    0x20c45(%rip),%rbx        # 2aa00 <mm_user_end>
    9dbb:	48 8b 0c 24          	mov    (%rsp),%rcx
    9dbf:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    9dc4:	0f 83 63 ff ff ff    	jae    9d2d <find_free_region+0x21d>
    9dca:	48 39 2d 37 0c 02 00 	cmp    %rbp,0x20c37(%rip)        # 2aa08 <mm_user_base>
    9dd1:	0f 83 56 ff ff ff    	jae    9d2d <find_free_region+0x21d>
    9dd7:	31 c0                	xor    %eax,%eax
    9dd9:	e9 7c fe ff ff       	jmp    9c5a <find_free_region+0x14a>
    9dde:	66 90                	xchg   %ax,%ax
    9de0:	48 8b 19             	mov    (%rcx),%rbx
    9de3:	48 39 eb             	cmp    %rbp,%rbx
    9de6:	0f 82 6c fe ff ff    	jb     9c58 <find_free_region+0x148>
    9dec:	48 29 eb             	sub    %rbp,%rbx
    9def:	4c 21 eb             	and    %r13,%rbx
    9df2:	e9 13 ff ff ff       	jmp    9d0a <find_free_region+0x1fa>
    9df7:	48 29 f2             	sub    %rsi,%rdx
    9dfa:	4c 89 04 24          	mov    %r8,(%rsp)
    9dfe:	4c 21 ea             	and    %r13,%rdx
    9e01:	48 89 d7             	mov    %rdx,%rdi
    9e04:	49 89 d6             	mov    %rdx,%r14
    9e07:	e8 f4 ba ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9e0c:	4c 8b 04 24          	mov    (%rsp),%r8
    9e10:	84 c0                	test   %al,%al
    9e12:	0f 85 3b ff ff ff    	jne    9d53 <find_free_region+0x243>
    9e18:	e9 1c fe ff ff       	jmp    9c39 <find_free_region+0x129>
    9e1d:	0f 1f 00             	nopl   (%rax)

0000000000009e20 <find_free_region_at>:
    9e20:	f3 0f 1e fa          	endbr64 
    9e24:	41 55                	push   %r13
    9e26:	49 89 cd             	mov    %rcx,%r13
    9e29:	41 54                	push   %r12
    9e2b:	49 89 fc             	mov    %rdi,%r12
    9e2e:	55                   	push   %rbp
    9e2f:	48 89 d5             	mov    %rdx,%rbp
    9e32:	53                   	push   %rbx
    9e33:	48 89 f3             	mov    %rsi,%rbx
    9e36:	48 89 d6             	mov    %rdx,%rsi
    9e39:	48 89 df             	mov    %rbx,%rdi
    9e3c:	48 83 ec 08          	sub    $0x8,%rsp
    9e40:	e8 bb ba ff ff       	call   5900 <sgx_mm_is_within_enclave>
    9e45:	31 c9                	xor    %ecx,%ecx
    9e47:	84 c0                	test   %al,%al
    9e49:	74 5f                	je     9eaa <find_free_region_at+0x8a>
    9e4b:	31 f6                	xor    %esi,%esi
    9e4d:	48 8d 15 14 02 01 00 	lea    0x10214(%rip),%rdx        # 1a068 <g_rts_ema_root>
    9e54:	48 01 dd             	add    %rbx,%rbp
    9e57:	40 0f 92 c6          	setb   %sil
    9e5b:	49 39 d4             	cmp    %rdx,%r12
    9e5e:	0f 84 7c 00 00 00    	je     9ee0 <find_free_region_at+0xc0>
    9e64:	48 85 f6             	test   %rsi,%rsi
    9e67:	75 5e                	jne    9ec7 <find_free_region_at+0xa7>
    9e69:	48 3b 1d 98 0b 02 00 	cmp    0x20b98(%rip),%rbx        # 2aa08 <mm_user_base>
    9e70:	72 55                	jb     9ec7 <find_free_region_at+0xa7>
    9e72:	48 39 2d 87 0b 02 00 	cmp    %rbp,0x20b87(%rip)        # 2aa00 <mm_user_end>
    9e79:	72 4c                	jb     9ec7 <find_free_region_at+0xa7>
    9e7b:	49 8b 14 24          	mov    (%r12),%rdx
    9e7f:	48 8b 4a 38          	mov    0x38(%rdx),%rcx
    9e83:	48 39 ca             	cmp    %rcx,%rdx
    9e86:	75 1a                	jne    9ea2 <find_free_region_at+0x82>
    9e88:	eb 20                	jmp    9eaa <find_free_region_at+0x8a>
    9e8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    9e90:	48 03 71 08          	add    0x8(%rcx),%rsi
    9e94:	48 39 f3             	cmp    %rsi,%rbx
    9e97:	72 27                	jb     9ec0 <find_free_region_at+0xa0>
    9e99:	48 8b 49 38          	mov    0x38(%rcx),%rcx
    9e9d:	48 39 ca             	cmp    %rcx,%rdx
    9ea0:	74 08                	je     9eaa <find_free_region_at+0x8a>
    9ea2:	48 8b 31             	mov    (%rcx),%rsi
    9ea5:	48 39 ee             	cmp    %rbp,%rsi
    9ea8:	72 e6                	jb     9e90 <find_free_region_at+0x70>
    9eaa:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9eae:	48 83 c4 08          	add    $0x8,%rsp
    9eb2:	5b                   	pop    %rbx
    9eb3:	5d                   	pop    %rbp
    9eb4:	41 5c                	pop    %r12
    9eb6:	41 5d                	pop    %r13
    9eb8:	c3                   	ret    
    9eb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9ec0:	48 39 ca             	cmp    %rcx,%rdx
    9ec3:	74 e5                	je     9eaa <find_free_region_at+0x8a>
    9ec5:	31 c9                	xor    %ecx,%ecx
    9ec7:	31 c0                	xor    %eax,%eax
    9ec9:	49 89 4d 00          	mov    %rcx,0x0(%r13)
    9ecd:	48 83 c4 08          	add    $0x8,%rsp
    9ed1:	5b                   	pop    %rbx
    9ed2:	5d                   	pop    %rbp
    9ed3:	41 5c                	pop    %r12
    9ed5:	41 5d                	pop    %r13
    9ed7:	c3                   	ret    
    9ed8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    9edf:	00 
    9ee0:	48 85 f6             	test   %rsi,%rsi
    9ee3:	75 e2                	jne    9ec7 <find_free_region_at+0xa7>
    9ee5:	48 3b 1d 14 0b 02 00 	cmp    0x20b14(%rip),%rbx        # 2aa00 <mm_user_end>
    9eec:	73 8d                	jae    9e7b <find_free_region_at+0x5b>
    9eee:	48 39 2d 13 0b 02 00 	cmp    %rbp,0x20b13(%rip)        # 2aa08 <mm_user_base>
    9ef5:	73 84                	jae    9e7b <find_free_region_at+0x5b>
    9ef7:	31 c0                	xor    %eax,%eax
    9ef9:	eb ce                	jmp    9ec9 <find_free_region_at+0xa9>
    9efb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000009f00 <ema_new>:
    9f00:	f3 0f 1e fa          	endbr64 
    9f04:	53                   	push   %rbx
    9f05:	48 83 ec 50          	sub    $0x50,%rsp
    9f09:	64 4c 8b 14 25 28 00 	mov    %fs:0x28,%r10
    9f10:	00 00 
    9f12:	4c 89 54 24 48       	mov    %r10,0x48(%rsp)
    9f17:	45 31 d2             	xor    %r10d,%r10d
    9f1a:	48 8b 44 24 60       	mov    0x60(%rsp),%rax
    9f1f:	89 54 24 10          	mov    %edx,0x10(%rsp)
    9f23:	48 89 e3             	mov    %rsp,%rbx
    9f26:	48 89 3c 24          	mov    %rdi,(%rsp)
    9f2a:	bf 48 00 00 00       	mov    $0x48,%edi
    9f2f:	48 8b 50 40          	mov    0x40(%rax),%rdx
    9f33:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    9f38:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    9f3d:	48 89 54 24 40       	mov    %rdx,0x40(%rsp)
    9f42:	48 89 5a 38          	mov    %rbx,0x38(%rdx)
    9f46:	48 89 58 40          	mov    %rbx,0x40(%rax)
    9f4a:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    9f4f:	48 c7 44 24 20 00 00 	movq   $0x0,0x20(%rsp)
    9f56:	00 00 
    9f58:	4c 89 44 24 28       	mov    %r8,0x28(%rsp)
    9f5d:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)
    9f62:	e8 99 13 00 00       	call   b300 <emalloc>
    9f67:	48 85 c0             	test   %rax,%rax
    9f6a:	74 6c                	je     9fd8 <ema_new+0xd8>
    9f6c:	66 0f 6f 0c 24       	movdqa (%rsp),%xmm1
    9f71:	0f 11 08             	movups %xmm1,(%rax)
    9f74:	66 0f 6f 54 24 10    	movdqa 0x10(%rsp),%xmm2
    9f7a:	0f 11 50 10          	movups %xmm2,0x10(%rax)
    9f7e:	66 0f 6f 5c 24 20    	movdqa 0x20(%rsp),%xmm3
    9f84:	0f 11 58 20          	movups %xmm3,0x20(%rax)
    9f88:	66 0f 6f 64 24 30    	movdqa 0x30(%rsp),%xmm4
    9f8e:	0f 11 60 30          	movups %xmm4,0x30(%rax)
    9f92:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    9f97:	48 89 50 40          	mov    %rdx,0x40(%rax)
    9f9b:	48 8b 54 24 40       	mov    0x40(%rsp),%rdx
    9fa0:	48 89 42 38          	mov    %rax,0x38(%rdx)
    9fa4:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    9fa9:	48 89 42 40          	mov    %rax,0x40(%rdx)
    9fad:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    9fb2:	0f 16 44 24 40       	movhps 0x40(%rsp),%xmm0
    9fb7:	0f 11 40 38          	movups %xmm0,0x38(%rax)
    9fbb:	48 8b 54 24 48       	mov    0x48(%rsp),%rdx
    9fc0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    9fc7:	00 00 
    9fc9:	75 2d                	jne    9ff8 <ema_new+0xf8>
    9fcb:	48 83 c4 50          	add    $0x50,%rsp
    9fcf:	5b                   	pop    %rbx
    9fd0:	c3                   	ret    
    9fd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    9fd8:	48 8b 4c 24 40       	mov    0x40(%rsp),%rcx
    9fdd:	48 39 59 38          	cmp    %rbx,0x38(%rcx)
    9fe1:	75 1a                	jne    9ffd <ema_new+0xfd>
    9fe3:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    9fe8:	48 39 5a 40          	cmp    %rbx,0x40(%rdx)
    9fec:	75 0f                	jne    9ffd <ema_new+0xfd>
    9fee:	48 89 51 38          	mov    %rdx,0x38(%rcx)
    9ff2:	48 89 4a 40          	mov    %rcx,0x40(%rdx)
    9ff6:	eb c3                	jmp    9fbb <ema_new+0xbb>
    9ff8:	e8 c3 68 00 00       	call   108c0 <__stack_chk_fail>
    9ffd:	e8 35 83 00 00       	call   12337 <abort>
    a002:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a009:	00 00 00 
    a00c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a010 <ema_destroy>:
    a010:	f3 0f 1e fa          	endbr64 
    a014:	53                   	push   %rbx
    a015:	48 89 fb             	mov    %rdi,%rbx
    a018:	48 85 ff             	test   %rdi,%rdi
    a01b:	74 1c                	je     a039 <ema_destroy+0x29>
    a01d:	48 8b 47 40          	mov    0x40(%rdi),%rax
    a021:	48 3b 78 38          	cmp    0x38(%rax),%rdi
    a025:	75 29                	jne    a050 <ema_destroy+0x40>
    a027:	48 8b 57 38          	mov    0x38(%rdi),%rdx
    a02b:	48 3b 7a 40          	cmp    0x40(%rdx),%rdi
    a02f:	75 1f                	jne    a050 <ema_destroy+0x40>
    a031:	48 89 50 38          	mov    %rdx,0x38(%rax)
    a035:	48 89 42 40          	mov    %rax,0x40(%rdx)
    a039:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    a03d:	48 85 ff             	test   %rdi,%rdi
    a040:	74 05                	je     a047 <ema_destroy+0x37>
    a042:	e8 b9 ed ff ff       	call   8e00 <bit_array_delete>
    a047:	48 89 df             	mov    %rbx,%rdi
    a04a:	5b                   	pop    %rbx
    a04b:	e9 30 15 00 00       	jmp    b580 <efree>
    a050:	e8 e2 82 00 00       	call   12337 <abort>
    a055:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a05c:	00 00 00 
    a05f:	90                   	nop

000000000000a060 <destroy_ema_root>:
    a060:	f3 0f 1e fa          	endbr64 
    a064:	55                   	push   %rbp
    a065:	53                   	push   %rbx
    a066:	48 83 ec 08          	sub    $0x8,%rsp
    a06a:	48 8b 07             	mov    (%rdi),%rax
    a06d:	48 8b 58 38          	mov    0x38(%rax),%rbx
    a071:	48 39 d8             	cmp    %rbx,%rax
    a074:	74 1c                	je     a092 <destroy_ema_root+0x32>
    a076:	48 89 fd             	mov    %rdi,%rbp
    a079:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a080:	48 89 df             	mov    %rbx,%rdi
    a083:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    a087:	e8 84 ff ff ff       	call   a010 <ema_destroy>
    a08c:	48 39 5d 00          	cmp    %rbx,0x0(%rbp)
    a090:	75 ee                	jne    a080 <destroy_ema_root+0x20>
    a092:	48 83 c4 08          	add    $0x8,%rsp
    a096:	5b                   	pop    %rbx
    a097:	5d                   	pop    %rbp
    a098:	c3                   	ret    
    a099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000a0a0 <do_commit>:
    a0a0:	f3 0f 1e fa          	endbr64 
    a0a4:	55                   	push   %rbp
    a0a5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a0a9:	48 83 ca 08          	or     $0x8,%rdx
    a0ad:	48 89 e5             	mov    %rsp,%rbp
    a0b0:	41 55                	push   %r13
    a0b2:	41 54                	push   %r12
    a0b4:	49 89 fc             	mov    %rdi,%r12
    a0b7:	53                   	push   %rbx
    a0b8:	48 8d 1c 37          	lea    (%rdi,%rsi,1),%rbx
    a0bc:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a0c0:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a0c4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a0cb:	00 00 
    a0cd:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a0d2:	31 c0                	xor    %eax,%eax
    a0d4:	48 89 14 24          	mov    %rdx,(%rsp)
    a0d8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a0df:	00 00 
    a0e1:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a0e6:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a0eb:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a0f0:	84 c9                	test   %cl,%cl
    a0f2:	74 4c                	je     a140 <do_commit+0xa0>
    a0f4:	49 89 e5             	mov    %rsp,%r13
    a0f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a0fe:	00 00 
    a100:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    a107:	4c 89 ef             	mov    %r13,%rdi
    a10a:	48 89 de             	mov    %rbx,%rsi
    a10d:	e8 ad 81 00 00       	call   122bf <do_eaccept>
    a112:	85 c0                	test   %eax,%eax
    a114:	75 57                	jne    a16d <do_commit+0xcd>
    a116:	49 39 dc             	cmp    %rbx,%r12
    a119:	72 e5                	jb     a100 <do_commit+0x60>
    a11b:	48 8b 44 24 78       	mov    0x78(%rsp),%rax
    a120:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    a127:	00 00 
    a129:	75 47                	jne    a172 <do_commit+0xd2>
    a12b:	48 8d 65 e8          	lea    -0x18(%rbp),%rsp
    a12f:	31 c0                	xor    %eax,%eax
    a131:	5b                   	pop    %rbx
    a132:	41 5c                	pop    %r12
    a134:	41 5d                	pop    %r13
    a136:	5d                   	pop    %rbp
    a137:	c3                   	ret    
    a138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a13f:	00 
    a140:	48 39 df             	cmp    %rbx,%rdi
    a143:	73 d6                	jae    a11b <do_commit+0x7b>
    a145:	49 89 e5             	mov    %rsp,%r13
    a148:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a14f:	00 
    a150:	4c 89 e6             	mov    %r12,%rsi
    a153:	4c 89 ef             	mov    %r13,%rdi
    a156:	e8 64 81 00 00       	call   122bf <do_eaccept>
    a15b:	85 c0                	test   %eax,%eax
    a15d:	75 0e                	jne    a16d <do_commit+0xcd>
    a15f:	49 81 c4 00 10 00 00 	add    $0x1000,%r12
    a166:	49 39 dc             	cmp    %rbx,%r12
    a169:	72 e5                	jb     a150 <do_commit+0xb0>
    a16b:	eb ae                	jmp    a11b <do_commit+0x7b>
    a16d:	e8 c5 81 00 00       	call   12337 <abort>
    a172:	e8 49 67 00 00       	call   108c0 <__stack_chk_fail>
    a177:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    a17e:	00 00 

000000000000a180 <ema_do_commit>:
    a180:	f3 0f 1e fa          	endbr64 
    a184:	55                   	push   %rbp
    a185:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a189:	48 89 e5             	mov    %rsp,%rbp
    a18c:	41 57                	push   %r15
    a18e:	41 56                	push   %r14
    a190:	41 55                	push   %r13
    a192:	41 54                	push   %r12
    a194:	53                   	push   %rbx
    a195:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a199:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    a19d:	4c 8b 77 08          	mov    0x8(%rdi),%r14
    a1a1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a1a8:	00 00 
    a1aa:	48 89 44 24 78       	mov    %rax,0x78(%rsp)
    a1af:	48 8b 07             	mov    (%rdi),%rax
    a1b2:	48 c7 04 24 0b 02 00 	movq   $0x20b,(%rsp)
    a1b9:	00 
    a1ba:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a1c1:	00 00 
    a1c3:	0f 11 44 24 08       	movups %xmm0,0x8(%rsp)
    a1c8:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    a1cd:	0f 11 44 24 28       	movups %xmm0,0x28(%rsp)
    a1d2:	48 39 f0             	cmp    %rsi,%rax
    a1d5:	48 0f 43 f0          	cmovae %rax,%rsi
    a1d9:	49 01 c6             	add    %rax,%r14
    a1dc:	49 39 d6             	cmp    %rdx,%r14
    a1df:	4c 0f 47 f2          	cmova  %rdx,%r14
    a1e3:	4c 39 f6             	cmp    %r14,%rsi
    a1e6:	73 61                	jae    a249 <ema_do_commit+0xc9>
    a1e8:	49 89 fd             	mov    %rdi,%r13
    a1eb:	48 89 f3             	mov    %rsi,%rbx
    a1ee:	49 89 e7             	mov    %rsp,%r15
    a1f1:	eb 15                	jmp    a208 <ema_do_commit+0x88>
    a1f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a1f8:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a1ff:	4c 39 f3             	cmp    %r14,%rbx
    a202:	73 45                	jae    a249 <ema_do_commit+0xc9>
    a204:	49 8b 45 00          	mov    0x0(%r13),%rax
    a208:	49 89 dc             	mov    %rbx,%r12
    a20b:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a20f:	49 29 c4             	sub    %rax,%r12
    a212:	49 c1 ec 0c          	shr    $0xc,%r12
    a216:	4c 89 e6             	mov    %r12,%rsi
    a219:	e8 02 ec ff ff       	call   8e20 <bit_array_test>
    a21e:	84 c0                	test   %al,%al
    a220:	75 d6                	jne    a1f8 <ema_do_commit+0x78>
    a222:	48 89 de             	mov    %rbx,%rsi
    a225:	4c 89 ff             	mov    %r15,%rdi
    a228:	e8 92 80 00 00       	call   122bf <do_eaccept>
    a22d:	85 c0                	test   %eax,%eax
    a22f:	75 1a                	jne    a24b <ema_do_commit+0xcb>
    a231:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    a235:	4c 89 e6             	mov    %r12,%rsi
    a238:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    a23f:	e8 ac ed ff ff       	call   8ff0 <bit_array_set>
    a244:	4c 39 f3             	cmp    %r14,%rbx
    a247:	72 bb                	jb     a204 <ema_do_commit+0x84>
    a249:	31 c0                	xor    %eax,%eax
    a24b:	48 8b 54 24 78       	mov    0x78(%rsp),%rdx
    a250:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a257:	00 00 
    a259:	75 0f                	jne    a26a <ema_do_commit+0xea>
    a25b:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a25f:	5b                   	pop    %rbx
    a260:	41 5c                	pop    %r12
    a262:	41 5d                	pop    %r13
    a264:	41 5e                	pop    %r14
    a266:	41 5f                	pop    %r15
    a268:	5d                   	pop    %rbp
    a269:	c3                   	ret    
    a26a:	e8 51 66 00 00       	call   108c0 <__stack_chk_fail>
    a26f:	90                   	nop

000000000000a270 <ema_do_commit_loop>:
    a270:	f3 0f 1e fa          	endbr64 
    a274:	41 55                	push   %r13
    a276:	41 54                	push   %r12
    a278:	55                   	push   %rbp
    a279:	53                   	push   %rbx
    a27a:	48 89 cb             	mov    %rcx,%rbx
    a27d:	48 83 ec 08          	sub    $0x8,%rsp
    a281:	48 8b 0f             	mov    (%rdi),%rcx
    a284:	48 39 f7             	cmp    %rsi,%rdi
    a287:	0f 84 9b 00 00 00    	je     a328 <ema_do_commit_loop+0xb8>
    a28d:	49 89 f5             	mov    %rsi,%r13
    a290:	48 89 d5             	mov    %rdx,%rbp
    a293:	48 89 f8             	mov    %rdi,%rax
    a296:	eb 26                	jmp    a2be <ema_do_commit_loop+0x4e>
    a298:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a29f:	00 
    a2a0:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a2a4:	75 27                	jne    a2cd <ema_do_commit_loop+0x5d>
    a2a6:	48 03 48 08          	add    0x8(%rax),%rcx
    a2aa:	48 8b 40 38          	mov    0x38(%rax),%rax
    a2ae:	48 89 ca             	mov    %rcx,%rdx
    a2b1:	49 39 c5             	cmp    %rax,%r13
    a2b4:	74 3a                	je     a2f0 <ema_do_commit_loop+0x80>
    a2b6:	48 8b 08             	mov    (%rax),%rcx
    a2b9:	48 39 d1             	cmp    %rdx,%rcx
    a2bc:	75 22                	jne    a2e0 <ema_do_commit_loop+0x70>
    a2be:	48 8b 50 18          	mov    0x18(%rax),%rdx
    a2c2:	48 f7 d2             	not    %rdx
    a2c5:	f7 c2 02 02 00 00    	test   $0x202,%edx
    a2cb:	74 d3                	je     a2a0 <ema_do_commit_loop+0x30>
    a2cd:	b8 0d 00 00 00       	mov    $0xd,%eax
    a2d2:	48 83 c4 08          	add    $0x8,%rsp
    a2d6:	5b                   	pop    %rbx
    a2d7:	5d                   	pop    %rbp
    a2d8:	41 5c                	pop    %r12
    a2da:	41 5d                	pop    %r13
    a2dc:	c3                   	ret    
    a2dd:	0f 1f 00             	nopl   (%rax)
    a2e0:	48 83 c4 08          	add    $0x8,%rsp
    a2e4:	b8 16 00 00 00       	mov    $0x16,%eax
    a2e9:	5b                   	pop    %rbx
    a2ea:	5d                   	pop    %rbp
    a2eb:	41 5c                	pop    %r12
    a2ed:	41 5d                	pop    %r13
    a2ef:	c3                   	ret    
    a2f0:	b8 16 00 00 00       	mov    $0x16,%eax
    a2f5:	48 39 d9             	cmp    %rbx,%rcx
    a2f8:	73 1c                	jae    a316 <ema_do_commit_loop+0xa6>
    a2fa:	eb d6                	jmp    a2d2 <ema_do_commit_loop+0x62>
    a2fc:	0f 1f 40 00          	nopl   0x0(%rax)
    a300:	48 89 da             	mov    %rbx,%rdx
    a303:	48 89 ee             	mov    %rbp,%rsi
    a306:	4c 8b 67 38          	mov    0x38(%rdi),%r12
    a30a:	e8 71 fe ff ff       	call   a180 <ema_do_commit>
    a30f:	85 c0                	test   %eax,%eax
    a311:	75 bf                	jne    a2d2 <ema_do_commit_loop+0x62>
    a313:	4c 89 e7             	mov    %r12,%rdi
    a316:	4c 39 ef             	cmp    %r13,%rdi
    a319:	75 e5                	jne    a300 <ema_do_commit_loop+0x90>
    a31b:	31 c0                	xor    %eax,%eax
    a31d:	48 83 c4 08          	add    $0x8,%rsp
    a321:	5b                   	pop    %rbx
    a322:	5d                   	pop    %rbp
    a323:	41 5c                	pop    %r12
    a325:	41 5d                	pop    %r13
    a327:	c3                   	ret    
    a328:	b8 16 00 00 00       	mov    $0x16,%eax
    a32d:	48 39 d9             	cmp    %rbx,%rcx
    a330:	72 a0                	jb     a2d2 <ema_do_commit_loop+0x62>
    a332:	31 c0                	xor    %eax,%eax
    a334:	eb e7                	jmp    a31d <ema_do_commit_loop+0xad>
    a336:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a33d:	00 00 00 

000000000000a340 <ema_change_to_tcs>:
    a340:	f3 0f 1e fa          	endbr64 
    a344:	55                   	push   %rbp
    a345:	48 89 e5             	mov    %rsp,%rbp
    a348:	41 56                	push   %r14
    a34a:	41 55                	push   %r13
    a34c:	41 54                	push   %r12
    a34e:	53                   	push   %rbx
    a34f:	48 89 fb             	mov    %rdi,%rbx
    a352:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a356:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a35d:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    a361:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    a365:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a36c:	00 00 
    a36e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a375:	00 
    a376:	31 c0                	xor    %eax,%eax
    a378:	45 89 ee             	mov    %r13d,%r14d
    a37b:	41 81 e6 00 ff 00 00 	and    $0xff00,%r14d
    a382:	48 85 ff             	test   %rdi,%rdi
    a385:	74 33                	je     a3ba <ema_change_to_tcs+0x7a>
    a387:	49 89 f4             	mov    %rsi,%r12
    a38a:	48 2b 33             	sub    (%rbx),%rsi
    a38d:	48 c1 ee 0c          	shr    $0xc,%rsi
    a391:	e8 8a ea ff ff       	call   8e20 <bit_array_test>
    a396:	84 c0                	test   %al,%al
    a398:	74 20                	je     a3ba <ema_change_to_tcs+0x7a>
    a39a:	41 81 fe 00 01 00 00 	cmp    $0x100,%r14d
    a3a1:	0f 84 e1 00 00 00    	je     a488 <ema_change_to_tcs+0x148>
    a3a7:	41 83 e5 07          	and    $0x7,%r13d
    a3ab:	41 83 fd 03          	cmp    $0x3,%r13d
    a3af:	75 09                	jne    a3ba <ema_change_to_tcs+0x7a>
    a3b1:	41 81 fe 00 02 00 00 	cmp    $0x200,%r14d
    a3b8:	74 2e                	je     a3e8 <ema_change_to_tcs+0xa8>
    a3ba:	b8 0d 00 00 00       	mov    $0xd,%eax
    a3bf:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a3c6:	00 
    a3c7:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a3ce:	00 00 
    a3d0:	0f 85 c4 00 00 00    	jne    a49a <ema_change_to_tcs+0x15a>
    a3d6:	48 8d 65 e0          	lea    -0x20(%rbp),%rsp
    a3da:	5b                   	pop    %rbx
    a3db:	41 5c                	pop    %r12
    a3dd:	41 5d                	pop    %r13
    a3df:	41 5e                	pop    %r14
    a3e1:	5d                   	pop    %rbp
    a3e2:	c3                   	ret    
    a3e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a3e8:	b9 03 01 00 00       	mov    $0x103,%ecx
    a3ed:	ba 03 02 00 00       	mov    $0x203,%edx
    a3f2:	be 00 10 00 00       	mov    $0x1000,%esi
    a3f7:	4c 89 e7             	mov    %r12,%rdi
    a3fa:	e8 71 b3 ff ff       	call   5770 <sgx_mm_modify_ocall>
    a3ff:	85 c0                	test   %eax,%eax
    a401:	0f 85 89 00 00 00    	jne    a490 <ema_change_to_tcs+0x150>
    a407:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a40b:	48 8d 7c 24 40       	lea    0x40(%rsp),%rdi
    a410:	4c 89 e6             	mov    %r12,%rsi
    a413:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a41a:	00 00 
    a41c:	48 c7 44 24 40 10 01 	movq   $0x110,0x40(%rsp)
    a423:	00 00 
    a425:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a42a:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a42f:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a434:	e8 86 7e 00 00       	call   122bf <do_eaccept>
    a439:	85 c0                	test   %eax,%eax
    a43b:	75 62                	jne    a49f <ema_change_to_tcs+0x15f>
    a43d:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a442:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    a449:	00 
    a44a:	4c 89 e6             	mov    %r12,%rsi
    a44d:	48 89 df             	mov    %rbx,%rdi
    a450:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a457:	00 00 
    a459:	e8 f2 f5 ff ff       	call   9a50 <ema_split_ex>
    a45e:	85 c0                	test   %eax,%eax
    a460:	0f 85 59 ff ff ff    	jne    a3bf <ema_change_to_tcs+0x7f>
    a466:	48 8b 4c 24 38       	mov    0x38(%rsp),%rcx
    a46b:	48 8b 51 18          	mov    0x18(%rcx),%rdx
    a46f:	48 81 e2 f8 00 ff ff 	and    $0xffffffffffff00f8,%rdx
    a476:	80 ce 01             	or     $0x1,%dh
    a479:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    a47d:	e9 3d ff ff ff       	jmp    a3bf <ema_change_to_tcs+0x7f>
    a482:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a488:	31 c0                	xor    %eax,%eax
    a48a:	e9 30 ff ff ff       	jmp    a3bf <ema_change_to_tcs+0x7f>
    a48f:	90                   	nop
    a490:	b8 0e 00 00 00       	mov    $0xe,%eax
    a495:	e9 25 ff ff ff       	jmp    a3bf <ema_change_to_tcs+0x7f>
    a49a:	e8 21 64 00 00       	call   108c0 <__stack_chk_fail>
    a49f:	e8 93 7e 00 00       	call   12337 <abort>
    a4a4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a4ab:	00 00 00 
    a4ae:	66 90                	xchg   %ax,%ax

000000000000a4b0 <ema_modify_permissions>:
    a4b0:	f3 0f 1e fa          	endbr64 
    a4b4:	55                   	push   %rbp
    a4b5:	48 89 e5             	mov    %rsp,%rbp
    a4b8:	41 57                	push   %r15
    a4ba:	41 56                	push   %r14
    a4bc:	41 55                	push   %r13
    a4be:	41 54                	push   %r12
    a4c0:	53                   	push   %rbx
    a4c1:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    a4c5:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    a4cc:	89 4c 24 20          	mov    %ecx,0x20(%rsp)
    a4d0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a4d7:	00 00 
    a4d9:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    a4e0:	00 
    a4e1:	48 8b 47 18          	mov    0x18(%rdi),%rax
    a4e5:	41 89 c4             	mov    %eax,%r12d
    a4e8:	41 83 e4 07          	and    $0x7,%r12d
    a4ec:	41 39 cc             	cmp    %ecx,%r12d
    a4ef:	0f 84 e2 00 00 00    	je     a5d7 <ema_modify_permissions+0x127>
    a4f5:	49 89 fd             	mov    %rdi,%r13
    a4f8:	89 c7                	mov    %eax,%edi
    a4fa:	49 89 f7             	mov    %rsi,%r15
    a4fd:	44 8b 74 24 20       	mov    0x20(%rsp),%r14d
    a502:	49 8b 5d 00          	mov    0x0(%r13),%rbx
    a506:	81 e7 00 ff 00 00    	and    $0xff00,%edi
    a50c:	44 89 f1             	mov    %r14d,%ecx
    a50f:	89 7c 24 0c          	mov    %edi,0xc(%rsp)
    a513:	48 39 f3             	cmp    %rsi,%rbx
    a516:	4c 0f 43 fb          	cmovae %rbx,%r15
    a51a:	49 03 5d 08          	add    0x8(%r13),%rbx
    a51e:	48 39 d3             	cmp    %rdx,%rbx
    a521:	48 0f 47 da          	cmova  %rdx,%rbx
    a525:	89 c2                	mov    %eax,%edx
    a527:	09 f9                	or     %edi,%ecx
    a529:	4c 89 ff             	mov    %r15,%rdi
    a52c:	81 e2 07 ff 00 00    	and    $0xff07,%edx
    a532:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    a537:	48 89 de             	mov    %rbx,%rsi
    a53a:	4c 29 fe             	sub    %r15,%rsi
    a53d:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    a542:	e8 29 b2 ff ff       	call   5770 <sgx_mm_modify_ocall>
    a547:	85 c0                	test   %eax,%eax
    a549:	0f 85 21 01 00 00    	jne    a670 <ema_modify_permissions+0x1c0>
    a54f:	44 89 f0             	mov    %r14d,%eax
    a552:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a556:	48 8d 54 24 40       	lea    0x40(%rsp),%rdx
    a55b:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    a562:	00 00 
    a564:	0d 20 02 00 00       	or     $0x220,%eax
    a569:	48 89 54 24 28       	mov    %rdx,0x28(%rsp)
    a56e:	48 98                	cltq   
    a570:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    a575:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    a57a:	44 89 f0             	mov    %r14d,%eax
    a57d:	45 09 e6             	or     %r12d,%r14d
    a580:	83 e0 06             	and    $0x6,%eax
    a583:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    a588:	89 44 24 24          	mov    %eax,0x24(%rsp)
    a58c:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    a591:	49 39 df             	cmp    %rbx,%r15
    a594:	72 76                	jb     a60c <ema_modify_permissions+0x15c>
    a596:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a59d:	00 00 00 
    a5a0:	49 8b 45 00          	mov    0x0(%r13),%rax
    a5a4:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    a5a9:	48 39 d0             	cmp    %rdx,%rax
    a5ac:	0f 82 ce 00 00 00    	jb     a680 <ema_modify_permissions+0x1d0>
    a5b2:	49 03 45 08          	add    0x8(%r13),%rax
    a5b6:	48 39 c3             	cmp    %rax,%rbx
    a5b9:	0f 82 f9 00 00 00    	jb     a6b8 <ema_modify_permissions+0x208>
    a5bf:	49 8b 45 18          	mov    0x18(%r13),%rax
    a5c3:	48 63 54 24 20       	movslq 0x20(%rsp),%rdx
    a5c8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    a5cc:	48 09 d0             	or     %rdx,%rax
    a5cf:	49 89 45 18          	mov    %rax,0x18(%r13)
    a5d3:	85 d2                	test   %edx,%edx
    a5d5:	74 79                	je     a650 <ema_modify_permissions+0x1a0>
    a5d7:	31 c0                	xor    %eax,%eax
    a5d9:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    a5e0:	00 
    a5e1:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a5e8:	00 00 
    a5ea:	0f 85 f8 00 00 00    	jne    a6e8 <ema_modify_permissions+0x238>
    a5f0:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    a5f4:	5b                   	pop    %rbx
    a5f5:	41 5c                	pop    %r12
    a5f7:	41 5d                	pop    %r13
    a5f9:	41 5e                	pop    %r14
    a5fb:	41 5f                	pop    %r15
    a5fd:	5d                   	pop    %rbp
    a5fe:	c3                   	ret    
    a5ff:	90                   	nop
    a600:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a607:	49 39 df             	cmp    %rbx,%r15
    a60a:	73 94                	jae    a5a0 <ema_modify_permissions+0xf0>
    a60c:	45 39 f4             	cmp    %r14d,%r12d
    a60f:	74 0d                	je     a61e <ema_modify_permissions+0x16e>
    a611:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a616:	4c 89 fe             	mov    %r15,%rsi
    a619:	e8 dd 7c 00 00       	call   122fb <do_emodpe>
    a61e:	83 7c 24 24 06       	cmpl   $0x6,0x24(%rsp)
    a623:	74 db                	je     a600 <ema_modify_permissions+0x150>
    a625:	48 8b 7c 24 28       	mov    0x28(%rsp),%rdi
    a62a:	4c 89 fe             	mov    %r15,%rsi
    a62d:	e8 8d 7c 00 00       	call   122bf <do_eaccept>
    a632:	85 c0                	test   %eax,%eax
    a634:	75 a3                	jne    a5d9 <ema_modify_permissions+0x129>
    a636:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    a63d:	49 39 df             	cmp    %rbx,%r15
    a640:	0f 83 5a ff ff ff    	jae    a5a0 <ema_modify_permissions+0xf0>
    a646:	45 39 f4             	cmp    %r14d,%r12d
    a649:	74 da                	je     a625 <ema_modify_permissions+0x175>
    a64b:	eb c4                	jmp    a611 <ema_modify_permissions+0x161>
    a64d:	0f 1f 00             	nopl   (%rax)
    a650:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
    a654:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    a659:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    a65e:	89 ca                	mov    %ecx,%edx
    a660:	e8 0b b1 ff ff       	call   5770 <sgx_mm_modify_ocall>
    a665:	85 c0                	test   %eax,%eax
    a667:	0f 84 6a ff ff ff    	je     a5d7 <ema_modify_permissions+0x127>
    a66d:	0f 1f 00             	nopl   (%rax)
    a670:	b8 0e 00 00 00       	mov    $0xe,%eax
    a675:	e9 5f ff ff ff       	jmp    a5d9 <ema_modify_permissions+0x129>
    a67a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a680:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    a685:	31 d2                	xor    %edx,%edx
    a687:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a68c:	4c 89 ef             	mov    %r13,%rdi
    a68f:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a696:	00 00 
    a698:	e8 23 f2 ff ff       	call   98c0 <ema_split>
    a69d:	85 c0                	test   %eax,%eax
    a69f:	0f 85 34 ff ff ff    	jne    a5d9 <ema_modify_permissions+0x129>
    a6a5:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a6aa:	49 8b 45 00          	mov    0x0(%r13),%rax
    a6ae:	e9 ff fe ff ff       	jmp    a5b2 <ema_modify_permissions+0x102>
    a6b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    a6b8:	4c 89 ef             	mov    %r13,%rdi
    a6bb:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    a6c0:	ba 01 00 00 00       	mov    $0x1,%edx
    a6c5:	48 89 de             	mov    %rbx,%rsi
    a6c8:	48 c7 44 24 38 00 00 	movq   $0x0,0x38(%rsp)
    a6cf:	00 00 
    a6d1:	e8 ea f1 ff ff       	call   98c0 <ema_split>
    a6d6:	4c 8b 6c 24 38       	mov    0x38(%rsp),%r13
    a6db:	85 c0                	test   %eax,%eax
    a6dd:	0f 84 dc fe ff ff    	je     a5bf <ema_modify_permissions+0x10f>
    a6e3:	e9 f1 fe ff ff       	jmp    a5d9 <ema_modify_permissions+0x129>
    a6e8:	e8 d3 61 00 00       	call   108c0 <__stack_chk_fail>
    a6ed:	0f 1f 00             	nopl   (%rax)

000000000000a6f0 <ema_do_uncommit>:
    a6f0:	f3 0f 1e fa          	endbr64 
    a6f4:	41 55                	push   %r13
    a6f6:	49 89 f5             	mov    %rsi,%r13
    a6f9:	41 54                	push   %r12
    a6fb:	53                   	push   %rbx
    a6fc:	48 83 ec 10          	sub    $0x10,%rsp
    a700:	48 8b 07             	mov    (%rdi),%rax
    a703:	44 8b 67 18          	mov    0x18(%rdi),%r12d
    a707:	48 39 f0             	cmp    %rsi,%rax
    a70a:	4c 0f 43 e8          	cmovae %rax,%r13
    a70e:	48 03 47 08          	add    0x8(%rdi),%rax
    a712:	48 39 d0             	cmp    %rdx,%rax
    a715:	48 0f 47 c2          	cmova  %rdx,%rax
    a719:	48 89 c3             	mov    %rax,%rbx
    a71c:	41 83 e4 07          	and    $0x7,%r12d
    a720:	74 1e                	je     a740 <ema_do_uncommit+0x50>
    a722:	48 83 c4 10          	add    $0x10,%rsp
    a726:	44 89 e1             	mov    %r12d,%ecx
    a729:	48 89 da             	mov    %rbx,%rdx
    a72c:	4c 89 ee             	mov    %r13,%rsi
    a72f:	5b                   	pop    %rbx
    a730:	41 5c                	pop    %r12
    a732:	41 5d                	pop    %r13
    a734:	e9 37 ed ff ff       	jmp    9470 <ema_do_uncommit_real>
    a739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a740:	b9 01 00 00 00       	mov    $0x1,%ecx
    a745:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    a74a:	e8 61 fd ff ff       	call   a4b0 <ema_modify_permissions>
    a74f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    a754:	eb cc                	jmp    a722 <ema_do_uncommit+0x32>
    a756:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a75d:	00 00 00 

000000000000a760 <ema_do_dealloc>:
    a760:	f3 0f 1e fa          	endbr64 
    a764:	41 54                	push   %r12
    a766:	49 89 f4             	mov    %rsi,%r12
    a769:	55                   	push   %rbp
    a76a:	53                   	push   %rbx
    a76b:	48 89 fb             	mov    %rdi,%rbx
    a76e:	48 83 ec 10          	sub    $0x10,%rsp
    a772:	48 8b 6f 08          	mov    0x8(%rdi),%rbp
    a776:	48 8b 4f 18          	mov    0x18(%rdi),%rcx
    a77a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    a781:	00 00 
    a783:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    a788:	48 8b 07             	mov    (%rdi),%rax
    a78b:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a792:	00 
    a793:	48 39 f0             	cmp    %rsi,%rax
    a796:	4c 0f 43 e0          	cmovae %rax,%r12
    a79a:	48 01 c5             	add    %rax,%rbp
    a79d:	48 39 d5             	cmp    %rdx,%rbp
    a7a0:	48 0f 47 ea          	cmova  %rdx,%rbp
    a7a4:	f6 47 10 01          	testb  $0x1,0x10(%rdi)
    a7a8:	75 1c                	jne    a7c6 <ema_do_dealloc+0x66>
    a7aa:	83 e1 07             	and    $0x7,%ecx
    a7ad:	74 71                	je     a820 <ema_do_dealloc+0xc0>
    a7af:	31 c9                	xor    %ecx,%ecx
    a7b1:	48 89 ea             	mov    %rbp,%rdx
    a7b4:	4c 89 e6             	mov    %r12,%rsi
    a7b7:	48 89 df             	mov    %rbx,%rdi
    a7ba:	e8 b1 ec ff ff       	call   9470 <ema_do_uncommit_real>
    a7bf:	85 c0                	test   %eax,%eax
    a7c1:	75 3e                	jne    a801 <ema_do_dealloc+0xa1>
    a7c3:	48 8b 03             	mov    (%rbx),%rax
    a7c6:	4c 39 e0             	cmp    %r12,%rax
    a7c9:	72 65                	jb     a830 <ema_do_dealloc+0xd0>
    a7cb:	48 03 43 08          	add    0x8(%rbx),%rax
    a7cf:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    a7d6:	00 
    a7d7:	48 39 c5             	cmp    %rax,%rbp
    a7da:	73 1b                	jae    a7f7 <ema_do_dealloc+0x97>
    a7dc:	48 89 e1             	mov    %rsp,%rcx
    a7df:	ba 01 00 00 00       	mov    $0x1,%edx
    a7e4:	48 89 ee             	mov    %rbp,%rsi
    a7e7:	48 89 df             	mov    %rbx,%rdi
    a7ea:	e8 d1 f0 ff ff       	call   98c0 <ema_split>
    a7ef:	85 c0                	test   %eax,%eax
    a7f1:	75 0e                	jne    a801 <ema_do_dealloc+0xa1>
    a7f3:	48 8b 1c 24          	mov    (%rsp),%rbx
    a7f7:	48 89 df             	mov    %rbx,%rdi
    a7fa:	e8 11 f8 ff ff       	call   a010 <ema_destroy>
    a7ff:	31 c0                	xor    %eax,%eax
    a801:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    a806:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    a80d:	00 00 
    a80f:	75 3f                	jne    a850 <ema_do_dealloc+0xf0>
    a811:	48 83 c4 10          	add    $0x10,%rsp
    a815:	5b                   	pop    %rbx
    a816:	5d                   	pop    %rbp
    a817:	41 5c                	pop    %r12
    a819:	c3                   	ret    
    a81a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a820:	b9 01 00 00 00       	mov    $0x1,%ecx
    a825:	e8 86 fc ff ff       	call   a4b0 <ema_modify_permissions>
    a82a:	eb 83                	jmp    a7af <ema_do_dealloc+0x4f>
    a82c:	0f 1f 40 00          	nopl   0x0(%rax)
    a830:	31 d2                	xor    %edx,%edx
    a832:	48 89 e1             	mov    %rsp,%rcx
    a835:	4c 89 e6             	mov    %r12,%rsi
    a838:	48 89 df             	mov    %rbx,%rdi
    a83b:	e8 80 f0 ff ff       	call   98c0 <ema_split>
    a840:	85 c0                	test   %eax,%eax
    a842:	75 bd                	jne    a801 <ema_do_dealloc+0xa1>
    a844:	48 8b 1c 24          	mov    (%rsp),%rbx
    a848:	48 8b 03             	mov    (%rbx),%rax
    a84b:	e9 7b ff ff ff       	jmp    a7cb <ema_do_dealloc+0x6b>
    a850:	e8 6b 60 00 00       	call   108c0 <__stack_chk_fail>
    a855:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    a85c:	00 00 00 
    a85f:	90                   	nop

000000000000a860 <ema_do_dealloc_loop>:
    a860:	f3 0f 1e fa          	endbr64 
    a864:	41 55                	push   %r13
    a866:	49 89 d5             	mov    %rdx,%r13
    a869:	41 54                	push   %r12
    a86b:	49 89 cc             	mov    %rcx,%r12
    a86e:	55                   	push   %rbp
    a86f:	48 89 f5             	mov    %rsi,%rbp
    a872:	53                   	push   %rbx
    a873:	48 83 ec 08          	sub    $0x8,%rsp
    a877:	eb 1d                	jmp    a896 <ema_do_dealloc_loop+0x36>
    a879:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    a880:	4c 89 e2             	mov    %r12,%rdx
    a883:	4c 89 ee             	mov    %r13,%rsi
    a886:	48 8b 5f 38          	mov    0x38(%rdi),%rbx
    a88a:	e8 d1 fe ff ff       	call   a760 <ema_do_dealloc>
    a88f:	85 c0                	test   %eax,%eax
    a891:	75 0a                	jne    a89d <ema_do_dealloc_loop+0x3d>
    a893:	48 89 df             	mov    %rbx,%rdi
    a896:	48 39 ef             	cmp    %rbp,%rdi
    a899:	75 e5                	jne    a880 <ema_do_dealloc_loop+0x20>
    a89b:	31 c0                	xor    %eax,%eax
    a89d:	48 83 c4 08          	add    $0x8,%rsp
    a8a1:	5b                   	pop    %rbx
    a8a2:	5d                   	pop    %rbp
    a8a3:	41 5c                	pop    %r12
    a8a5:	41 5d                	pop    %r13
    a8a7:	c3                   	ret    
    a8a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    a8af:	00 

000000000000a8b0 <ema_do_uncommit_loop>:
    a8b0:	f3 0f 1e fa          	endbr64 
    a8b4:	41 57                	push   %r15
    a8b6:	41 56                	push   %r14
    a8b8:	41 55                	push   %r13
    a8ba:	41 54                	push   %r12
    a8bc:	49 89 d4             	mov    %rdx,%r12
    a8bf:	55                   	push   %rbp
    a8c0:	48 89 cd             	mov    %rcx,%rbp
    a8c3:	53                   	push   %rbx
    a8c4:	48 83 ec 18          	sub    $0x18,%rsp
    a8c8:	48 8b 17             	mov    (%rdi),%rdx
    a8cb:	48 39 f7             	cmp    %rsi,%rdi
    a8ce:	0f 84 d9 00 00 00    	je     a9ad <ema_do_uncommit_loop+0xfd>
    a8d4:	49 89 ff             	mov    %rdi,%r15
    a8d7:	48 89 f3             	mov    %rsi,%rbx
    a8da:	48 89 f8             	mov    %rdi,%rax
    a8dd:	0f 1f 00             	nopl   (%rax)
    a8e0:	f6 40 10 01          	testb  $0x1,0x10(%rax)
    a8e4:	75 32                	jne    a918 <ema_do_uncommit_loop+0x68>
    a8e6:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a8ea:	48 8b 40 38          	mov    0x38(%rax),%rax
    a8ee:	48 01 d1             	add    %rdx,%rcx
    a8f1:	48 39 c3             	cmp    %rax,%rbx
    a8f4:	74 3a                	je     a930 <ema_do_uncommit_loop+0x80>
    a8f6:	48 8b 10             	mov    (%rax),%rdx
    a8f9:	48 39 ca             	cmp    %rcx,%rdx
    a8fc:	74 e2                	je     a8e0 <ema_do_uncommit_loop+0x30>
    a8fe:	b8 16 00 00 00       	mov    $0x16,%eax
    a903:	48 83 c4 18          	add    $0x18,%rsp
    a907:	5b                   	pop    %rbx
    a908:	5d                   	pop    %rbp
    a909:	41 5c                	pop    %r12
    a90b:	41 5d                	pop    %r13
    a90d:	41 5e                	pop    %r14
    a90f:	41 5f                	pop    %r15
    a911:	c3                   	ret    
    a912:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    a918:	48 83 c4 18          	add    $0x18,%rsp
    a91c:	b8 0d 00 00 00       	mov    $0xd,%eax
    a921:	5b                   	pop    %rbx
    a922:	5d                   	pop    %rbp
    a923:	41 5c                	pop    %r12
    a925:	41 5d                	pop    %r13
    a927:	41 5e                	pop    %r14
    a929:	41 5f                	pop    %r15
    a92b:	c3                   	ret    
    a92c:	0f 1f 40 00          	nopl   0x0(%rax)
    a930:	b8 16 00 00 00       	mov    $0x16,%eax
    a935:	48 39 e9             	cmp    %rbp,%rcx
    a938:	73 1e                	jae    a958 <ema_do_uncommit_loop+0xa8>
    a93a:	eb c7                	jmp    a903 <ema_do_uncommit_loop+0x53>
    a93c:	0f 1f 40 00          	nopl   0x0(%rax)
    a940:	44 89 c1             	mov    %r8d,%ecx
    a943:	4c 89 f2             	mov    %r14,%rdx
    a946:	4c 89 ce             	mov    %r9,%rsi
    a949:	4c 89 ff             	mov    %r15,%rdi
    a94c:	e8 1f eb ff ff       	call   9470 <ema_do_uncommit_real>
    a951:	85 c0                	test   %eax,%eax
    a953:	75 ae                	jne    a903 <ema_do_uncommit_loop+0x53>
    a955:	4d 89 ef             	mov    %r13,%r15
    a958:	49 39 df             	cmp    %rbx,%r15
    a95b:	74 5e                	je     a9bb <ema_do_uncommit_loop+0x10b>
    a95d:	49 8b 07             	mov    (%r15),%rax
    a960:	45 8b 47 18          	mov    0x18(%r15),%r8d
    a964:	4d 8b 6f 38          	mov    0x38(%r15),%r13
    a968:	49 39 c4             	cmp    %rax,%r12
    a96b:	49 89 c1             	mov    %rax,%r9
    a96e:	4d 0f 43 cc          	cmovae %r12,%r9
    a972:	49 03 47 08          	add    0x8(%r15),%rax
    a976:	48 39 e8             	cmp    %rbp,%rax
    a979:	48 0f 47 c5          	cmova  %rbp,%rax
    a97d:	49 89 c6             	mov    %rax,%r14
    a980:	41 83 e0 07          	and    $0x7,%r8d
    a984:	75 ba                	jne    a940 <ema_do_uncommit_loop+0x90>
    a986:	b9 01 00 00 00       	mov    $0x1,%ecx
    a98b:	48 89 ea             	mov    %rbp,%rdx
    a98e:	4c 89 e6             	mov    %r12,%rsi
    a991:	4c 89 ff             	mov    %r15,%rdi
    a994:	44 89 44 24 0c       	mov    %r8d,0xc(%rsp)
    a999:	4c 89 0c 24          	mov    %r9,(%rsp)
    a99d:	e8 0e fb ff ff       	call   a4b0 <ema_modify_permissions>
    a9a2:	44 8b 44 24 0c       	mov    0xc(%rsp),%r8d
    a9a7:	4c 8b 0c 24          	mov    (%rsp),%r9
    a9ab:	eb 93                	jmp    a940 <ema_do_uncommit_loop+0x90>
    a9ad:	b8 16 00 00 00       	mov    $0x16,%eax
    a9b2:	48 39 ca             	cmp    %rcx,%rdx
    a9b5:	0f 82 48 ff ff ff    	jb     a903 <ema_do_uncommit_loop+0x53>
    a9bb:	48 83 c4 18          	add    $0x18,%rsp
    a9bf:	31 c0                	xor    %eax,%eax
    a9c1:	5b                   	pop    %rbx
    a9c2:	5d                   	pop    %rbp
    a9c3:	41 5c                	pop    %r12
    a9c5:	41 5d                	pop    %r13
    a9c7:	41 5e                	pop    %r14
    a9c9:	41 5f                	pop    %r15
    a9cb:	c3                   	ret    
    a9cc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000a9d0 <ema_modify_permissions_loop>:
    a9d0:	f3 0f 1e fa          	endbr64 
    a9d4:	41 57                	push   %r15
    a9d6:	41 56                	push   %r14
    a9d8:	41 55                	push   %r13
    a9da:	41 54                	push   %r12
    a9dc:	55                   	push   %rbp
    a9dd:	48 89 d5             	mov    %rdx,%rbp
    a9e0:	53                   	push   %rbx
    a9e1:	48 89 cb             	mov    %rcx,%rbx
    a9e4:	48 83 ec 08          	sub    $0x8,%rsp
    a9e8:	48 8b 17             	mov    (%rdi),%rdx
    a9eb:	48 39 f7             	cmp    %rsi,%rdi
    a9ee:	0f 84 de 00 00 00    	je     aad2 <ema_modify_permissions_loop+0x102>
    a9f4:	49 89 fe             	mov    %rdi,%r14
    a9f7:	49 89 f4             	mov    %rsi,%r12
    a9fa:	45 89 c5             	mov    %r8d,%r13d
    a9fd:	49 89 ff             	mov    %rdi,%r15
    aa00:	41 f6 47 19 02       	testb  $0x2,0x19(%r15)
    aa05:	74 79                	je     aa80 <ema_modify_permissions_loop+0xb0>
    aa07:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    aa0c:	75 72                	jne    aa80 <ema_modify_permissions_loop+0xb0>
    aa0e:	48 39 d5             	cmp    %rdx,%rbp
    aa11:	48 89 d6             	mov    %rdx,%rsi
    aa14:	49 8b 47 08          	mov    0x8(%r15),%rax
    aa18:	49 8b 7f 20          	mov    0x20(%r15),%rdi
    aa1c:	48 0f 43 f5          	cmovae %rbp,%rsi
    aa20:	48 01 d0             	add    %rdx,%rax
    aa23:	48 29 d6             	sub    %rdx,%rsi
    aa26:	48 c1 ee 0c          	shr    $0xc,%rsi
    aa2a:	48 39 d8             	cmp    %rbx,%rax
    aa2d:	48 0f 47 c3          	cmova  %rbx,%rax
    aa31:	48 29 d0             	sub    %rdx,%rax
    aa34:	48 c1 e8 0c          	shr    $0xc,%rax
    aa38:	48 85 ff             	test   %rdi,%rdi
    aa3b:	74 27                	je     aa64 <ema_modify_permissions_loop+0x94>
    aa3d:	48 29 f0             	sub    %rsi,%rax
    aa40:	48 89 c2             	mov    %rax,%rdx
    aa43:	e8 28 e4 ff ff       	call   8e70 <bit_array_test_range>
    aa48:	84 c0                	test   %al,%al
    aa4a:	74 18                	je     aa64 <ema_modify_permissions_loop+0x94>
    aa4c:	49 8b 47 08          	mov    0x8(%r15),%rax
    aa50:	49 03 07             	add    (%r15),%rax
    aa53:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    aa57:	4d 39 fc             	cmp    %r15,%r12
    aa5a:	74 3c                	je     aa98 <ema_modify_permissions_loop+0xc8>
    aa5c:	49 8b 17             	mov    (%r15),%rdx
    aa5f:	48 39 d0             	cmp    %rdx,%rax
    aa62:	74 9c                	je     aa00 <ema_modify_permissions_loop+0x30>
    aa64:	b8 16 00 00 00       	mov    $0x16,%eax
    aa69:	48 83 c4 08          	add    $0x8,%rsp
    aa6d:	5b                   	pop    %rbx
    aa6e:	5d                   	pop    %rbp
    aa6f:	41 5c                	pop    %r12
    aa71:	41 5d                	pop    %r13
    aa73:	41 5e                	pop    %r14
    aa75:	41 5f                	pop    %r15
    aa77:	c3                   	ret    
    aa78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    aa7f:	00 
    aa80:	48 83 c4 08          	add    $0x8,%rsp
    aa84:	b8 0d 00 00 00       	mov    $0xd,%eax
    aa89:	5b                   	pop    %rbx
    aa8a:	5d                   	pop    %rbp
    aa8b:	41 5c                	pop    %r12
    aa8d:	41 5d                	pop    %r13
    aa8f:	41 5e                	pop    %r14
    aa91:	41 5f                	pop    %r15
    aa93:	c3                   	ret    
    aa94:	0f 1f 40 00          	nopl   0x0(%rax)
    aa98:	48 39 d8             	cmp    %rbx,%rax
    aa9b:	73 1f                	jae    aabc <ema_modify_permissions_loop+0xec>
    aa9d:	eb c5                	jmp    aa64 <ema_modify_permissions_loop+0x94>
    aa9f:	90                   	nop
    aaa0:	44 89 e9             	mov    %r13d,%ecx
    aaa3:	48 89 da             	mov    %rbx,%rdx
    aaa6:	48 89 ee             	mov    %rbp,%rsi
    aaa9:	4c 89 f7             	mov    %r14,%rdi
    aaac:	4d 8b 7e 38          	mov    0x38(%r14),%r15
    aab0:	e8 fb f9 ff ff       	call   a4b0 <ema_modify_permissions>
    aab5:	85 c0                	test   %eax,%eax
    aab7:	75 b0                	jne    aa69 <ema_modify_permissions_loop+0x99>
    aab9:	4d 89 fe             	mov    %r15,%r14
    aabc:	4d 39 f4             	cmp    %r14,%r12
    aabf:	75 df                	jne    aaa0 <ema_modify_permissions_loop+0xd0>
    aac1:	31 c0                	xor    %eax,%eax
    aac3:	48 83 c4 08          	add    $0x8,%rsp
    aac7:	5b                   	pop    %rbx
    aac8:	5d                   	pop    %rbp
    aac9:	41 5c                	pop    %r12
    aacb:	41 5d                	pop    %r13
    aacd:	41 5e                	pop    %r14
    aacf:	41 5f                	pop    %r15
    aad1:	c3                   	ret    
    aad2:	48 39 ca             	cmp    %rcx,%rdx
    aad5:	72 8d                	jb     aa64 <ema_modify_permissions_loop+0x94>
    aad7:	31 c0                	xor    %eax,%eax
    aad9:	eb e8                	jmp    aac3 <ema_modify_permissions_loop+0xf3>
    aadb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000aae0 <ema_do_commit_data>:
    aae0:	f3 0f 1e fa          	endbr64 
    aae4:	55                   	push   %rbp
    aae5:	41 81 c8 00 02 00 00 	or     $0x200,%r8d
    aaec:	66 0f ef c0          	pxor   %xmm0,%xmm0
    aaf0:	4d 63 c0             	movslq %r8d,%r8
    aaf3:	48 89 e5             	mov    %rsp,%rbp
    aaf6:	41 57                	push   %r15
    aaf8:	41 56                	push   %r14
    aafa:	49 89 f6             	mov    %rsi,%r14
    aafd:	41 55                	push   %r13
    aaff:	41 54                	push   %r12
    ab01:	49 89 d4             	mov    %rdx,%r12
    ab04:	53                   	push   %rbx
    ab05:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    ab09:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    ab10:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    ab15:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    ab1c:	00 00 
    ab1e:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    ab25:	00 
    ab26:	31 c0                	xor    %eax,%eax
    ab28:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    ab2d:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    ab34:	00 00 
    ab36:	0f 11 44 24 48       	movups %xmm0,0x48(%rsp)
    ab3b:	0f 11 44 24 58       	movups %xmm0,0x58(%rsp)
    ab40:	0f 11 44 24 68       	movups %xmm0,0x68(%rsp)
    ab45:	48 39 d6             	cmp    %rdx,%rsi
    ab48:	73 46                	jae    ab90 <ema_do_commit_data+0xb0>
    ab4a:	48 29 f1             	sub    %rsi,%rcx
    ab4d:	49 89 f7             	mov    %rsi,%r15
    ab50:	4c 8d 6c 24 40       	lea    0x40(%rsp),%r13
    ab55:	48 89 cb             	mov    %rcx,%rbx
    ab58:	eb 12                	jmp    ab6c <ema_do_commit_data+0x8c>
    ab5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ab60:	49 81 c7 00 10 00 00 	add    $0x1000,%r15
    ab67:	4d 39 e7             	cmp    %r12,%r15
    ab6a:	73 24                	jae    ab90 <ema_do_commit_data+0xb0>
    ab6c:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    ab70:	4c 89 fe             	mov    %r15,%rsi
    ab73:	4c 89 ef             	mov    %r13,%rdi
    ab76:	e8 62 77 00 00       	call   122dd <do_eacceptcopy>
    ab7b:	85 c0                	test   %eax,%eax
    ab7d:	74 e1                	je     ab60 <ema_do_commit_data+0x80>
    ab7f:	b8 0e 00 00 00       	mov    $0xe,%eax
    ab84:	eb 1a                	jmp    aba0 <ema_do_commit_data+0xc0>
    ab86:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    ab8d:	00 00 00 
    ab90:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
    ab95:	4c 89 e2             	mov    %r12,%rdx
    ab98:	4c 89 f6             	mov    %r14,%rsi
    ab9b:	e8 70 eb ff ff       	call   9710 <ema_set_eaccept>
    aba0:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
    aba7:	00 
    aba8:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    abaf:	00 00 
    abb1:	75 0f                	jne    abc2 <ema_do_commit_data+0xe2>
    abb3:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    abb7:	5b                   	pop    %rbx
    abb8:	41 5c                	pop    %r12
    abba:	41 5d                	pop    %r13
    abbc:	41 5e                	pop    %r14
    abbe:	41 5f                	pop    %r15
    abc0:	5d                   	pop    %rbp
    abc1:	c3                   	ret    
    abc2:	e8 f9 5c 00 00       	call   108c0 <__stack_chk_fail>
    abc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    abce:	00 00 

000000000000abd0 <ema_do_commit_data_loop>:
    abd0:	f3 0f 1e fa          	endbr64 
    abd4:	41 57                	push   %r15
    abd6:	41 56                	push   %r14
    abd8:	41 55                	push   %r13
    abda:	41 54                	push   %r12
    abdc:	55                   	push   %rbp
    abdd:	53                   	push   %rbx
    abde:	48 89 cb             	mov    %rcx,%rbx
    abe1:	48 83 ec 18          	sub    $0x18,%rsp
    abe5:	48 8b 0f             	mov    (%rdi),%rcx
    abe8:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    abed:	44 89 4c 24 04       	mov    %r9d,0x4(%rsp)
    abf2:	48 39 f7             	cmp    %rsi,%rdi
    abf5:	0f 84 a2 00 00 00    	je     ac9d <ema_do_commit_data_loop+0xcd>
    abfb:	48 89 fd             	mov    %rdi,%rbp
    abfe:	49 89 f4             	mov    %rsi,%r12
    ac01:	49 89 d7             	mov    %rdx,%r15
    ac04:	49 89 fd             	mov    %rdi,%r13
    ac07:	eb 72                	jmp    ac7b <ema_do_commit_data_loop+0xab>
    ac09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ac10:	41 8b 45 10          	mov    0x10(%r13),%eax
    ac14:	a8 01                	test   $0x1,%al
    ac16:	75 71                	jne    ac89 <ema_do_commit_data_loop+0xb9>
    ac18:	a8 04                	test   $0x4,%al
    ac1a:	0f 84 86 00 00 00    	je     aca6 <ema_do_commit_data_loop+0xd6>
    ac20:	49 8b 7d 20          	mov    0x20(%r13),%rdi
    ac24:	49 8b 45 08          	mov    0x8(%r13),%rax
    ac28:	48 85 ff             	test   %rdi,%rdi
    ac2b:	74 39                	je     ac66 <ema_do_commit_data_loop+0x96>
    ac2d:	49 39 cf             	cmp    %rcx,%r15
    ac30:	48 89 ce             	mov    %rcx,%rsi
    ac33:	49 0f 43 f7          	cmovae %r15,%rsi
    ac37:	48 01 c8             	add    %rcx,%rax
    ac3a:	48 29 ce             	sub    %rcx,%rsi
    ac3d:	48 c1 ee 0c          	shr    $0xc,%rsi
    ac41:	48 39 d8             	cmp    %rbx,%rax
    ac44:	48 0f 47 c3          	cmova  %rbx,%rax
    ac48:	48 89 c2             	mov    %rax,%rdx
    ac4b:	48 29 ca             	sub    %rcx,%rdx
    ac4e:	48 c1 ea 0c          	shr    $0xc,%rdx
    ac52:	48 29 f2             	sub    %rsi,%rdx
    ac55:	e8 d6 e2 ff ff       	call   8f30 <bit_array_test_range_any>
    ac5a:	84 c0                	test   %al,%al
    ac5c:	75 2b                	jne    ac89 <ema_do_commit_data_loop+0xb9>
    ac5e:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ac62:	49 8b 45 08          	mov    0x8(%r13),%rax
    ac66:	4d 8b 6d 38          	mov    0x38(%r13),%r13
    ac6a:	48 01 c8             	add    %rcx,%rax
    ac6d:	4d 39 ec             	cmp    %r13,%r12
    ac70:	74 4e                	je     acc0 <ema_do_commit_data_loop+0xf0>
    ac72:	49 8b 4d 00          	mov    0x0(%r13),%rcx
    ac76:	48 39 c8             	cmp    %rcx,%rax
    ac79:	75 2b                	jne    aca6 <ema_do_commit_data_loop+0xd6>
    ac7b:	49 8b 45 18          	mov    0x18(%r13),%rax
    ac7f:	48 f7 d0             	not    %rax
    ac82:	a9 02 02 00 00       	test   $0x202,%eax
    ac87:	74 87                	je     ac10 <ema_do_commit_data_loop+0x40>
    ac89:	b8 0d 00 00 00       	mov    $0xd,%eax
    ac8e:	48 83 c4 18          	add    $0x18,%rsp
    ac92:	5b                   	pop    %rbx
    ac93:	5d                   	pop    %rbp
    ac94:	41 5c                	pop    %r12
    ac96:	41 5d                	pop    %r13
    ac98:	41 5e                	pop    %r14
    ac9a:	41 5f                	pop    %r15
    ac9c:	c3                   	ret    
    ac9d:	48 39 d9             	cmp    %rbx,%rcx
    aca0:	0f 83 98 00 00 00    	jae    ad3e <ema_do_commit_data_loop+0x16e>
    aca6:	48 83 c4 18          	add    $0x18,%rsp
    acaa:	b8 16 00 00 00       	mov    $0x16,%eax
    acaf:	5b                   	pop    %rbx
    acb0:	5d                   	pop    %rbp
    acb1:	41 5c                	pop    %r12
    acb3:	41 5d                	pop    %r13
    acb5:	41 5e                	pop    %r14
    acb7:	41 5f                	pop    %r15
    acb9:	c3                   	ret    
    acba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    acc0:	48 39 d8             	cmp    %rbx,%rax
    acc3:	72 e1                	jb     aca6 <ema_do_commit_data_loop+0xd6>
    acc5:	49 89 ee             	mov    %rbp,%r14
    acc8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    accf:	00 
    acd0:	49 8b 16             	mov    (%r14),%rdx
    acd3:	4c 89 fe             	mov    %r15,%rsi
    acd6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    acdb:	4c 89 f7             	mov    %r14,%rdi
    acde:	44 8b 44 24 04       	mov    0x4(%rsp),%r8d
    ace3:	4c 39 fa             	cmp    %r15,%rdx
    ace6:	48 0f 43 f2          	cmovae %rdx,%rsi
    acea:	49 03 56 08          	add    0x8(%r14),%rdx
    acee:	48 89 f1             	mov    %rsi,%rcx
    acf1:	4c 29 f9             	sub    %r15,%rcx
    acf4:	48 01 c1             	add    %rax,%rcx
    acf7:	48 39 da             	cmp    %rbx,%rdx
    acfa:	48 0f 47 d3          	cmova  %rbx,%rdx
    acfe:	e8 dd fd ff ff       	call   aae0 <ema_do_commit_data>
    ad03:	85 c0                	test   %eax,%eax
    ad05:	75 87                	jne    ac8e <ema_do_commit_data_loop+0xbe>
    ad07:	4d 8b 76 38          	mov    0x38(%r14),%r14
    ad0b:	4d 39 ee             	cmp    %r13,%r14
    ad0e:	75 c0                	jne    acd0 <ema_do_commit_data_loop+0x100>
    ad10:	49 39 ec             	cmp    %rbp,%r12
    ad13:	74 29                	je     ad3e <ema_do_commit_data_loop+0x16e>
    ad15:	0f 1f 00             	nopl   (%rax)
    ad18:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    ad1c:	48 89 da             	mov    %rbx,%rdx
    ad1f:	4c 89 fe             	mov    %r15,%rsi
    ad22:	48 89 ef             	mov    %rbp,%rdi
    ad25:	4c 8b 75 38          	mov    0x38(%rbp),%r14
    ad29:	e8 82 f7 ff ff       	call   a4b0 <ema_modify_permissions>
    ad2e:	85 c0                	test   %eax,%eax
    ad30:	0f 85 58 ff ff ff    	jne    ac8e <ema_do_commit_data_loop+0xbe>
    ad36:	4c 89 f5             	mov    %r14,%rbp
    ad39:	49 39 ec             	cmp    %rbp,%r12
    ad3c:	75 da                	jne    ad18 <ema_do_commit_data_loop+0x148>
    ad3e:	48 83 c4 18          	add    $0x18,%rsp
    ad42:	31 c0                	xor    %eax,%eax
    ad44:	5b                   	pop    %rbx
    ad45:	5d                   	pop    %rbp
    ad46:	41 5c                	pop    %r12
    ad48:	41 5d                	pop    %r13
    ad4a:	41 5e                	pop    %r14
    ad4c:	41 5f                	pop    %r15
    ad4e:	c3                   	ret    
    ad4f:	90                   	nop

000000000000ad50 <ema_realloc_from_reserve_range>:
    ad50:	f3 0f 1e fa          	endbr64 
    ad54:	41 57                	push   %r15
    ad56:	41 56                	push   %r14
    ad58:	41 55                	push   %r13
    ad5a:	49 89 d5             	mov    %rdx,%r13
    ad5d:	41 54                	push   %r12
    ad5f:	49 89 cc             	mov    %rcx,%r12
    ad62:	55                   	push   %rbp
    ad63:	48 89 fd             	mov    %rdi,%rbp
    ad66:	53                   	push   %rbx
    ad67:	48 89 f3             	mov    %rsi,%rbx
    ad6a:	48 83 ec 28          	sub    $0x28,%rsp
    ad6e:	4c 8b 37             	mov    (%rdi),%r14
    ad71:	48 89 7c 24 18       	mov    %rdi,0x18(%rsp)
    ad76:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    ad7b:	44 89 44 24 04       	mov    %r8d,0x4(%rsp)
    ad80:	4c 89 4c 24 08       	mov    %r9,0x8(%rsp)
    ad85:	48 39 f7             	cmp    %rsi,%rdi
    ad88:	74 4a                	je     add4 <ema_realloc_from_reserve_range+0x84>
    ad8a:	49 89 ff             	mov    %rdi,%r15
    ad8d:	eb 1a                	jmp    ada9 <ema_realloc_from_reserve_range+0x59>
    ad8f:	90                   	nop
    ad90:	4d 39 37             	cmp    %r14,(%r15)
    ad93:	75 20                	jne    adb5 <ema_realloc_from_reserve_range+0x65>
    ad95:	41 f6 47 10 01       	testb  $0x1,0x10(%r15)
    ad9a:	74 19                	je     adb5 <ema_realloc_from_reserve_range+0x65>
    ad9c:	4d 03 77 08          	add    0x8(%r15),%r14
    ada0:	4d 8b 7f 38          	mov    0x38(%r15),%r15
    ada4:	49 39 df             	cmp    %rbx,%r15
    ada7:	74 27                	je     add0 <ema_realloc_from_reserve_range+0x80>
    ada9:	4c 89 ff             	mov    %r15,%rdi
    adac:	e8 7f 07 00 00       	call   b530 <can_erealloc>
    adb1:	85 c0                	test   %eax,%eax
    adb3:	75 db                	jne    ad90 <ema_realloc_from_reserve_range+0x40>
    adb5:	48 83 c4 28          	add    $0x28,%rsp
    adb9:	31 c0                	xor    %eax,%eax
    adbb:	5b                   	pop    %rbx
    adbc:	5d                   	pop    %rbp
    adbd:	41 5c                	pop    %r12
    adbf:	41 5d                	pop    %r13
    adc1:	41 5e                	pop    %r14
    adc3:	41 5f                	pop    %r15
    adc5:	c3                   	ret    
    adc6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    adcd:	00 00 00 
    add0:	4c 8b 75 00          	mov    0x0(%rbp),%r14
    add4:	48 8b 5b 40          	mov    0x40(%rbx),%rbx
    add8:	4d 39 ee             	cmp    %r13,%r14
    addb:	72 6b                	jb     ae48 <ema_realloc_from_reserve_range+0xf8>
    addd:	48 8b 43 08          	mov    0x8(%rbx),%rax
    ade1:	48 03 03             	add    (%rbx),%rax
    ade4:	49 39 c4             	cmp    %rax,%r12
    ade7:	0f 82 88 00 00 00    	jb     ae75 <ema_realloc_from_reserve_range+0x125>
    aded:	48 8b 6b 38          	mov    0x38(%rbx),%rbp
    adf1:	48 89 6c 24 10       	mov    %rbp,0x10(%rsp)
    adf6:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    adfb:	48 39 dd             	cmp    %rbx,%rbp
    adfe:	74 11                	je     ae11 <ema_realloc_from_reserve_range+0xc1>
    ae00:	48 89 df             	mov    %rbx,%rdi
    ae03:	48 8b 5b 38          	mov    0x38(%rbx),%rbx
    ae07:	e8 04 f2 ff ff       	call   a010 <ema_destroy>
    ae0c:	48 39 dd             	cmp    %rbx,%rbp
    ae0f:	75 ef                	jne    ae00 <ema_realloc_from_reserve_range+0xb0>
    ae11:	48 83 ec 08          	sub    $0x8,%rsp
    ae15:	4c 89 e6             	mov    %r12,%rsi
    ae18:	4c 89 ef             	mov    %r13,%rdi
    ae1b:	55                   	push   %rbp
    ae1c:	4c 8b 4c 24 78       	mov    0x78(%rsp),%r9
    ae21:	4c 29 ee             	sub    %r13,%rsi
    ae24:	4c 8b 44 24 70       	mov    0x70(%rsp),%r8
    ae29:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    ae2e:	8b 54 24 14          	mov    0x14(%rsp),%edx
    ae32:	e8 c9 f0 ff ff       	call   9f00 <ema_new>
    ae37:	5a                   	pop    %rdx
    ae38:	59                   	pop    %rcx
    ae39:	48 83 c4 28          	add    $0x28,%rsp
    ae3d:	5b                   	pop    %rbx
    ae3e:	5d                   	pop    %rbp
    ae3f:	41 5c                	pop    %r12
    ae41:	41 5d                	pop    %r13
    ae43:	41 5e                	pop    %r14
    ae45:	41 5f                	pop    %r15
    ae47:	c3                   	ret    
    ae48:	31 d2                	xor    %edx,%edx
    ae4a:	48 8d 4c 24 18       	lea    0x18(%rsp),%rcx
    ae4f:	4c 89 ee             	mov    %r13,%rsi
    ae52:	48 89 ef             	mov    %rbp,%rdi
    ae55:	e8 66 ea ff ff       	call   98c0 <ema_split>
    ae5a:	85 c0                	test   %eax,%eax
    ae5c:	0f 85 53 ff ff ff    	jne    adb5 <ema_realloc_from_reserve_range+0x65>
    ae62:	48 39 dd             	cmp    %rbx,%rbp
    ae65:	0f 85 72 ff ff ff    	jne    addd <ema_realloc_from_reserve_range+0x8d>
    ae6b:	48 8b 5c 24 18       	mov    0x18(%rsp),%rbx
    ae70:	e9 68 ff ff ff       	jmp    addd <ema_realloc_from_reserve_range+0x8d>
    ae75:	31 d2                	xor    %edx,%edx
    ae77:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
    ae7c:	4c 89 e6             	mov    %r12,%rsi
    ae7f:	48 89 df             	mov    %rbx,%rdi
    ae82:	e8 39 ea ff ff       	call   98c0 <ema_split>
    ae87:	85 c0                	test   %eax,%eax
    ae89:	0f 85 26 ff ff ff    	jne    adb5 <ema_realloc_from_reserve_range+0x65>
    ae8f:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    ae94:	e9 5d ff ff ff       	jmp    adf6 <ema_realloc_from_reserve_range+0xa6>
    ae99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000aea0 <ema_do_alloc>:
    aea0:	f3 0f 1e fa          	endbr64 
    aea4:	41 55                	push   %r13
    aea6:	41 54                	push   %r12
    aea8:	55                   	push   %rbp
    aea9:	53                   	push   %rbx
    aeaa:	48 83 ec 08          	sub    $0x8,%rsp
    aeae:	8b 6f 10             	mov    0x10(%rdi),%ebp
    aeb1:	40 f6 c5 01          	test   $0x1,%bpl
    aeb5:	74 11                	je     aec8 <ema_do_alloc+0x28>
    aeb7:	31 c0                	xor    %eax,%eax
    aeb9:	48 83 c4 08          	add    $0x8,%rsp
    aebd:	5b                   	pop    %rbx
    aebe:	5d                   	pop    %rbp
    aebf:	41 5c                	pop    %r12
    aec1:	41 5d                	pop    %r13
    aec3:	c3                   	ret    
    aec4:	0f 1f 40 00          	nopl   0x0(%rax)
    aec8:	4c 8b 6f 08          	mov    0x8(%rdi),%r13
    aecc:	8b 57 18             	mov    0x18(%rdi),%edx
    aecf:	48 89 fb             	mov    %rdi,%rbx
    aed2:	89 e9                	mov    %ebp,%ecx
    aed4:	4c 8b 27             	mov    (%rdi),%r12
    aed7:	81 e2 00 ff 00 00    	and    $0xff00,%edx
    aedd:	4c 89 ee             	mov    %r13,%rsi
    aee0:	4c 89 e7             	mov    %r12,%rdi
    aee3:	e8 f8 a7 ff ff       	call   56e0 <sgx_mm_alloc_ocall>
    aee8:	89 c2                	mov    %eax,%edx
    aeea:	b8 0e 00 00 00       	mov    $0xe,%eax
    aeef:	85 d2                	test   %edx,%edx
    aef1:	75 c6                	jne    aeb9 <ema_do_alloc+0x19>
    aef3:	40 f6 c5 02          	test   $0x2,%bpl
    aef7:	74 37                	je     af30 <ema_do_alloc+0x90>
    aef9:	89 e9                	mov    %ebp,%ecx
    aefb:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    aeff:	4c 89 ee             	mov    %r13,%rsi
    af02:	4c 89 e7             	mov    %r12,%rdi
    af05:	c1 e9 04             	shr    $0x4,%ecx
    af08:	83 f1 01             	xor    $0x1,%ecx
    af0b:	83 e1 01             	and    $0x1,%ecx
    af0e:	e8 8d f1 ff ff       	call   a0a0 <do_commit>
    af13:	85 c0                	test   %eax,%eax
    af15:	75 a2                	jne    aeb9 <ema_do_alloc+0x19>
    af17:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    af1b:	48 85 ff             	test   %rdi,%rdi
    af1e:	74 50                	je     af70 <ema_do_alloc+0xd0>
    af20:	e8 ab e1 ff ff       	call   90d0 <bit_array_set_all>
    af25:	31 c0                	xor    %eax,%eax
    af27:	eb 90                	jmp    aeb9 <ema_do_alloc+0x19>
    af29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    af30:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    af34:	48 85 ff             	test   %rdi,%rdi
    af37:	74 0f                	je     af48 <ema_do_alloc+0xa8>
    af39:	e8 92 e2 ff ff       	call   91d0 <bit_array_reset_all>
    af3e:	31 c0                	xor    %eax,%eax
    af40:	e9 74 ff ff ff       	jmp    aeb9 <ema_do_alloc+0x19>
    af45:	0f 1f 00             	nopl   (%rax)
    af48:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    af4c:	48 c1 ef 0c          	shr    $0xc,%rdi
    af50:	e8 7b de ff ff       	call   8dd0 <bit_array_new_reset>
    af55:	48 89 43 20          	mov    %rax,0x20(%rbx)
    af59:	48 85 c0             	test   %rax,%rax
    af5c:	0f 85 55 ff ff ff    	jne    aeb7 <ema_do_alloc+0x17>
    af62:	b8 0c 00 00 00       	mov    $0xc,%eax
    af67:	e9 4d ff ff ff       	jmp    aeb9 <ema_do_alloc+0x19>
    af6c:	0f 1f 40 00          	nopl   0x0(%rax)
    af70:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    af74:	48 c1 ef 0c          	shr    $0xc,%rdi
    af78:	e8 23 de ff ff       	call   8da0 <bit_array_new_set>
    af7d:	48 89 43 20          	mov    %rax,0x20(%rbx)
    af81:	48 85 c0             	test   %rax,%rax
    af84:	74 dc                	je     af62 <ema_do_alloc+0xc2>
    af86:	31 c0                	xor    %eax,%eax
    af88:	e9 2c ff ff ff       	jmp    aeb9 <ema_do_alloc+0x19>
    af8d:	0f 1f 00             	nopl   (%rax)

000000000000af90 <add_reserve>:
    af90:	41 54                	push   %r12
    af92:	55                   	push   %rbp
    af93:	53                   	push   %rbx
    af94:	31 db                	xor    %ebx,%ebx
    af96:	48 83 ec 10          	sub    $0x10,%rsp
    af9a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    afa1:	00 00 
    afa3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    afa8:	31 c0                	xor    %eax,%eax
    afaa:	80 3d 07 f2 00 00 00 	cmpb   $0x0,0xf207(%rip)        # 1a1b8 <adding_reserve>
    afb1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    afb8:	00 
    afb9:	74 25                	je     afe0 <add_reserve+0x50>
    afbb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    afc0:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    afc7:	00 00 
    afc9:	0f 85 fb 00 00 00    	jne    b0ca <add_reserve+0x13a>
    afcf:	48 83 c4 10          	add    $0x10,%rsp
    afd3:	89 d8                	mov    %ebx,%eax
    afd5:	5b                   	pop    %rbx
    afd6:	5d                   	pop    %rbp
    afd7:	41 5c                	pop    %r12
    afd9:	c3                   	ret    
    afda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    afe0:	48 8b 35 e1 f0 00 00 	mov    0xf0e1(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    afe7:	49 89 e4             	mov    %rsp,%r12
    afea:	48 89 fd             	mov    %rdi,%rbp
    afed:	ba 01 00 00 00       	mov    $0x1,%edx
    aff2:	4d 89 e1             	mov    %r12,%r9
    aff5:	c6 05 bc f1 00 00 01 	movb   $0x1,0xf1bc(%rip)        # 1a1b8 <adding_reserve>
    affc:	48 39 f7             	cmp    %rsi,%rdi
    afff:	48 0f 43 f7          	cmovae %rdi,%rsi
    b003:	45 31 c0             	xor    %r8d,%r8d
    b006:	31 c9                	xor    %ecx,%ecx
    b008:	31 ff                	xor    %edi,%edi
    b00a:	48 89 35 b7 f0 00 00 	mov    %rsi,0xf0b7(%rip)        # 1a0c8 <reserve_size_increment>
    b011:	48 81 c6 00 00 01 00 	add    $0x10000,%rsi
    b018:	e8 a3 0d 00 00       	call   bdc0 <sgx_mm_alloc>
    b01d:	89 c3                	mov    %eax,%ebx
    b01f:	85 c0                	test   %eax,%eax
    b021:	75 2a                	jne    b04d <add_reserve+0xbd>
    b023:	48 8b 04 24          	mov    (%rsp),%rax
    b027:	48 8b 35 9a f0 00 00 	mov    0xf09a(%rip),%rsi        # 1a0c8 <reserve_size_increment>
    b02e:	4d 89 e1             	mov    %r12,%r9
    b031:	31 c9                	xor    %ecx,%ecx
    b033:	45 31 c0             	xor    %r8d,%r8d
    b036:	ba 44 00 00 00       	mov    $0x44,%edx
    b03b:	48 8d b8 00 80 00 00 	lea    0x8000(%rax),%rdi
    b042:	e8 79 0d 00 00       	call   bdc0 <sgx_mm_alloc>
    b047:	89 c3                	mov    %eax,%ebx
    b049:	85 c0                	test   %eax,%eax
    b04b:	74 13                	je     b060 <add_reserve+0xd0>
    b04d:	c6 05 64 f1 00 00 00 	movb   $0x0,0xf164(%rip)        # 1a1b8 <adding_reserve>
    b054:	e9 62 ff ff ff       	jmp    afbb <add_reserve+0x2b>
    b059:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b060:	48 8b 3c 24          	mov    (%rsp),%rdi
    b064:	48 89 ee             	mov    %rbp,%rsi
    b067:	e8 44 0e 00 00       	call   beb0 <sgx_mm_commit>
    b06c:	48 8b 04 24          	mov    (%rsp),%rax
    b070:	48 8b 15 49 f1 00 00 	mov    0xf149(%rip),%rdx        # 1a1c0 <reserve_list>
    b077:	c6 05 3a f1 00 00 00 	movb   $0x0,0xf13a(%rip)        # 1a1b8 <adding_reserve>
    b07e:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b083:	48 89 50 18          	mov    %rdx,0x18(%rax)
    b087:	ba 00 00 00 10       	mov    $0x10000000,%edx
    b08c:	0f 16 05 35 f0 00 00 	movhps 0xf035(%rip),%xmm0        # 1a0c8 <reserve_size_increment>
    b093:	66 0f d4 05 e5 7f 00 	paddq  0x7fe5(%rip),%xmm0        # 13080 <g_dyn_entry_table+0x70>
    b09a:	00 
    b09b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b0a2:	00 
    b0a3:	48 89 05 16 f1 00 00 	mov    %rax,0xf116(%rip)        # 1a1c0 <reserve_list>
    b0aa:	0f 11 00             	movups %xmm0,(%rax)
    b0ad:	48 8b 05 14 f0 00 00 	mov    0xf014(%rip),%rax        # 1a0c8 <reserve_size_increment>
    b0b4:	48 01 c0             	add    %rax,%rax
    b0b7:	48 39 d0             	cmp    %rdx,%rax
    b0ba:	48 0f 47 c2          	cmova  %rdx,%rax
    b0be:	48 89 05 03 f0 00 00 	mov    %rax,0xf003(%rip)        # 1a0c8 <reserve_size_increment>
    b0c5:	e9 f1 fe ff ff       	jmp    afbb <add_reserve+0x2b>
    b0ca:	e8 f1 57 00 00       	call   108c0 <__stack_chk_fail>
    b0cf:	90                   	nop

000000000000b0d0 <remove_from_list>:
    b0d0:	48 8b 07             	mov    (%rdi),%rax
    b0d3:	48 23 05 f6 ef 00 00 	and    0xeff6(%rip),%rax        # 1a0d0 <size_mask>
    b0da:	48 89 c2             	mov    %rax,%rdx
    b0dd:	48 8b 06             	mov    (%rsi),%rax
    b0e0:	48 39 f8             	cmp    %rdi,%rax
    b0e3:	74 43                	je     b128 <remove_from_list+0x58>
    b0e5:	48 83 fa 10          	cmp    $0x10,%rdx
    b0e9:	76 25                	jbe    b110 <remove_from_list+0x40>
    b0eb:	48 8b 57 10          	mov    0x10(%rdi),%rdx
    b0ef:	48 8b 47 08          	mov    0x8(%rdi),%rax
    b0f3:	48 85 d2             	test   %rdx,%rdx
    b0f6:	74 04                	je     b0fc <remove_from_list+0x2c>
    b0f8:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b0fc:	48 85 c0             	test   %rax,%rax
    b0ff:	74 23                	je     b124 <remove_from_list+0x54>
    b101:	48 89 50 10          	mov    %rdx,0x10(%rax)
    b105:	c3                   	ret    
    b106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b10d:	00 00 00 
    b110:	48 89 c2             	mov    %rax,%rdx
    b113:	48 8b 40 08          	mov    0x8(%rax),%rax
    b117:	48 39 f8             	cmp    %rdi,%rax
    b11a:	75 f4                	jne    b110 <remove_from_list+0x40>
    b11c:	48 8b 40 08          	mov    0x8(%rax),%rax
    b120:	48 89 42 08          	mov    %rax,0x8(%rdx)
    b124:	c3                   	ret    
    b125:	0f 1f 00             	nopl   (%rax)
    b128:	48 8b 40 08          	mov    0x8(%rax),%rax
    b12c:	48 89 06             	mov    %rax,(%rsi)
    b12f:	48 85 c0             	test   %rax,%rax
    b132:	74 f0                	je     b124 <remove_from_list+0x54>
    b134:	48 83 fa 10          	cmp    $0x10,%rdx
    b138:	76 ea                	jbe    b124 <remove_from_list+0x54>
    b13a:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b141:	00 
    b142:	c3                   	ret    
    b143:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b14a:	00 00 00 
    b14d:	0f 1f 00             	nopl   (%rax)

000000000000b150 <put_free_block>:
    b150:	48 8b 05 79 ef 00 00 	mov    0xef79(%rip),%rax        # 1a0d0 <size_mask>
    b157:	48 8b 17             	mov    (%rdi),%rdx
    b15a:	48 21 c2             	and    %rax,%rdx
    b15d:	48 81 fa 08 08 00 00 	cmp    $0x808,%rdx
    b164:	76 2a                	jbe    b190 <put_free_block+0x40>
    b166:	48 8b 15 5b f0 00 00 	mov    0xf05b(%rip),%rdx        # 1a1c8 <large_block_list>
    b16d:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    b171:	48 85 d2             	test   %rdx,%rdx
    b174:	74 0d                	je     b183 <put_free_block+0x33>
    b176:	48 23 02             	and    (%rdx),%rax
    b179:	48 83 f8 10          	cmp    $0x10,%rax
    b17d:	76 04                	jbe    b183 <put_free_block+0x33>
    b17f:	48 89 7a 10          	mov    %rdi,0x10(%rdx)
    b183:	48 89 3d 3e f0 00 00 	mov    %rdi,0xf03e(%rip)        # 1a1c8 <large_block_list>
    b18a:	c3                   	ret    
    b18b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b190:	48 8d 4a f0          	lea    -0x10(%rdx),%rcx
    b194:	48 8d 35 45 f0 00 00 	lea    0xf045(%rip),%rsi        # 1a1e0 <exact_block_list>
    b19b:	48 c1 e9 03          	shr    $0x3,%rcx
    b19f:	48 83 fa 0f          	cmp    $0xf,%rdx
    b1a3:	ba 00 00 00 00       	mov    $0x0,%edx
    b1a8:	48 0f 47 d1          	cmova  %rcx,%rdx
    b1ac:	48 8b 0c d6          	mov    (%rsi,%rdx,8),%rcx
    b1b0:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    b1b4:	48 85 c9             	test   %rcx,%rcx
    b1b7:	74 0d                	je     b1c6 <put_free_block+0x76>
    b1b9:	48 23 01             	and    (%rcx),%rax
    b1bc:	48 83 f8 10          	cmp    $0x10,%rax
    b1c0:	76 04                	jbe    b1c6 <put_free_block+0x76>
    b1c2:	48 89 79 10          	mov    %rdi,0x10(%rcx)
    b1c6:	48 89 3c d6          	mov    %rdi,(%rsi,%rdx,8)
    b1ca:	c3                   	ret    
    b1cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b1d0 <neighbor_right>:
    b1d0:	4c 8b 05 f9 ee 00 00 	mov    0xeef9(%rip),%r8        # 1a0d0 <size_mask>
    b1d7:	4c 89 c2             	mov    %r8,%rdx
    b1da:	48 23 17             	and    (%rdi),%rdx
    b1dd:	48 8d 04 17          	lea    (%rdi,%rdx,1),%rax
    b1e1:	74 2f                	je     b212 <neighbor_right+0x42>
    b1e3:	48 8b 0d d6 ef 00 00 	mov    0xefd6(%rip),%rcx        # 1a1c0 <reserve_list>
    b1ea:	48 85 c9             	test   %rcx,%rcx
    b1ed:	74 23                	je     b212 <neighbor_right+0x42>
    b1ef:	48 89 ca             	mov    %rcx,%rdx
    b1f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b1f8:	48 8b 32             	mov    (%rdx),%rsi
    b1fb:	48 39 f7             	cmp    %rsi,%rdi
    b1fe:	72 09                	jb     b209 <neighbor_right+0x39>
    b200:	48 03 72 10          	add    0x10(%rdx),%rsi
    b204:	48 39 c6             	cmp    %rax,%rsi
    b207:	73 0f                	jae    b218 <neighbor_right+0x48>
    b209:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b20d:	48 85 d2             	test   %rdx,%rdx
    b210:	75 e6                	jne    b1f8 <neighbor_right+0x28>
    b212:	31 c0                	xor    %eax,%eax
    b214:	c3                   	ret    
    b215:	0f 1f 00             	nopl   (%rax)
    b218:	74 f8                	je     b212 <neighbor_right+0x42>
    b21a:	4c 23 00             	and    (%rax),%r8
    b21d:	74 f3                	je     b212 <neighbor_right+0x42>
    b21f:	4a 8d 3c 00          	lea    (%rax,%r8,1),%rdi
    b223:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b228:	48 8b 31             	mov    (%rcx),%rsi
    b22b:	48 39 f0             	cmp    %rsi,%rax
    b22e:	72 09                	jb     b239 <neighbor_right+0x69>
    b230:	48 03 71 10          	add    0x10(%rcx),%rsi
    b234:	48 39 fe             	cmp    %rdi,%rsi
    b237:	73 0f                	jae    b248 <neighbor_right+0x78>
    b239:	48 8b 49 18          	mov    0x18(%rcx),%rcx
    b23d:	48 85 c9             	test   %rcx,%rcx
    b240:	75 e6                	jne    b228 <neighbor_right+0x58>
    b242:	31 c0                	xor    %eax,%eax
    b244:	c3                   	ret    
    b245:	0f 1f 00             	nopl   (%rax)
    b248:	48 39 d1             	cmp    %rdx,%rcx
    b24b:	ba 00 00 00 00       	mov    $0x0,%edx
    b250:	48 0f 45 c2          	cmovne %rdx,%rax
    b254:	c3                   	ret    
    b255:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b25c:	00 00 00 
    b25f:	90                   	nop

000000000000b260 <payload_to_block>:
    b260:	f3 0f 1e fa          	endbr64 
    b264:	48 89 f8             	mov    %rdi,%rax
    b267:	48 2b 05 6a ee 00 00 	sub    0xee6a(%rip),%rax        # 1a0d8 <header_size>
    b26e:	c3                   	ret    
    b26f:	90                   	nop

000000000000b270 <block_to_payload>:
    b270:	f3 0f 1e fa          	endbr64 
    b274:	48 8d 47 08          	lea    0x8(%rdi),%rax
    b278:	c3                   	ret    
    b279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000b280 <is_alloced>:
    b280:	f3 0f 1e fa          	endbr64 
    b284:	48 8b 07             	mov    (%rdi),%rax
    b287:	83 e0 01             	and    $0x1,%eax
    b28a:	c3                   	ret    
    b28b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000b290 <block_size>:
    b290:	f3 0f 1e fa          	endbr64 
    b294:	48 8b 07             	mov    (%rdi),%rax
    b297:	48 23 05 32 ee 00 00 	and    0xee32(%rip),%rax        # 1a0d0 <size_mask>
    b29e:	c3                   	ret    
    b29f:	90                   	nop

000000000000b2a0 <block_end>:
    b2a0:	f3 0f 1e fa          	endbr64 
    b2a4:	48 8b 07             	mov    (%rdi),%rax
    b2a7:	48 23 05 22 ee 00 00 	and    0xee22(%rip),%rax        # 1a0d0 <size_mask>
    b2ae:	48 01 f8             	add    %rdi,%rax
    b2b1:	c3                   	ret    
    b2b2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b2b9:	00 00 00 
    b2bc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b2c0 <emalloc_init_with_reserved_mem>:
    b2c0:	f3 0f 1e fa          	endbr64 
    b2c4:	48 83 ec 08          	sub    $0x8,%rsp
    b2c8:	e8 c3 fc ff ff       	call   af90 <add_reserve>
    b2cd:	85 c0                	test   %eax,%eax
    b2cf:	75 17                	jne    b2e8 <emalloc_init_with_reserved_mem+0x28>
    b2d1:	48 c7 05 ec ed 00 00 	movq   $0x10000,0xedec(%rip)        # 1a0c8 <reserve_size_increment>
    b2d8:	00 00 01 00 
    b2dc:	48 83 c4 08          	add    $0x8,%rsp
    b2e0:	c3                   	ret    
    b2e1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b2e8:	b8 0c 00 00 00       	mov    $0xc,%eax
    b2ed:	48 83 c4 08          	add    $0x8,%rsp
    b2f1:	c3                   	ret    
    b2f2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b2f9:	00 00 00 
    b2fc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000b300 <emalloc>:
    b300:	f3 0f 1e fa          	endbr64 
    b304:	48 8b 05 cd ed 00 00 	mov    0xedcd(%rip),%rax        # 1a0d8 <header_size>
    b30b:	53                   	push   %rbx
    b30c:	bb 10 00 00 00       	mov    $0x10,%ebx
    b311:	48 8d 44 38 07       	lea    0x7(%rax,%rdi,1),%rax
    b316:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    b31a:	48 39 d8             	cmp    %rbx,%rax
    b31d:	48 0f 43 d8          	cmovae %rax,%rbx
    b321:	80 3d 90 ee 00 00 00 	cmpb   $0x0,0xee90(%rip)        # 1a1b8 <adding_reserve>
    b328:	74 36                	je     b360 <emalloc+0x60>
    b32a:	48 8b 05 af f6 00 00 	mov    0xf6af(%rip),%rax        # 1a9e0 <meta_used>
    b331:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    b335:	48 81 fa 00 00 01 00 	cmp    $0x10000,%rdx
    b33c:	0f 87 1c 01 00 00    	ja     b45e <emalloc+0x15e>
    b342:	48 8d 0d b7 f6 00 00 	lea    0xf6b7(%rip),%rcx        # 1aa00 <meta_reserve>
    b349:	48 83 cb 01          	or     $0x1,%rbx
    b34d:	48 89 15 8c f6 00 00 	mov    %rdx,0xf68c(%rip)        # 1a9e0 <meta_used>
    b354:	48 01 c8             	add    %rcx,%rax
    b357:	48 89 18             	mov    %rbx,(%rax)
    b35a:	48 83 c0 08          	add    $0x8,%rax
    b35e:	5b                   	pop    %rbx
    b35f:	c3                   	ret    
    b360:	48 3d 08 08 00 00    	cmp    $0x808,%rax
    b366:	0f 86 74 01 00 00    	jbe    b4e0 <emalloc+0x1e0>
    b36c:	48 8b 05 55 ee 00 00 	mov    0xee55(%rip),%rax        # 1a1c8 <large_block_list>
    b373:	48 85 c0             	test   %rax,%rax
    b376:	0f 84 ec 00 00 00    	je     b468 <emalloc+0x168>
    b37c:	45 31 c0             	xor    %r8d,%r8d
    b37f:	90                   	nop
    b380:	48 8b 10             	mov    (%rax),%rdx
    b383:	48 39 da             	cmp    %rbx,%rdx
    b386:	72 3e                	jb     b3c6 <emalloc+0xc6>
    b388:	4d 85 c0             	test   %r8,%r8
    b38b:	74 7b                	je     b408 <emalloc+0x108>
    b38d:	49 3b 10             	cmp    (%r8),%rdx
    b390:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b394:	73 20                	jae    b3b6 <emalloc+0xb6>
    b396:	48 85 c9             	test   %rcx,%rcx
    b399:	0f 84 89 01 00 00    	je     b528 <emalloc+0x228>
    b39f:	48 8b 11             	mov    (%rcx),%rdx
    b3a2:	49 89 c0             	mov    %rax,%r8
    b3a5:	48 39 da             	cmp    %rbx,%rdx
    b3a8:	72 19                	jb     b3c3 <emalloc+0xc3>
    b3aa:	48 89 c8             	mov    %rcx,%rax
    b3ad:	49 3b 10             	cmp    (%r8),%rdx
    b3b0:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b3b4:	72 e0                	jb     b396 <emalloc+0x96>
    b3b6:	48 85 c9             	test   %rcx,%rcx
    b3b9:	74 14                	je     b3cf <emalloc+0xcf>
    b3bb:	48 8b 11             	mov    (%rcx),%rdx
    b3be:	48 39 da             	cmp    %rbx,%rdx
    b3c1:	73 e7                	jae    b3aa <emalloc+0xaa>
    b3c3:	48 89 c8             	mov    %rcx,%rax
    b3c6:	48 8b 40 08          	mov    0x8(%rax),%rax
    b3ca:	48 85 c0             	test   %rax,%rax
    b3cd:	75 b1                	jne    b380 <emalloc+0x80>
    b3cf:	4d 85 c0             	test   %r8,%r8
    b3d2:	0f 84 90 00 00 00    	je     b468 <emalloc+0x168>
    b3d8:	48 8d 35 e9 ed 00 00 	lea    0xede9(%rip),%rsi        # 1a1c8 <large_block_list>
    b3df:	4c 89 c7             	mov    %r8,%rdi
    b3e2:	e8 e9 fc ff ff       	call   b0d0 <remove_from_list>
    b3e7:	49 8b 00             	mov    (%r8),%rax
    b3ea:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    b3ee:	48 39 d0             	cmp    %rdx,%rax
    b3f1:	0f 83 c9 00 00 00    	jae    b4c0 <emalloc+0x1c0>
    b3f7:	48 83 cb 01          	or     $0x1,%rbx
    b3fb:	49 8d 40 08          	lea    0x8(%r8),%rax
    b3ff:	49 89 18             	mov    %rbx,(%r8)
    b402:	5b                   	pop    %rbx
    b403:	c3                   	ret    
    b404:	0f 1f 40 00          	nopl   0x0(%rax)
    b408:	49 89 c0             	mov    %rax,%r8
    b40b:	eb b9                	jmp    b3c6 <emalloc+0xc6>
    b40d:	0f 1f 00             	nopl   (%rax)
    b410:	48 8d bb 1f 00 01 00 	lea    0x1001f(%rbx),%rdi
    b417:	66 31 ff             	xor    %di,%di
    b41a:	e8 71 fb ff ff       	call   af90 <add_reserve>
    b41f:	85 c0                	test   %eax,%eax
    b421:	75 3b                	jne    b45e <emalloc+0x15e>
    b423:	48 8b 15 96 ed 00 00 	mov    0xed96(%rip),%rdx        # 1a1c0 <reserve_list>
    b42a:	48 85 d2             	test   %rdx,%rdx
    b42d:	75 12                	jne    b441 <emalloc+0x141>
    b42f:	eb 2d                	jmp    b45e <emalloc+0x15e>
    b431:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b438:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b43c:	48 85 d2             	test   %rdx,%rdx
    b43f:	74 1d                	je     b45e <emalloc+0x15e>
    b441:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b445:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b449:	48 29 c1             	sub    %rax,%rcx
    b44c:	48 39 d9             	cmp    %rbx,%rcx
    b44f:	72 e7                	jb     b438 <emalloc+0x138>
    b451:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b455:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b459:	48 03 02             	add    (%rdx),%rax
    b45c:	75 4c                	jne    b4aa <emalloc+0x1aa>
    b45e:	31 c0                	xor    %eax,%eax
    b460:	5b                   	pop    %rbx
    b461:	c3                   	ret    
    b462:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b468:	48 8b 15 51 ed 00 00 	mov    0xed51(%rip),%rdx        # 1a1c0 <reserve_list>
    b46f:	48 85 d2             	test   %rdx,%rdx
    b472:	75 15                	jne    b489 <emalloc+0x189>
    b474:	eb 9a                	jmp    b410 <emalloc+0x110>
    b476:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b47d:	00 00 00 
    b480:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    b484:	48 85 d2             	test   %rdx,%rdx
    b487:	74 87                	je     b410 <emalloc+0x110>
    b489:	48 8b 42 10          	mov    0x10(%rdx),%rax
    b48d:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    b491:	48 29 c1             	sub    %rax,%rcx
    b494:	48 39 d9             	cmp    %rbx,%rcx
    b497:	72 e7                	jb     b480 <emalloc+0x180>
    b499:	48 8d 0c 03          	lea    (%rbx,%rax,1),%rcx
    b49d:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    b4a1:	48 03 02             	add    (%rdx),%rax
    b4a4:	0f 84 66 ff ff ff    	je     b410 <emalloc+0x110>
    b4aa:	48 83 cb 01          	or     $0x1,%rbx
    b4ae:	48 83 c0 08          	add    $0x8,%rax
    b4b2:	48 89 58 f8          	mov    %rbx,-0x8(%rax)
    b4b6:	5b                   	pop    %rbx
    b4b7:	c3                   	ret    
    b4b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    b4bf:	00 
    b4c0:	49 8d 3c 18          	lea    (%r8,%rbx,1),%rdi
    b4c4:	48 29 d8             	sub    %rbx,%rax
    b4c7:	49 89 18             	mov    %rbx,(%r8)
    b4ca:	48 89 07             	mov    %rax,(%rdi)
    b4cd:	e8 7e fc ff ff       	call   b150 <put_free_block>
    b4d2:	e9 20 ff ff ff       	jmp    b3f7 <emalloc+0xf7>
    b4d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b4de:	00 00 
    b4e0:	48 8d 43 f0          	lea    -0x10(%rbx),%rax
    b4e4:	48 8d 15 f5 ec 00 00 	lea    0xecf5(%rip),%rdx        # 1a1e0 <exact_block_list>
    b4eb:	48 c1 e8 03          	shr    $0x3,%rax
    b4ef:	4c 8b 04 c2          	mov    (%rdx,%rax,8),%r8
    b4f3:	4d 85 c0             	test   %r8,%r8
    b4f6:	0f 84 6c ff ff ff    	je     b468 <emalloc+0x168>
    b4fc:	49 8b 48 08          	mov    0x8(%r8),%rcx
    b500:	48 89 0c c2          	mov    %rcx,(%rdx,%rax,8)
    b504:	48 85 c9             	test   %rcx,%rcx
    b507:	0f 84 ea fe ff ff    	je     b3f7 <emalloc+0xf7>
    b50d:	48 85 c0             	test   %rax,%rax
    b510:	0f 84 e1 fe ff ff    	je     b3f7 <emalloc+0xf7>
    b516:	48 c7 41 10 00 00 00 	movq   $0x0,0x10(%rcx)
    b51d:	00 
    b51e:	e9 d4 fe ff ff       	jmp    b3f7 <emalloc+0xf7>
    b523:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b528:	49 89 c0             	mov    %rax,%r8
    b52b:	e9 9f fe ff ff       	jmp    b3cf <emalloc+0xcf>

000000000000b530 <can_erealloc>:
    b530:	f3 0f 1e fa          	endbr64 
    b534:	80 3d 7d ec 00 00 00 	cmpb   $0x0,0xec7d(%rip)        # 1a1b8 <adding_reserve>
    b53b:	b8 01 00 00 00       	mov    $0x1,%eax
    b540:	75 30                	jne    b572 <can_erealloc+0x42>
    b542:	48 2b 3d 8f eb 00 00 	sub    0xeb8f(%rip),%rdi        # 1a0d8 <header_size>
    b549:	48 8d 15 b0 f4 01 00 	lea    0x1f4b0(%rip),%rdx        # 2aa00 <mm_user_end>
    b550:	48 39 d7             	cmp    %rdx,%rdi
    b553:	73 1d                	jae    b572 <can_erealloc+0x42>
    b555:	48 8b 05 74 eb 00 00 	mov    0xeb74(%rip),%rax        # 1a0d0 <size_mask>
    b55c:	48 23 07             	and    (%rdi),%rax
    b55f:	48 01 c7             	add    %rax,%rdi
    b562:	48 8d 82 00 00 ff ff 	lea    -0x10000(%rdx),%rax
    b569:	48 39 f8             	cmp    %rdi,%rax
    b56c:	0f 93 c0             	setae  %al
    b56f:	0f b6 c0             	movzbl %al,%eax
    b572:	c3                   	ret    
    b573:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b57a:	00 00 00 
    b57d:	0f 1f 00             	nopl   (%rax)

000000000000b580 <efree>:
    b580:	f3 0f 1e fa          	endbr64 
    b584:	48 2b 3d 4d eb 00 00 	sub    0xeb4d(%rip),%rdi        # 1a0d8 <header_size>
    b58b:	41 54                	push   %r12
    b58d:	48 8d 05 6c f4 01 00 	lea    0x1f46c(%rip),%rax        # 2aa00 <mm_user_end>
    b594:	55                   	push   %rbp
    b595:	4c 8b 1d 34 eb 00 00 	mov    0xeb34(%rip),%r11        # 1a0d0 <size_mask>
    b59c:	49 89 fc             	mov    %rdi,%r12
    b59f:	53                   	push   %rbx
    b5a0:	4c 8b 0f             	mov    (%rdi),%r9
    b5a3:	4d 21 d9             	and    %r11,%r9
    b5a6:	48 39 c7             	cmp    %rax,%rdi
    b5a9:	73 14                	jae    b5bf <efree+0x3f>
    b5ab:	49 8d 04 39          	lea    (%r9,%rdi,1),%rax
    b5af:	48 8d 15 4a f4 00 00 	lea    0xf44a(%rip),%rdx        # 1aa00 <meta_reserve>
    b5b6:	48 39 c2             	cmp    %rax,%rdx
    b5b9:	0f 82 f9 00 00 00    	jb     b6b8 <efree+0x138>
    b5bf:	4d 85 c9             	test   %r9,%r9
    b5c2:	74 2e                	je     b5f2 <efree+0x72>
    b5c4:	4c 8b 15 f5 eb 00 00 	mov    0xebf5(%rip),%r10        # 1a1c0 <reserve_list>
    b5cb:	4d 85 d2             	test   %r10,%r10
    b5ce:	74 22                	je     b5f2 <efree+0x72>
    b5d0:	4b 8d 14 21          	lea    (%r9,%r12,1),%rdx
    b5d4:	0f 1f 40 00          	nopl   0x0(%rax)
    b5d8:	49 8b 02             	mov    (%r10),%rax
    b5db:	49 39 c4             	cmp    %rax,%r12
    b5de:	72 09                	jb     b5e9 <efree+0x69>
    b5e0:	49 03 42 10          	add    0x10(%r10),%rax
    b5e4:	48 39 d0             	cmp    %rdx,%rax
    b5e7:	73 17                	jae    b600 <efree+0x80>
    b5e9:	4d 8b 52 18          	mov    0x18(%r10),%r10
    b5ed:	4d 85 d2             	test   %r10,%r10
    b5f0:	75 e6                	jne    b5d8 <efree+0x58>
    b5f2:	e8 40 6d 00 00       	call   12337 <abort>
    b5f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    b5fe:	00 00 
    b600:	4d 89 0c 24          	mov    %r9,(%r12)
    b604:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    b60b:	00 00 
    b60d:	49 83 f9 10          	cmp    $0x10,%r9
    b611:	0f 87 b9 00 00 00    	ja     b6d0 <efree+0x150>
    b617:	4c 89 e7             	mov    %r12,%rdi
    b61a:	48 8d 1d bf eb 00 00 	lea    0xebbf(%rip),%rbx        # 1a1e0 <exact_block_list>
    b621:	48 8d 2d a0 eb 00 00 	lea    0xeba0(%rip),%rbp        # 1a1c8 <large_block_list>
    b628:	e8 a3 fb ff ff       	call   b1d0 <neighbor_right>
    b62d:	48 89 c7             	mov    %rax,%rdi
    b630:	48 85 c0             	test   %rax,%rax
    b633:	75 3c                	jne    b671 <efree+0xf1>
    b635:	e9 3d 01 00 00       	jmp    b777 <efree+0x1f7>
    b63a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b640:	48 89 de             	mov    %rbx,%rsi
    b643:	48 83 f9 0f          	cmp    $0xf,%rcx
    b647:	76 0b                	jbe    b654 <efree+0xd4>
    b649:	48 8d 71 f0          	lea    -0x10(%rcx),%rsi
    b64d:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    b651:	48 01 de             	add    %rbx,%rsi
    b654:	e8 77 fa ff ff       	call   b0d0 <remove_from_list>
    b659:	49 03 0c 24          	add    (%r12),%rcx
    b65d:	49 89 0c 24          	mov    %rcx,(%r12)
    b661:	49 89 c9             	mov    %rcx,%r9
    b664:	e8 67 fb ff ff       	call   b1d0 <neighbor_right>
    b669:	48 89 c7             	mov    %rax,%rdi
    b66c:	48 85 c0             	test   %rax,%rax
    b66f:	74 23                	je     b694 <efree+0x114>
    b671:	48 8b 0f             	mov    (%rdi),%rcx
    b674:	f6 c1 01             	test   $0x1,%cl
    b677:	75 17                	jne    b690 <efree+0x110>
    b679:	4c 21 d9             	and    %r11,%rcx
    b67c:	48 81 f9 08 08 00 00 	cmp    $0x808,%rcx
    b683:	76 bb                	jbe    b640 <efree+0xc0>
    b685:	48 89 ee             	mov    %rbp,%rsi
    b688:	e8 43 fa ff ff       	call   b0d0 <remove_from_list>
    b68d:	eb ca                	jmp    b659 <efree+0xd9>
    b68f:	90                   	nop
    b690:	4d 8b 0c 24          	mov    (%r12),%r9
    b694:	4d 21 cb             	and    %r9,%r11
    b697:	49 8b 1a             	mov    (%r10),%rbx
    b69a:	4c 89 e0             	mov    %r12,%rax
    b69d:	48 29 d8             	sub    %rbx,%rax
    b6a0:	49 01 c3             	add    %rax,%r11
    b6a3:	4d 3b 5a 10          	cmp    0x10(%r10),%r11
    b6a7:	74 37                	je     b6e0 <efree+0x160>
    b6a9:	5b                   	pop    %rbx
    b6aa:	4c 89 e7             	mov    %r12,%rdi
    b6ad:	5d                   	pop    %rbp
    b6ae:	41 5c                	pop    %r12
    b6b0:	e9 9b fa ff ff       	jmp    b150 <put_free_block>
    b6b5:	0f 1f 00             	nopl   (%rax)
    b6b8:	80 3d f9 ea 00 00 00 	cmpb   $0x0,0xeaf9(%rip)        # 1a1b8 <adding_reserve>
    b6bf:	0f 84 2d ff ff ff    	je     b5f2 <efree+0x72>
    b6c5:	5b                   	pop    %rbx
    b6c6:	5d                   	pop    %rbp
    b6c7:	41 5c                	pop    %r12
    b6c9:	c3                   	ret    
    b6ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    b6d0:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    b6d7:	00 00 
    b6d9:	e9 39 ff ff ff       	jmp    b617 <efree+0x97>
    b6de:	66 90                	xchg   %ax,%ax
    b6e0:	48 8b 0d e1 ea 00 00 	mov    0xeae1(%rip),%rcx        # 1a1c8 <large_block_list>
    b6e7:	4d 29 cb             	sub    %r9,%r11
    b6ea:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b6ee:	4e 8d 04 1b          	lea    (%rbx,%r11,1),%r8
    b6f2:	48 85 c9             	test   %rcx,%rcx
    b6f5:	75 12                	jne    b709 <efree+0x189>
    b6f7:	eb 6d                	jmp    b766 <efree+0x1e6>
    b6f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b700:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b704:	48 85 c9             	test   %rcx,%rcx
    b707:	74 5d                	je     b766 <efree+0x1e6>
    b709:	48 8b 01             	mov    (%rcx),%rax
    b70c:	48 01 c8             	add    %rcx,%rax
    b70f:	49 39 c0             	cmp    %rax,%r8
    b712:	75 ec                	jne    b700 <efree+0x180>
    b714:	48 8d 35 ad ea 00 00 	lea    0xeaad(%rip),%rsi        # 1a1c8 <large_block_list>
    b71b:	48 89 cf             	mov    %rcx,%rdi
    b71e:	e8 ad f9 ff ff       	call   b0d0 <remove_from_list>
    b723:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b728:	4c 2b 01             	sub    (%rcx),%r8
    b72b:	48 8b 0d 96 ea 00 00 	mov    0xea96(%rip),%rcx        # 1a1c8 <large_block_list>
    b732:	48 85 c9             	test   %rcx,%rcx
    b735:	75 12                	jne    b749 <efree+0x1c9>
    b737:	eb 36                	jmp    b76f <efree+0x1ef>
    b739:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    b740:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    b744:	48 85 c9             	test   %rcx,%rcx
    b747:	74 17                	je     b760 <efree+0x1e0>
    b749:	48 8b 01             	mov    (%rcx),%rax
    b74c:	48 01 c8             	add    %rcx,%rax
    b74f:	49 39 c0             	cmp    %rax,%r8
    b752:	75 ec                	jne    b740 <efree+0x1c0>
    b754:	48 89 cf             	mov    %rcx,%rdi
    b757:	e8 74 f9 ff ff       	call   b0d0 <remove_from_list>
    b75c:	eb ca                	jmp    b728 <efree+0x1a8>
    b75e:	66 90                	xchg   %ax,%ax
    b760:	4d 89 c3             	mov    %r8,%r11
    b763:	49 29 db             	sub    %rbx,%r11
    b766:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    b76a:	5b                   	pop    %rbx
    b76b:	5d                   	pop    %rbp
    b76c:	41 5c                	pop    %r12
    b76e:	c3                   	ret    
    b76f:	49 29 d8             	sub    %rbx,%r8
    b772:	4d 89 c3             	mov    %r8,%r11
    b775:	eb ef                	jmp    b766 <efree+0x1e6>
    b777:	4d 89 cb             	mov    %r9,%r11
    b77a:	e9 18 ff ff ff       	jmp    b697 <efree+0x117>
    b77f:	90                   	nop

000000000000b780 <mm_init_ema>:
    b780:	f3 0f 1e fa          	endbr64 
    b784:	41 57                	push   %r15
    b786:	4d 89 cf             	mov    %r9,%r15
    b789:	41 56                	push   %r14
    b78b:	4d 89 c6             	mov    %r8,%r14
    b78e:	41 55                	push   %r13
    b790:	41 89 cd             	mov    %ecx,%r13d
    b793:	41 54                	push   %r12
    b795:	41 89 d4             	mov    %edx,%r12d
    b798:	55                   	push   %rbp
    b799:	48 89 f5             	mov    %rsi,%rbp
    b79c:	53                   	push   %rbx
    b79d:	48 89 fb             	mov    %rdi,%rbx
    b7a0:	48 83 ec 18          	sub    $0x18,%rsp
    b7a4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b7ab:	00 00 
    b7ad:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b7b2:	31 c0                	xor    %eax,%eax
    b7b4:	e8 47 a1 ff ff       	call   5900 <sgx_mm_is_within_enclave>
    b7b9:	89 c2                	mov    %eax,%edx
    b7bb:	b8 0d 00 00 00       	mov    $0xd,%eax
    b7c0:	84 d2                	test   %dl,%dl
    b7c2:	0f 84 7d 00 00 00    	je     b845 <mm_init_ema+0xc5>
    b7c8:	41 f7 c4 7e f8 ff ff 	test   $0xfffff87e,%r12d
    b7cf:	75 6f                	jne    b840 <mm_init_ema+0xc0>
    b7d1:	41 83 fd 07          	cmp    $0x7,%r13d
    b7d5:	77 69                	ja     b840 <mm_init_ema+0xc0>
    b7d7:	48 89 e1             	mov    %rsp,%rcx
    b7da:	48 89 ea             	mov    %rbp,%rdx
    b7dd:	48 8d 3d 84 e8 00 00 	lea    0xe884(%rip),%rdi        # 1a068 <g_rts_ema_root>
    b7e4:	48 89 de             	mov    %rbx,%rsi
    b7e7:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b7ee:	00 
    b7ef:	e8 2c e6 ff ff       	call   9e20 <find_free_region_at>
    b7f4:	84 c0                	test   %al,%al
    b7f6:	74 48                	je     b840 <mm_init_ema+0xc0>
    b7f8:	48 83 ec 08          	sub    $0x8,%rsp
    b7fc:	44 89 e1             	mov    %r12d,%ecx
    b7ff:	41 0f b6 d4          	movzbl %r12b,%edx
    b803:	48 89 df             	mov    %rbx,%rdi
    b806:	ff 74 24 08          	push   0x8(%rsp)
    b80a:	81 e1 00 ff 00 00    	and    $0xff00,%ecx
    b810:	4d 89 f9             	mov    %r15,%r9
    b813:	4d 89 f0             	mov    %r14,%r8
    b816:	44 09 e9             	or     %r13d,%ecx
    b819:	48 89 ee             	mov    %rbp,%rsi
    b81c:	48 63 c9             	movslq %ecx,%rcx
    b81f:	e8 dc e6 ff ff       	call   9f00 <ema_new>
    b824:	48 89 c7             	mov    %rax,%rdi
    b827:	58                   	pop    %rax
    b828:	5a                   	pop    %rdx
    b829:	48 85 ff             	test   %rdi,%rdi
    b82c:	74 3a                	je     b868 <mm_init_ema+0xe8>
    b82e:	31 c0                	xor    %eax,%eax
    b830:	41 83 e4 01          	and    $0x1,%r12d
    b834:	75 0f                	jne    b845 <mm_init_ema+0xc5>
    b836:	e8 55 de ff ff       	call   9690 <ema_set_eaccept_full>
    b83b:	eb 08                	jmp    b845 <mm_init_ema+0xc5>
    b83d:	0f 1f 00             	nopl   (%rax)
    b840:	b8 16 00 00 00       	mov    $0x16,%eax
    b845:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    b84a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    b851:	00 00 
    b853:	75 1a                	jne    b86f <mm_init_ema+0xef>
    b855:	48 83 c4 18          	add    $0x18,%rsp
    b859:	5b                   	pop    %rbx
    b85a:	5d                   	pop    %rbp
    b85b:	41 5c                	pop    %r12
    b85d:	41 5d                	pop    %r13
    b85f:	41 5e                	pop    %r14
    b861:	41 5f                	pop    %r15
    b863:	c3                   	ret    
    b864:	0f 1f 40 00          	nopl   0x0(%rax)
    b868:	b8 0c 00 00 00       	mov    $0xc,%eax
    b86d:	eb d6                	jmp    b845 <mm_init_ema+0xc5>
    b86f:	e8 4c 50 00 00       	call   108c0 <__stack_chk_fail>
    b874:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    b87b:	00 00 00 
    b87e:	66 90                	xchg   %ax,%ax

000000000000b880 <mm_alloc>:
    b880:	f3 0f 1e fa          	endbr64 
    b884:	48 83 ec 10          	sub    $0x10,%rsp
    b888:	48 8d 05 d9 e7 00 00 	lea    0xe7d9(%rip),%rax        # 1a068 <g_rts_ema_root>
    b88f:	50                   	push   %rax
    b890:	e8 2b 02 00 00       	call   bac0 <mm_alloc_internal>
    b895:	48 83 c4 18          	add    $0x18,%rsp
    b899:	c3                   	ret    
    b89a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

000000000000b8a0 <mm_commit>:
    b8a0:	f3 0f 1e fa          	endbr64 
    b8a4:	48 8d 15 bd e7 00 00 	lea    0xe7bd(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b8ab:	e9 40 05 00 00       	jmp    bdf0 <mm_commit_internal>

000000000000b8b0 <mm_uncommit>:
    b8b0:	f3 0f 1e fa          	endbr64 
    b8b4:	48 8d 15 ad e7 00 00 	lea    0xe7ad(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b8bb:	e9 00 06 00 00       	jmp    bec0 <mm_uncommit_internal>

000000000000b8c0 <mm_dealloc>:
    b8c0:	f3 0f 1e fa          	endbr64 
    b8c4:	48 8d 15 9d e7 00 00 	lea    0xe79d(%rip),%rdx        # 1a068 <g_rts_ema_root>
    b8cb:	e9 c0 06 00 00       	jmp    bf90 <mm_dealloc_internal>

000000000000b8d0 <mm_commit_data>:
    b8d0:	f3 0f 1e fa          	endbr64 
    b8d4:	4c 8d 05 8d e7 00 00 	lea    0xe78d(%rip),%r8        # 1a068 <g_rts_ema_root>
    b8db:	e9 80 07 00 00       	jmp    c060 <mm_commit_data_internal>

000000000000b8e0 <mm_modify_type>:
    b8e0:	f3 0f 1e fa          	endbr64 
    b8e4:	48 8d 0d 7d e7 00 00 	lea    0xe77d(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b8eb:	e9 90 08 00 00       	jmp    c180 <mm_modify_type_internal>

000000000000b8f0 <mm_modify_permissions>:
    b8f0:	f3 0f 1e fa          	endbr64 
    b8f4:	48 8d 0d 6d e7 00 00 	lea    0xe76d(%rip),%rcx        # 1a068 <g_rts_ema_root>
    b8fb:	e9 40 0a 00 00       	jmp    c340 <mm_modify_permissions_internal>

000000000000b900 <sgx_mm_enclave_pfhandler>:
    b900:	f3 0f 1e fa          	endbr64 
    b904:	41 56                	push   %r14
    b906:	41 55                	push   %r13
    b908:	49 89 fd             	mov    %rdi,%r13
    b90b:	41 54                	push   %r12
    b90d:	55                   	push   %rbp
    b90e:	53                   	push   %rbx
    b90f:	31 db                	xor    %ebx,%ebx
    b911:	48 83 ec 10          	sub    $0x10,%rsp
    b915:	4c 8b 37             	mov    (%rdi),%r14
    b918:	48 8b 3d f1 f0 01 00 	mov    0x1f0f1(%rip),%rdi        # 2aa10 <mm_lock>
    b91f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    b926:	00 00 
    b928:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    b92d:	31 c0                	xor    %eax,%eax
    b92f:	e8 6c 9f ff ff       	call   58a0 <sgx_mm_mutex_lock>
    b934:	85 c0                	test   %eax,%eax
    b936:	74 28                	je     b960 <sgx_mm_enclave_pfhandler+0x60>
    b938:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    b93d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    b944:	00 00 
    b946:	0f 85 50 01 00 00    	jne    ba9c <sgx_mm_enclave_pfhandler+0x19c>
    b94c:	48 83 c4 10          	add    $0x10,%rsp
    b950:	89 d8                	mov    %ebx,%eax
    b952:	5b                   	pop    %rbx
    b953:	5d                   	pop    %rbp
    b954:	41 5c                	pop    %r12
    b956:	41 5d                	pop    %r13
    b958:	41 5e                	pop    %r14
    b95a:	c3                   	ret    
    b95b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    b960:	49 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%r14
    b967:	48 8d 3d 92 e6 00 00 	lea    0xe692(%rip),%rdi        # 1a000 <g_user_ema_root>
    b96e:	89 c3                	mov    %eax,%ebx
    b970:	4c 89 f6             	mov    %r14,%rsi
    b973:	e8 48 de ff ff       	call   97c0 <search_ema>
    b978:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    b97f:	00 
    b980:	48 89 c5             	mov    %rax,%rbp
    b983:	48 85 c0             	test   %rax,%rax
    b986:	0f 84 b4 00 00 00    	je     ba40 <sgx_mm_enclave_pfhandler+0x140>
    b98c:	48 89 e6             	mov    %rsp,%rsi
    b98f:	48 89 ef             	mov    %rbp,%rdi
    b992:	e8 d9 dc ff ff       	call   9670 <ema_fault_handler>
    b997:	49 89 c4             	mov    %rax,%r12
    b99a:	48 85 c0             	test   %rax,%rax
    b99d:	74 21                	je     b9c0 <sgx_mm_enclave_pfhandler+0xc0>
    b99f:	48 8b 3d 6a f0 01 00 	mov    0x1f06a(%rip),%rdi        # 2aa10 <mm_lock>
    b9a6:	e8 15 9f ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    b9ab:	48 8b 34 24          	mov    (%rsp),%rsi
    b9af:	4c 89 ef             	mov    %r13,%rdi
    b9b2:	41 ff d4             	call   *%r12
    b9b5:	89 c3                	mov    %eax,%ebx
    b9b7:	e9 7c ff ff ff       	jmp    b938 <sgx_mm_enclave_pfhandler+0x38>
    b9bc:	0f 1f 40 00          	nopl   0x0(%rax)
    b9c0:	4c 89 f6             	mov    %r14,%rsi
    b9c3:	48 89 ef             	mov    %rbp,%rdi
    b9c6:	e8 c5 dd ff ff       	call   9790 <ema_page_committed>
    b9cb:	84 c0                	test   %al,%al
    b9cd:	74 31                	je     ba00 <sgx_mm_enclave_pfhandler+0x100>
    b9cf:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    b9d4:	0f 84 86 00 00 00    	je     ba60 <sgx_mm_enclave_pfhandler+0x160>
    b9da:	48 89 ef             	mov    %rbp,%rdi
    b9dd:	e8 7e dc ff ff       	call   9660 <get_ema_si_flags>
    b9e2:	48 d1 e8             	shr    %rax
    b9e5:	48 89 c3             	mov    %rax,%rbx
    b9e8:	83 e3 01             	and    $0x1,%ebx
    b9eb:	f7 db                	neg    %ebx
    b9ed:	48 8b 3d 1c f0 01 00 	mov    0x1f01c(%rip),%rdi        # 2aa10 <mm_lock>
    b9f4:	e8 c7 9e ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    b9f9:	e9 3a ff ff ff       	jmp    b938 <sgx_mm_enclave_pfhandler+0x38>
    b9fe:	66 90                	xchg   %ax,%ax
    ba00:	48 89 ef             	mov    %rbp,%rdi
    ba03:	e8 48 dc ff ff       	call   9650 <get_ema_alloc_flags>
    ba08:	a8 04                	test   $0x4,%al
    ba0a:	0f 84 91 00 00 00    	je     baa1 <sgx_mm_enclave_pfhandler+0x1a1>
    ba10:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    ba15:	74 69                	je     ba80 <sgx_mm_enclave_pfhandler+0x180>
    ba17:	48 89 ef             	mov    %rbp,%rdi
    ba1a:	e8 41 dc ff ff       	call   9660 <get_ema_si_flags>
    ba1f:	a8 02                	test   $0x2,%al
    ba21:	74 ca                	je     b9ed <sgx_mm_enclave_pfhandler+0xed>
    ba23:	49 8d 96 00 10 00 00 	lea    0x1000(%r14),%rdx
    ba2a:	4c 89 f6             	mov    %r14,%rsi
    ba2d:	48 89 ef             	mov    %rbp,%rdi
    ba30:	e8 4b e7 ff ff       	call   a180 <ema_do_commit>
    ba35:	85 c0                	test   %eax,%eax
    ba37:	75 68                	jne    baa1 <sgx_mm_enclave_pfhandler+0x1a1>
    ba39:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    ba3e:	eb ad                	jmp    b9ed <sgx_mm_enclave_pfhandler+0xed>
    ba40:	4c 89 f6             	mov    %r14,%rsi
    ba43:	48 8d 3d 1e e6 00 00 	lea    0xe61e(%rip),%rdi        # 1a068 <g_rts_ema_root>
    ba4a:	e8 71 dd ff ff       	call   97c0 <search_ema>
    ba4f:	48 89 c5             	mov    %rax,%rbp
    ba52:	48 85 c0             	test   %rax,%rax
    ba55:	0f 85 31 ff ff ff    	jne    b98c <sgx_mm_enclave_pfhandler+0x8c>
    ba5b:	eb 90                	jmp    b9ed <sgx_mm_enclave_pfhandler+0xed>
    ba5d:	0f 1f 00             	nopl   (%rax)
    ba60:	48 89 ef             	mov    %rbp,%rdi
    ba63:	e8 f8 db ff ff       	call   9660 <get_ema_si_flags>
    ba68:	a8 01                	test   $0x1,%al
    ba6a:	0f 84 7d ff ff ff    	je     b9ed <sgx_mm_enclave_pfhandler+0xed>
    ba70:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    ba75:	74 c2                	je     ba39 <sgx_mm_enclave_pfhandler+0x139>
    ba77:	e9 5e ff ff ff       	jmp    b9da <sgx_mm_enclave_pfhandler+0xda>
    ba7c:	0f 1f 40 00          	nopl   0x0(%rax)
    ba80:	48 89 ef             	mov    %rbp,%rdi
    ba83:	e8 d8 db ff ff       	call   9660 <get_ema_si_flags>
    ba88:	a8 01                	test   $0x1,%al
    ba8a:	0f 84 5d ff ff ff    	je     b9ed <sgx_mm_enclave_pfhandler+0xed>
    ba90:	41 f6 45 08 02       	testb  $0x2,0x8(%r13)
    ba95:	74 8c                	je     ba23 <sgx_mm_enclave_pfhandler+0x123>
    ba97:	e9 7b ff ff ff       	jmp    ba17 <sgx_mm_enclave_pfhandler+0x117>
    ba9c:	e8 1f 4e 00 00       	call   108c0 <__stack_chk_fail>
    baa1:	48 8b 3d 68 ef 01 00 	mov    0x1ef68(%rip),%rdi        # 2aa10 <mm_lock>
    baa8:	e8 13 9e ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    baad:	e8 85 68 00 00       	call   12337 <abort>
    bab2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bab9:	00 00 00 
    babc:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000bac0 <mm_alloc_internal>:
    bac0:	f3 0f 1e fa          	endbr64 
    bac4:	41 57                	push   %r15
    bac6:	41 56                	push   %r14
    bac8:	41 55                	push   %r13
    baca:	41 54                	push   %r12
    bacc:	55                   	push   %rbp
    bacd:	53                   	push   %rbx
    bace:	48 83 ec 68          	sub    $0x68,%rsp
    bad2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bad9:	00 00 
    badb:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    bae0:	31 c0                	xor    %eax,%eax
    bae2:	4c 8b b4 24 a0 00 00 	mov    0xa0(%rsp),%r14
    bae9:	00 
    baea:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
    baf1:	00 00 
    baf3:	f6 c2 07             	test   $0x7,%dl
    baf6:	74 60                	je     bb58 <mm_alloc_internal+0x98>
    baf8:	4c 89 c5             	mov    %r8,%rbp
    bafb:	89 d0                	mov    %edx,%eax
    bafd:	41 89 d0             	mov    %edx,%r8d
    bb00:	25 00 ff 00 00       	and    $0xff00,%eax
    bb05:	41 81 e0 00 ff 00 00 	and    $0xff00,%r8d
    bb0c:	f6 c6 f8             	test   $0xf8,%dh
    bb0f:	75 47                	jne    bb58 <mm_alloc_internal+0x98>
    bb11:	85 c0                	test   %eax,%eax
    bb13:	b8 00 02 00 00       	mov    $0x200,%eax
    bb18:	49 89 f7             	mov    %rsi,%r15
    bb1b:	4c 0f 44 c0          	cmove  %rax,%r8
    bb1f:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    bb25:	75 31                	jne    bb58 <mm_alloc_internal+0x98>
    bb27:	48 89 cb             	mov    %rcx,%rbx
    bb2a:	89 d1                	mov    %edx,%ecx
    bb2c:	4d 89 cc             	mov    %r9,%r12
    bb2f:	c1 e9 18             	shr    $0x18,%ecx
    bb32:	74 54                	je     bb88 <mm_alloc_internal+0xc8>
    bb34:	83 f9 0b             	cmp    $0xb,%ecx
    bb37:	76 1f                	jbe    bb58 <mm_alloc_internal+0x98>
    bb39:	b8 01 00 00 00       	mov    $0x1,%eax
    bb3e:	49 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%r13
    bb45:	48 d3 e0             	shl    %cl,%rax
    bb48:	49 d3 e5             	shl    %cl,%r13
    bb4b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    bb50:	49 f7 d5             	not    %r13
    bb53:	eb 42                	jmp    bb97 <mm_alloc_internal+0xd7>
    bb55:	0f 1f 00             	nopl   (%rax)
    bb58:	b9 16 00 00 00       	mov    $0x16,%ecx
    bb5d:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    bb62:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bb69:	00 00 
    bb6b:	0f 85 41 02 00 00    	jne    bdb2 <mm_alloc_internal+0x2f2>
    bb71:	48 83 c4 68          	add    $0x68,%rsp
    bb75:	89 c8                	mov    %ecx,%eax
    bb77:	5b                   	pop    %rbx
    bb78:	5d                   	pop    %rbp
    bb79:	41 5c                	pop    %r12
    bb7b:	41 5d                	pop    %r13
    bb7d:	41 5e                	pop    %r14
    bb7f:	41 5f                	pop    %r15
    bb81:	c3                   	ret    
    bb82:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bb88:	48 c7 44 24 08 00 10 	movq   $0x1000,0x8(%rsp)
    bb8f:	00 00 
    bb91:	41 bd ff 0f 00 00    	mov    $0xfff,%r13d
    bb97:	48 89 7c 24 38       	mov    %rdi,0x38(%rsp)
    bb9c:	49 21 fd             	and    %rdi,%r13
    bb9f:	75 b7                	jne    bb58 <mm_alloc_internal+0x98>
    bba1:	48 85 ff             	test   %rdi,%rdi
    bba4:	74 23                	je     bbc9 <mm_alloc_internal+0x109>
    bba6:	4c 89 fe             	mov    %r15,%rsi
    bba9:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bbad:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bbb2:	e8 49 9d ff ff       	call   5900 <sgx_mm_is_within_enclave>
    bbb7:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bbbc:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bbc0:	b9 0d 00 00 00       	mov    $0xd,%ecx
    bbc5:	84 c0                	test   %al,%al
    bbc7:	74 94                	je     bb5d <mm_alloc_internal+0x9d>
    bbc9:	48 8b 3d 40 ee 01 00 	mov    0x1ee40(%rip),%rdi        # 2aa10 <mm_lock>
    bbd0:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bbd4:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    bbd9:	e8 c2 9c ff ff       	call   58a0 <sgx_mm_mutex_lock>
    bbde:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    bbe3:	8b 54 24 1c          	mov    0x1c(%rsp),%edx
    bbe7:	b9 0e 00 00 00       	mov    $0xe,%ecx
    bbec:	85 c0                	test   %eax,%eax
    bbee:	0f 85 69 ff ff ff    	jne    bb5d <mm_alloc_internal+0x9d>
    bbf4:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bbf9:	49 83 c8 03          	or     $0x3,%r8
    bbfd:	0f b6 c2             	movzbl %dl,%eax
    bc00:	f6 c2 01             	test   $0x1,%dl
    bc03:	89 44 24 10          	mov    %eax,0x10(%rsp)
    bc07:	4d 0f 44 e8          	cmove  %r8,%r13
    bc0b:	48 85 f6             	test   %rsi,%rsi
    bc0e:	0f 85 9c 00 00 00    	jne    bcb0 <mm_alloc_internal+0x1f0>
    bc14:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bc19:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    bc1e:	48 8d 4c 24 38       	lea    0x38(%rsp),%rcx
    bc23:	4c 89 fe             	mov    %r15,%rsi
    bc26:	4c 89 f7             	mov    %r14,%rdi
    bc29:	e8 e2 de ff ff       	call   9b10 <find_free_region>
    bc2e:	84 c0                	test   %al,%al
    bc30:	0f 84 0a 01 00 00    	je     bd40 <mm_alloc_internal+0x280>
    bc36:	48 83 ec 08          	sub    $0x8,%rsp
    bc3a:	49 89 e9             	mov    %rbp,%r9
    bc3d:	49 89 d8             	mov    %rbx,%r8
    bc40:	4c 89 e9             	mov    %r13,%rcx
    bc43:	ff 74 24 48          	push   0x48(%rsp)
    bc47:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi
    bc4c:	4c 89 fe             	mov    %r15,%rsi
    bc4f:	8b 54 24 20          	mov    0x20(%rsp),%edx
    bc53:	e8 a8 e2 ff ff       	call   9f00 <ema_new>
    bc58:	48 89 c7             	mov    %rax,%rdi
    bc5b:	58                   	pop    %rax
    bc5c:	5a                   	pop    %rdx
    bc5d:	48 85 ff             	test   %rdi,%rdi
    bc60:	0f 84 da 00 00 00    	je     bd40 <mm_alloc_internal+0x280>
    bc66:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    bc6b:	e8 30 f2 ff ff       	call   aea0 <ema_do_alloc>
    bc70:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bc75:	85 c0                	test   %eax,%eax
    bc77:	89 c1                	mov    %eax,%ecx
    bc79:	0f 85 21 01 00 00    	jne    bda0 <mm_alloc_internal+0x2e0>
    bc7f:	4d 85 e4             	test   %r12,%r12
    bc82:	74 09                	je     bc8d <mm_alloc_internal+0x1cd>
    bc84:	48 8b 44 24 38       	mov    0x38(%rsp),%rax
    bc89:	49 89 04 24          	mov    %rax,(%r12)
    bc8d:	48 8b 3d 7c ed 01 00 	mov    0x1ed7c(%rip),%rdi        # 2aa10 <mm_lock>
    bc94:	89 4c 24 08          	mov    %ecx,0x8(%rsp)
    bc98:	e8 23 9c ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    bc9d:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bca1:	e9 b7 fe ff ff       	jmp    bb5d <mm_alloc_internal+0x9d>
    bca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bcad:	00 00 00 
    bcb0:	83 e2 40             	and    $0x40,%edx
    bcb3:	4a 8d 04 3e          	lea    (%rsi,%r15,1),%rax
    bcb7:	48 8d 4c 24 48       	lea    0x48(%rsp),%rcx
    bcbc:	4c 89 f7             	mov    %r14,%rdi
    bcbf:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
    bcc3:	4c 8d 44 24 50       	lea    0x50(%rsp),%r8
    bcc8:	48 89 c2             	mov    %rax,%rdx
    bccb:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
    bcd2:	00 00 
    bcd4:	48 c7 44 24 50 00 00 	movq   $0x0,0x50(%rsp)
    bcdb:	00 00 
    bcdd:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    bce2:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    bce7:	e8 64 db ff ff       	call   9850 <search_ema_range>
    bcec:	85 c0                	test   %eax,%eax
    bcee:	75 60                	jne    bd50 <mm_alloc_internal+0x290>
    bcf0:	55                   	push   %rbp
    bcf1:	4d 89 e9             	mov    %r13,%r9
    bcf4:	53                   	push   %rbx
    bcf5:	48 8b 7c 24 58       	mov    0x58(%rsp),%rdi
    bcfa:	44 8b 44 24 20       	mov    0x20(%rsp),%r8d
    bcff:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    bd04:	48 8b 54 24 38       	mov    0x38(%rsp),%rdx
    bd09:	48 8b 74 24 60       	mov    0x60(%rsp),%rsi
    bd0e:	e8 3d f0 ff ff       	call   ad50 <ema_realloc_from_reserve_range>
    bd13:	41 58                	pop    %r8
    bd15:	41 59                	pop    %r9
    bd17:	48 89 c7             	mov    %rax,%rdi
    bd1a:	48 85 c0             	test   %rax,%rax
    bd1d:	0f 85 43 ff ff ff    	jne    bc66 <mm_alloc_internal+0x1a6>
    bd23:	8b 7c 24 1c          	mov    0x1c(%rsp),%edi
    bd27:	b9 11 00 00 00       	mov    $0x11,%ecx
    bd2c:	85 ff                	test   %edi,%edi
    bd2e:	0f 84 e0 fe ff ff    	je     bc14 <mm_alloc_internal+0x154>
    bd34:	e9 54 ff ff ff       	jmp    bc8d <mm_alloc_internal+0x1cd>
    bd39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    bd40:	b9 0c 00 00 00       	mov    $0xc,%ecx
    bd45:	e9 43 ff ff ff       	jmp    bc8d <mm_alloc_internal+0x1cd>
    bd4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    bd50:	4c 8d 44 24 40       	lea    0x40(%rsp),%r8
    bd55:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
    bd5a:	4c 89 fa             	mov    %r15,%rdx
    bd5d:	4c 89 f7             	mov    %r14,%rdi
    bd60:	4c 89 c1             	mov    %r8,%rcx
    bd63:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    bd68:	e8 b3 e0 ff ff       	call   9e20 <find_free_region_at>
    bd6d:	3c 01                	cmp    $0x1,%al
    bd6f:	0f 84 c1 fe ff ff    	je     bc36 <mm_alloc_internal+0x176>
    bd75:	8b 74 24 1c          	mov    0x1c(%rsp),%esi
    bd79:	b9 01 00 00 00       	mov    $0x1,%ecx
    bd7e:	85 f6                	test   %esi,%esi
    bd80:	0f 85 07 ff ff ff    	jne    bc8d <mm_alloc_internal+0x1cd>
    bd86:	84 c0                	test   %al,%al
    bd88:	4c 8b 44 24 20       	mov    0x20(%rsp),%r8
    bd8d:	0f 84 86 fe ff ff    	je     bc19 <mm_alloc_internal+0x159>
    bd93:	e9 9e fe ff ff       	jmp    bc36 <mm_alloc_internal+0x176>
    bd98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    bd9f:	00 
    bda0:	89 44 24 08          	mov    %eax,0x8(%rsp)
    bda4:	e8 67 e2 ff ff       	call   a010 <ema_destroy>
    bda9:	8b 4c 24 08          	mov    0x8(%rsp),%ecx
    bdad:	e9 db fe ff ff       	jmp    bc8d <mm_alloc_internal+0x1cd>
    bdb2:	e8 09 4b 00 00       	call   108c0 <__stack_chk_fail>
    bdb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bdbe:	00 00 

000000000000bdc0 <sgx_mm_alloc>:
    bdc0:	f3 0f 1e fa          	endbr64 
    bdc4:	f6 c2 80             	test   $0x80,%dl
    bdc7:	75 17                	jne    bde0 <sgx_mm_alloc+0x20>
    bdc9:	48 83 ec 10          	sub    $0x10,%rsp
    bdcd:	48 8d 05 2c e2 00 00 	lea    0xe22c(%rip),%rax        # 1a000 <g_user_ema_root>
    bdd4:	50                   	push   %rax
    bdd5:	e8 e6 fc ff ff       	call   bac0 <mm_alloc_internal>
    bdda:	48 83 c4 18          	add    $0x18,%rsp
    bdde:	c3                   	ret    
    bddf:	90                   	nop
    bde0:	b8 16 00 00 00       	mov    $0x16,%eax
    bde5:	c3                   	ret    
    bde6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    bded:	00 00 00 

000000000000bdf0 <mm_commit_internal>:
    bdf0:	f3 0f 1e fa          	endbr64 
    bdf4:	41 55                	push   %r13
    bdf6:	49 89 d5             	mov    %rdx,%r13
    bdf9:	41 54                	push   %r12
    bdfb:	49 89 fc             	mov    %rdi,%r12
    bdfe:	55                   	push   %rbp
    bdff:	48 89 f5             	mov    %rsi,%rbp
    be02:	53                   	push   %rbx
    be03:	bb 0e 00 00 00       	mov    $0xe,%ebx
    be08:	48 83 ec 28          	sub    $0x28,%rsp
    be0c:	48 8b 3d fd eb 01 00 	mov    0x1ebfd(%rip),%rdi        # 2aa10 <mm_lock>
    be13:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    be1a:	00 00 
    be1c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    be21:	31 c0                	xor    %eax,%eax
    be23:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    be2a:	00 00 
    be2c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    be33:	00 00 
    be35:	e8 66 9a ff ff       	call   58a0 <sgx_mm_mutex_lock>
    be3a:	85 c0                	test   %eax,%eax
    be3c:	75 47                	jne    be85 <mm_commit_internal+0x95>
    be3e:	4c 01 e5             	add    %r12,%rbp
    be41:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    be46:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    be4b:	4c 89 e6             	mov    %r12,%rsi
    be4e:	48 89 ea             	mov    %rbp,%rdx
    be51:	4c 89 ef             	mov    %r13,%rdi
    be54:	bb 16 00 00 00       	mov    $0x16,%ebx
    be59:	e8 f2 d9 ff ff       	call   9850 <search_ema_range>
    be5e:	85 c0                	test   %eax,%eax
    be60:	78 17                	js     be79 <mm_commit_internal+0x89>
    be62:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    be67:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    be6c:	48 89 e9             	mov    %rbp,%rcx
    be6f:	4c 89 e2             	mov    %r12,%rdx
    be72:	e8 f9 e3 ff ff       	call   a270 <ema_do_commit_loop>
    be77:	89 c3                	mov    %eax,%ebx
    be79:	48 8b 3d 90 eb 01 00 	mov    0x1eb90(%rip),%rdi        # 2aa10 <mm_lock>
    be80:	e8 3b 9a ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    be85:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    be8a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    be91:	00 00 
    be93:	75 0d                	jne    bea2 <mm_commit_internal+0xb2>
    be95:	48 83 c4 28          	add    $0x28,%rsp
    be99:	89 d8                	mov    %ebx,%eax
    be9b:	5b                   	pop    %rbx
    be9c:	5d                   	pop    %rbp
    be9d:	41 5c                	pop    %r12
    be9f:	41 5d                	pop    %r13
    bea1:	c3                   	ret    
    bea2:	e8 19 4a 00 00       	call   108c0 <__stack_chk_fail>
    bea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    beae:	00 00 

000000000000beb0 <sgx_mm_commit>:
    beb0:	f3 0f 1e fa          	endbr64 
    beb4:	48 8d 15 45 e1 00 00 	lea    0xe145(%rip),%rdx        # 1a000 <g_user_ema_root>
    bebb:	e9 30 ff ff ff       	jmp    bdf0 <mm_commit_internal>

000000000000bec0 <mm_uncommit_internal>:
    bec0:	f3 0f 1e fa          	endbr64 
    bec4:	41 55                	push   %r13
    bec6:	49 89 d5             	mov    %rdx,%r13
    bec9:	41 54                	push   %r12
    becb:	49 89 fc             	mov    %rdi,%r12
    bece:	55                   	push   %rbp
    becf:	48 89 f5             	mov    %rsi,%rbp
    bed2:	53                   	push   %rbx
    bed3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bed8:	48 83 ec 28          	sub    $0x28,%rsp
    bedc:	48 8b 3d 2d eb 01 00 	mov    0x1eb2d(%rip),%rdi        # 2aa10 <mm_lock>
    bee3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    beea:	00 00 
    beec:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bef1:	31 c0                	xor    %eax,%eax
    bef3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    befa:	00 00 
    befc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bf03:	00 00 
    bf05:	e8 96 99 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    bf0a:	85 c0                	test   %eax,%eax
    bf0c:	75 47                	jne    bf55 <mm_uncommit_internal+0x95>
    bf0e:	4c 01 e5             	add    %r12,%rbp
    bf11:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bf16:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bf1b:	4c 89 e6             	mov    %r12,%rsi
    bf1e:	48 89 ea             	mov    %rbp,%rdx
    bf21:	4c 89 ef             	mov    %r13,%rdi
    bf24:	bb 16 00 00 00       	mov    $0x16,%ebx
    bf29:	e8 22 d9 ff ff       	call   9850 <search_ema_range>
    bf2e:	85 c0                	test   %eax,%eax
    bf30:	78 17                	js     bf49 <mm_uncommit_internal+0x89>
    bf32:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    bf37:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    bf3c:	48 89 e9             	mov    %rbp,%rcx
    bf3f:	4c 89 e2             	mov    %r12,%rdx
    bf42:	e8 69 e9 ff ff       	call   a8b0 <ema_do_uncommit_loop>
    bf47:	89 c3                	mov    %eax,%ebx
    bf49:	48 8b 3d c0 ea 01 00 	mov    0x1eac0(%rip),%rdi        # 2aa10 <mm_lock>
    bf50:	e8 6b 99 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    bf55:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    bf5a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    bf61:	00 00 
    bf63:	75 0d                	jne    bf72 <mm_uncommit_internal+0xb2>
    bf65:	48 83 c4 28          	add    $0x28,%rsp
    bf69:	89 d8                	mov    %ebx,%eax
    bf6b:	5b                   	pop    %rbx
    bf6c:	5d                   	pop    %rbp
    bf6d:	41 5c                	pop    %r12
    bf6f:	41 5d                	pop    %r13
    bf71:	c3                   	ret    
    bf72:	e8 49 49 00 00       	call   108c0 <__stack_chk_fail>
    bf77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    bf7e:	00 00 

000000000000bf80 <sgx_mm_uncommit>:
    bf80:	f3 0f 1e fa          	endbr64 
    bf84:	48 8d 15 75 e0 00 00 	lea    0xe075(%rip),%rdx        # 1a000 <g_user_ema_root>
    bf8b:	e9 30 ff ff ff       	jmp    bec0 <mm_uncommit_internal>

000000000000bf90 <mm_dealloc_internal>:
    bf90:	f3 0f 1e fa          	endbr64 
    bf94:	41 55                	push   %r13
    bf96:	49 89 d5             	mov    %rdx,%r13
    bf99:	41 54                	push   %r12
    bf9b:	49 89 fc             	mov    %rdi,%r12
    bf9e:	55                   	push   %rbp
    bf9f:	48 89 f5             	mov    %rsi,%rbp
    bfa2:	53                   	push   %rbx
    bfa3:	bb 0e 00 00 00       	mov    $0xe,%ebx
    bfa8:	48 83 ec 28          	sub    $0x28,%rsp
    bfac:	48 8b 3d 5d ea 01 00 	mov    0x1ea5d(%rip),%rdi        # 2aa10 <mm_lock>
    bfb3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    bfba:	00 00 
    bfbc:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    bfc1:	31 c0                	xor    %eax,%eax
    bfc3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    bfca:	00 00 
    bfcc:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    bfd3:	00 00 
    bfd5:	e8 c6 98 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    bfda:	85 c0                	test   %eax,%eax
    bfdc:	75 47                	jne    c025 <mm_dealloc_internal+0x95>
    bfde:	4c 01 e5             	add    %r12,%rbp
    bfe1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    bfe6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    bfeb:	4c 89 e6             	mov    %r12,%rsi
    bfee:	48 89 ea             	mov    %rbp,%rdx
    bff1:	4c 89 ef             	mov    %r13,%rdi
    bff4:	bb 16 00 00 00       	mov    $0x16,%ebx
    bff9:	e8 52 d8 ff ff       	call   9850 <search_ema_range>
    bffe:	85 c0                	test   %eax,%eax
    c000:	78 17                	js     c019 <mm_dealloc_internal+0x89>
    c002:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c007:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c00c:	48 89 e9             	mov    %rbp,%rcx
    c00f:	4c 89 e2             	mov    %r12,%rdx
    c012:	e8 49 e8 ff ff       	call   a860 <ema_do_dealloc_loop>
    c017:	89 c3                	mov    %eax,%ebx
    c019:	48 8b 3d f0 e9 01 00 	mov    0x1e9f0(%rip),%rdi        # 2aa10 <mm_lock>
    c020:	e8 9b 98 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c025:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c02a:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c031:	00 00 
    c033:	75 0d                	jne    c042 <mm_dealloc_internal+0xb2>
    c035:	48 83 c4 28          	add    $0x28,%rsp
    c039:	89 d8                	mov    %ebx,%eax
    c03b:	5b                   	pop    %rbx
    c03c:	5d                   	pop    %rbp
    c03d:	41 5c                	pop    %r12
    c03f:	41 5d                	pop    %r13
    c041:	c3                   	ret    
    c042:	e8 79 48 00 00       	call   108c0 <__stack_chk_fail>
    c047:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c04e:	00 00 

000000000000c050 <sgx_mm_dealloc>:
    c050:	f3 0f 1e fa          	endbr64 
    c054:	48 8d 15 a5 df 00 00 	lea    0xdfa5(%rip),%rdx        # 1a000 <g_user_ema_root>
    c05b:	e9 30 ff ff ff       	jmp    bf90 <mm_dealloc_internal>

000000000000c060 <mm_commit_data_internal>:
    c060:	f3 0f 1e fa          	endbr64 
    c064:	41 57                	push   %r15
    c066:	41 56                	push   %r14
    c068:	41 55                	push   %r13
    c06a:	41 54                	push   %r12
    c06c:	55                   	push   %rbp
    c06d:	53                   	push   %rbx
    c06e:	48 83 ec 28          	sub    $0x28,%rsp
    c072:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c079:	00 00 
    c07b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c080:	31 c0                	xor    %eax,%eax
    c082:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c089:	00 00 
    c08b:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c092:	00 00 
    c094:	48 85 f6             	test   %rsi,%rsi
    c097:	0f 84 a3 00 00 00    	je     c140 <mm_commit_data_internal+0xe0>
    c09d:	48 89 d0             	mov    %rdx,%rax
    c0a0:	49 89 fc             	mov    %rdi,%r12
    c0a3:	48 89 f3             	mov    %rsi,%rbx
    c0a6:	48 89 d5             	mov    %rdx,%rbp
    c0a9:	48 09 f0             	or     %rsi,%rax
    c0ac:	48 09 f8             	or     %rdi,%rax
    c0af:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c0b4:	0f 85 86 00 00 00    	jne    c140 <mm_commit_data_internal+0xe0>
    c0ba:	41 89 cf             	mov    %ecx,%r15d
    c0bd:	83 f9 07             	cmp    $0x7,%ecx
    c0c0:	77 7e                	ja     c140 <mm_commit_data_internal+0xe0>
    c0c2:	48 89 d7             	mov    %rdx,%rdi
    c0c5:	4d 89 c6             	mov    %r8,%r14
    c0c8:	e8 33 98 ff ff       	call   5900 <sgx_mm_is_within_enclave>
    c0cd:	84 c0                	test   %al,%al
    c0cf:	74 6f                	je     c140 <mm_commit_data_internal+0xe0>
    c0d1:	48 8b 3d 38 e9 01 00 	mov    0x1e938(%rip),%rdi        # 2aa10 <mm_lock>
    c0d8:	41 bd 0e 00 00 00    	mov    $0xe,%r13d
    c0de:	e8 bd 97 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c0e3:	85 c0                	test   %eax,%eax
    c0e5:	75 5f                	jne    c146 <mm_commit_data_internal+0xe6>
    c0e7:	4c 01 e3             	add    %r12,%rbx
    c0ea:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c0ef:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c0f4:	4c 89 e6             	mov    %r12,%rsi
    c0f7:	48 89 da             	mov    %rbx,%rdx
    c0fa:	4c 89 f7             	mov    %r14,%rdi
    c0fd:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c103:	e8 48 d7 ff ff       	call   9850 <search_ema_range>
    c108:	85 c0                	test   %eax,%eax
    c10a:	78 1e                	js     c12a <mm_commit_data_internal+0xca>
    c10c:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c111:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c116:	45 89 f9             	mov    %r15d,%r9d
    c119:	49 89 e8             	mov    %rbp,%r8
    c11c:	48 89 d9             	mov    %rbx,%rcx
    c11f:	4c 89 e2             	mov    %r12,%rdx
    c122:	e8 a9 ea ff ff       	call   abd0 <ema_do_commit_data_loop>
    c127:	41 89 c5             	mov    %eax,%r13d
    c12a:	48 8b 3d df e8 01 00 	mov    0x1e8df(%rip),%rdi        # 2aa10 <mm_lock>
    c131:	e8 8a 97 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c136:	eb 0e                	jmp    c146 <mm_commit_data_internal+0xe6>
    c138:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c13f:	00 
    c140:	41 bd 16 00 00 00    	mov    $0x16,%r13d
    c146:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c14b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c152:	00 00 
    c154:	75 12                	jne    c168 <mm_commit_data_internal+0x108>
    c156:	48 83 c4 28          	add    $0x28,%rsp
    c15a:	44 89 e8             	mov    %r13d,%eax
    c15d:	5b                   	pop    %rbx
    c15e:	5d                   	pop    %rbp
    c15f:	41 5c                	pop    %r12
    c161:	41 5d                	pop    %r13
    c163:	41 5e                	pop    %r14
    c165:	41 5f                	pop    %r15
    c167:	c3                   	ret    
    c168:	e8 53 47 00 00       	call   108c0 <__stack_chk_fail>
    c16d:	0f 1f 00             	nopl   (%rax)

000000000000c170 <sgx_mm_commit_data>:
    c170:	f3 0f 1e fa          	endbr64 
    c174:	4c 8d 05 85 de 00 00 	lea    0xde85(%rip),%r8        # 1a000 <g_user_ema_root>
    c17b:	e9 e0 fe ff ff       	jmp    c060 <mm_commit_data_internal>

000000000000c180 <mm_modify_type_internal>:
    c180:	f3 0f 1e fa          	endbr64 
    c184:	41 54                	push   %r12
    c186:	55                   	push   %rbp
    c187:	bd 01 00 00 00       	mov    $0x1,%ebp
    c18c:	53                   	push   %rbx
    c18d:	48 83 ec 20          	sub    $0x20,%rsp
    c191:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c198:	00 00 
    c19a:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c19f:	31 c0                	xor    %eax,%eax
    c1a1:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c1a7:	0f 85 83 00 00 00    	jne    c230 <mm_modify_type_internal+0xb0>
    c1ad:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c1b4:	0f 85 96 00 00 00    	jne    c250 <mm_modify_type_internal+0xd0>
    c1ba:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c1c1:	00 00 
    c1c3:	49 89 fc             	mov    %rdi,%r12
    c1c6:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c1cd:	00 00 
    c1cf:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c1d5:	75 79                	jne    c250 <mm_modify_type_internal+0xd0>
    c1d7:	48 8b 3d 32 e8 01 00 	mov    0x1e832(%rip),%rdi        # 2aa10 <mm_lock>
    c1de:	48 89 cb             	mov    %rcx,%rbx
    c1e1:	bd 0e 00 00 00       	mov    $0xe,%ebp
    c1e6:	e8 b5 96 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c1eb:	85 c0                	test   %eax,%eax
    c1ed:	75 41                	jne    c230 <mm_modify_type_internal+0xb0>
    c1ef:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c1f4:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c1f9:	4c 89 e6             	mov    %r12,%rsi
    c1fc:	48 89 df             	mov    %rbx,%rdi
    c1ff:	49 8d 94 24 00 10 00 	lea    0x1000(%r12),%rdx
    c206:	00 
    c207:	bd 16 00 00 00       	mov    $0x16,%ebp
    c20c:	e8 3f d6 ff ff       	call   9850 <search_ema_range>
    c211:	85 c0                	test   %eax,%eax
    c213:	78 0f                	js     c224 <mm_modify_type_internal+0xa4>
    c215:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c21a:	4c 89 e6             	mov    %r12,%rsi
    c21d:	e8 1e e1 ff ff       	call   a340 <ema_change_to_tcs>
    c222:	89 c5                	mov    %eax,%ebp
    c224:	48 8b 3d e5 e7 01 00 	mov    0x1e7e5(%rip),%rdi        # 2aa10 <mm_lock>
    c22b:	e8 90 96 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c230:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c235:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c23c:	00 00 
    c23e:	75 17                	jne    c257 <mm_modify_type_internal+0xd7>
    c240:	48 83 c4 20          	add    $0x20,%rsp
    c244:	89 e8                	mov    %ebp,%eax
    c246:	5b                   	pop    %rbx
    c247:	5d                   	pop    %rbp
    c248:	41 5c                	pop    %r12
    c24a:	c3                   	ret    
    c24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    c250:	bd 16 00 00 00       	mov    $0x16,%ebp
    c255:	eb d9                	jmp    c230 <mm_modify_type_internal+0xb0>
    c257:	e8 64 46 00 00       	call   108c0 <__stack_chk_fail>
    c25c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c260 <sgx_mm_modify_type>:
    c260:	f3 0f 1e fa          	endbr64 
    c264:	55                   	push   %rbp
    c265:	53                   	push   %rbx
    c266:	bb 01 00 00 00       	mov    $0x1,%ebx
    c26b:	48 83 ec 28          	sub    $0x28,%rsp
    c26f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c276:	00 00 
    c278:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c27d:	31 c0                	xor    %eax,%eax
    c27f:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    c285:	0f 85 85 00 00 00    	jne    c310 <sgx_mm_modify_type+0xb0>
    c28b:	48 81 fe 00 10 00 00 	cmp    $0x1000,%rsi
    c292:	0f 85 98 00 00 00    	jne    c330 <sgx_mm_modify_type+0xd0>
    c298:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c29f:	00 00 
    c2a1:	48 89 fd             	mov    %rdi,%rbp
    c2a4:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c2ab:	00 00 
    c2ad:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    c2b3:	75 7b                	jne    c330 <sgx_mm_modify_type+0xd0>
    c2b5:	48 8b 3d 54 e7 01 00 	mov    0x1e754(%rip),%rdi        # 2aa10 <mm_lock>
    c2bc:	bb 0e 00 00 00       	mov    $0xe,%ebx
    c2c1:	e8 da 95 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c2c6:	85 c0                	test   %eax,%eax
    c2c8:	75 46                	jne    c310 <sgx_mm_modify_type+0xb0>
    c2ca:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c2cf:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c2d4:	48 89 ee             	mov    %rbp,%rsi
    c2d7:	bb 16 00 00 00       	mov    $0x16,%ebx
    c2dc:	48 8d 95 00 10 00 00 	lea    0x1000(%rbp),%rdx
    c2e3:	48 8d 3d 16 dd 00 00 	lea    0xdd16(%rip),%rdi        # 1a000 <g_user_ema_root>
    c2ea:	e8 61 d5 ff ff       	call   9850 <search_ema_range>
    c2ef:	85 c0                	test   %eax,%eax
    c2f1:	78 0f                	js     c302 <sgx_mm_modify_type+0xa2>
    c2f3:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c2f8:	48 89 ee             	mov    %rbp,%rsi
    c2fb:	e8 40 e0 ff ff       	call   a340 <ema_change_to_tcs>
    c300:	89 c3                	mov    %eax,%ebx
    c302:	48 8b 3d 07 e7 01 00 	mov    0x1e707(%rip),%rdi        # 2aa10 <mm_lock>
    c309:	e8 b2 95 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c30e:	66 90                	xchg   %ax,%ax
    c310:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c315:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c31c:	00 00 
    c31e:	75 17                	jne    c337 <sgx_mm_modify_type+0xd7>
    c320:	48 83 c4 28          	add    $0x28,%rsp
    c324:	89 d8                	mov    %ebx,%eax
    c326:	5b                   	pop    %rbx
    c327:	5d                   	pop    %rbp
    c328:	c3                   	ret    
    c329:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c330:	bb 16 00 00 00       	mov    $0x16,%ebx
    c335:	eb d9                	jmp    c310 <sgx_mm_modify_type+0xb0>
    c337:	e8 84 45 00 00       	call   108c0 <__stack_chk_fail>
    c33c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c340 <mm_modify_permissions_internal>:
    c340:	f3 0f 1e fa          	endbr64 
    c344:	41 56                	push   %r14
    c346:	41 55                	push   %r13
    c348:	41 54                	push   %r12
    c34a:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c350:	55                   	push   %rbp
    c351:	53                   	push   %rbx
    c352:	48 83 ec 20          	sub    $0x20,%rsp
    c356:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c35d:	00 00 
    c35f:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    c364:	31 c0                	xor    %eax,%eax
    c366:	48 85 f6             	test   %rsi,%rsi
    c369:	0f 84 9b 00 00 00    	je     c40a <mm_modify_permissions_internal+0xca>
    c36f:	48 89 f8             	mov    %rdi,%rax
    c372:	48 89 fd             	mov    %rdi,%rbp
    c375:	48 89 f3             	mov    %rsi,%rbx
    c378:	48 09 f0             	or     %rsi,%rax
    c37b:	a9 ff 0f 00 00       	test   $0xfff,%eax
    c380:	0f 85 84 00 00 00    	jne    c40a <mm_modify_permissions_internal+0xca>
    c386:	89 d0                	mov    %edx,%eax
    c388:	41 89 d6             	mov    %edx,%r14d
    c38b:	83 e0 05             	and    $0x5,%eax
    c38e:	83 f8 04             	cmp    $0x4,%eax
    c391:	74 77                	je     c40a <mm_modify_permissions_internal+0xca>
    c393:	48 8b 3d 76 e6 01 00 	mov    0x1e676(%rip),%rdi        # 2aa10 <mm_lock>
    c39a:	49 89 cd             	mov    %rcx,%r13
    c39d:	41 bc 0e 00 00 00    	mov    $0xe,%r12d
    c3a3:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    c3aa:	00 00 
    c3ac:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    c3b3:	00 00 
    c3b5:	e8 e6 94 ff ff       	call   58a0 <sgx_mm_mutex_lock>
    c3ba:	85 c0                	test   %eax,%eax
    c3bc:	75 4c                	jne    c40a <mm_modify_permissions_internal+0xca>
    c3be:	48 01 eb             	add    %rbp,%rbx
    c3c1:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    c3c6:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    c3cb:	48 89 ee             	mov    %rbp,%rsi
    c3ce:	48 89 da             	mov    %rbx,%rdx
    c3d1:	4c 89 ef             	mov    %r13,%rdi
    c3d4:	41 bc 16 00 00 00    	mov    $0x16,%r12d
    c3da:	e8 71 d4 ff ff       	call   9850 <search_ema_range>
    c3df:	85 c0                	test   %eax,%eax
    c3e1:	78 1b                	js     c3fe <mm_modify_permissions_internal+0xbe>
    c3e3:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    c3e8:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    c3ed:	45 89 f0             	mov    %r14d,%r8d
    c3f0:	48 89 d9             	mov    %rbx,%rcx
    c3f3:	48 89 ea             	mov    %rbp,%rdx
    c3f6:	e8 d5 e5 ff ff       	call   a9d0 <ema_modify_permissions_loop>
    c3fb:	41 89 c4             	mov    %eax,%r12d
    c3fe:	48 8b 3d 0b e6 01 00 	mov    0x1e60b(%rip),%rdi        # 2aa10 <mm_lock>
    c405:	e8 b6 94 ff ff       	call   58c0 <sgx_mm_mutex_unlock>
    c40a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    c40f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c416:	00 00 
    c418:	75 10                	jne    c42a <mm_modify_permissions_internal+0xea>
    c41a:	48 83 c4 20          	add    $0x20,%rsp
    c41e:	44 89 e0             	mov    %r12d,%eax
    c421:	5b                   	pop    %rbx
    c422:	5d                   	pop    %rbp
    c423:	41 5c                	pop    %r12
    c425:	41 5d                	pop    %r13
    c427:	41 5e                	pop    %r14
    c429:	c3                   	ret    
    c42a:	e8 91 44 00 00       	call   108c0 <__stack_chk_fail>
    c42f:	90                   	nop

000000000000c430 <sgx_mm_modify_permissions>:
    c430:	f3 0f 1e fa          	endbr64 
    c434:	48 8d 0d c5 db 00 00 	lea    0xdbc5(%rip),%rcx        # 1a000 <g_user_ema_root>
    c43b:	e9 00 ff ff ff       	jmp    c340 <mm_modify_permissions_internal>

000000000000c440 <sgx_mm_init>:
    c440:	f3 0f 1e fa          	endbr64 
    c444:	55                   	push   %rbp
    c445:	48 89 fd             	mov    %rdi,%rbp
    c448:	53                   	push   %rbx
    c449:	48 89 f3             	mov    %rsi,%rbx
    c44c:	48 83 ec 08          	sub    $0x8,%rsp
    c450:	e8 0b 94 ff ff       	call   5860 <sgx_mm_mutex_create>
    c455:	48 89 05 b4 e5 01 00 	mov    %rax,0x1e5b4(%rip)        # 2aa10 <mm_lock>
    c45c:	48 85 c0             	test   %rax,%rax
    c45f:	74 2f                	je     c490 <sgx_mm_init+0x50>
    c461:	48 8d 3d 98 f4 ff ff 	lea    -0xb68(%rip),%rdi        # b900 <sgx_mm_enclave_pfhandler>
    c468:	48 89 2d 99 e5 01 00 	mov    %rbp,0x1e599(%rip)        # 2aa08 <mm_user_base>
    c46f:	48 89 1d 8a e5 01 00 	mov    %rbx,0x1e58a(%rip)        # 2aa00 <mm_user_end>
    c476:	e8 85 93 ff ff       	call   5800 <sgx_mm_register_pfhandler>
    c47b:	84 c0                	test   %al,%al
    c47d:	74 11                	je     c490 <sgx_mm_init+0x50>
    c47f:	48 83 c4 08          	add    $0x8,%rsp
    c483:	31 c0                	xor    %eax,%eax
    c485:	5b                   	pop    %rbx
    c486:	5d                   	pop    %rbp
    c487:	c3                   	ret    
    c488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    c48f:	00 
    c490:	48 83 c4 08          	add    $0x8,%rsp
    c494:	b8 0e 00 00 00       	mov    $0xe,%eax
    c499:	5b                   	pop    %rbx
    c49a:	5d                   	pop    %rbp
    c49b:	c3                   	ret    
    c49c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c4a0 <alloca>:
    c4a0:	f3 0f 1e fa          	endbr64 
    c4a4:	5a                   	pop    %rdx
    c4a5:	48 89 e1             	mov    %rsp,%rcx
    c4a8:	48 83 c7 0f          	add    $0xf,%rdi
    c4ac:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    c4b0:	48 29 fc             	sub    %rdi,%rsp
    c4b3:	48 89 e0             	mov    %rsp,%rax
    c4b6:	3e ff e2             	notrack jmp *%rdx
    c4b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

000000000000c4c0 <heap_init>:
    c4c0:	f3 0f 1e fa          	endbr64 
    c4c4:	48 89 f8             	mov    %rdi,%rax
    c4c7:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    c4cd:	48 85 ff             	test   %rdi,%rdi
    c4d0:	75 0e                	jne    c4e0 <heap_init+0x20>
    c4d2:	44 89 c0             	mov    %r8d,%eax
    c4d5:	c3                   	ret    
    c4d6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c4dd:	00 00 00 
    c4e0:	48 89 f7             	mov    %rsi,%rdi
    c4e3:	49 89 c1             	mov    %rax,%r9
    c4e6:	48 09 d7             	or     %rdx,%rdi
    c4e9:	41 81 e1 ff 0f 00 00 	and    $0xfff,%r9d
    c4f0:	81 e7 ff 0f 00 00    	and    $0xfff,%edi
    c4f6:	48 0b 3d 53 b9 00 00 	or     0xb953(%rip),%rdi        # 17e50 <heap_base>
    c4fd:	4c 09 cf             	or     %r9,%rdi
    c500:	75 d0                	jne    c4d2 <heap_init+0x12>
    c502:	45 31 c0             	xor    %r8d,%r8d
    c505:	48 89 05 44 b9 00 00 	mov    %rax,0xb944(%rip)        # 17e50 <heap_base>
    c50c:	48 89 35 35 b9 00 00 	mov    %rsi,0xb935(%rip)        # 17e48 <heap_size>
    c513:	44 89 c0             	mov    %r8d,%eax
    c516:	48 89 15 1b b9 00 00 	mov    %rdx,0xb91b(%rip)        # 17e38 <heap_min_size>
    c51d:	89 0d 1d b9 00 00    	mov    %ecx,0xb91d(%rip)        # 17e40 <is_edmm_supported>
    c523:	c3                   	ret    
    c524:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    c52b:	00 00 00 
    c52e:	66 90                	xchg   %ax,%ax

000000000000c530 <sbrk>:
    c530:	f3 0f 1e fa          	endbr64 
    c534:	55                   	push   %rbp
    c535:	53                   	push   %rbx
    c536:	48 83 ec 08          	sub    $0x8,%rsp
    c53a:	48 8b 05 0f b9 00 00 	mov    0xb90f(%rip),%rax        # 17e50 <heap_base>
    c541:	48 85 c0             	test   %rax,%rax
    c544:	0f 84 e6 00 00 00    	je     c630 <sbrk+0x100>
    c54a:	48 8b 1d c7 e4 01 00 	mov    0x1e4c7(%rip),%rbx        # 2aa18 <heap_used.0>
    c551:	48 85 ff             	test   %rdi,%rdi
    c554:	0f 88 86 00 00 00    	js     c5e0 <sbrk+0xb0>
    c55a:	48 89 fa             	mov    %rdi,%rdx
    c55d:	48 01 da             	add    %rbx,%rdx
    c560:	0f 82 ca 00 00 00    	jb     c630 <sbrk+0x100>
    c566:	48 39 15 db b8 00 00 	cmp    %rdx,0xb8db(%rip)        # 17e48 <heap_size>
    c56d:	0f 82 bd 00 00 00    	jb     c630 <sbrk+0x100>
    c573:	48 8d 2c 18          	lea    (%rax,%rbx,1),%rbp
    c577:	48 85 ff             	test   %rdi,%rdi
    c57a:	74 53                	je     c5cf <sbrk+0x9f>
    c57c:	48 8b 0d 9d e4 01 00 	mov    0x1e49d(%rip),%rcx        # 2aa20 <g_peak_heap_used>
    c583:	48 89 15 8e e4 01 00 	mov    %rdx,0x1e48e(%rip)        # 2aa18 <heap_used.0>
    c58a:	48 39 d1             	cmp    %rdx,%rcx
    c58d:	48 0f 42 ca          	cmovb  %rdx,%rcx
    c591:	48 89 0d 88 e4 01 00 	mov    %rcx,0x1e488(%rip)        # 2aa20 <g_peak_heap_used>
    c598:	8b 0d a2 b8 00 00    	mov    0xb8a2(%rip),%ecx        # 17e40 <is_edmm_supported>
    c59e:	85 c9                	test   %ecx,%ecx
    c5a0:	74 2d                	je     c5cf <sbrk+0x9f>
    c5a2:	48 8b 0d 8f b8 00 00 	mov    0xb88f(%rip),%rcx        # 17e38 <heap_min_size>
    c5a9:	48 39 d1             	cmp    %rdx,%rcx
    c5ac:	73 21                	jae    c5cf <sbrk+0x9f>
    c5ae:	49 89 e8             	mov    %rbp,%r8
    c5b1:	48 39 d9             	cmp    %rbx,%rcx
    c5b4:	72 0a                	jb     c5c0 <sbrk+0x90>
    c5b6:	48 29 ca             	sub    %rcx,%rdx
    c5b9:	4c 8d 04 08          	lea    (%rax,%rcx,1),%r8
    c5bd:	48 89 d7             	mov    %rdx,%rdi
    c5c0:	48 89 fe             	mov    %rdi,%rsi
    c5c3:	4c 89 c7             	mov    %r8,%rdi
    c5c6:	e8 d5 f2 ff ff       	call   b8a0 <mm_commit>
    c5cb:	85 c0                	test   %eax,%eax
    c5cd:	75 56                	jne    c625 <sbrk+0xf5>
    c5cf:	48 83 c4 08          	add    $0x8,%rsp
    c5d3:	48 89 e8             	mov    %rbp,%rax
    c5d6:	5b                   	pop    %rbx
    c5d7:	5d                   	pop    %rbp
    c5d8:	c3                   	ret    
    c5d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c5e0:	48 89 fe             	mov    %rdi,%rsi
    c5e3:	48 f7 de             	neg    %rsi
    c5e6:	48 39 f3             	cmp    %rsi,%rbx
    c5e9:	72 45                	jb     c630 <sbrk+0x100>
    c5eb:	44 8b 05 4e b8 00 00 	mov    0xb84e(%rip),%r8d        # 17e40 <is_edmm_supported>
    c5f2:	48 01 df             	add    %rbx,%rdi
    c5f5:	48 89 3d 1c e4 01 00 	mov    %rdi,0x1e41c(%rip)        # 2aa18 <heap_used.0>
    c5fc:	48 8d 2c 38          	lea    (%rax,%rdi,1),%rbp
    c600:	45 85 c0             	test   %r8d,%r8d
    c603:	74 ca                	je     c5cf <sbrk+0x9f>
    c605:	48 8b 15 2c b8 00 00 	mov    0xb82c(%rip),%rdx        # 17e38 <heap_min_size>
    c60c:	48 39 da             	cmp    %rbx,%rdx
    c60f:	73 be                	jae    c5cf <sbrk+0x9f>
    c611:	48 89 e9             	mov    %rbp,%rcx
    c614:	48 39 fa             	cmp    %rdi,%rdx
    c617:	73 27                	jae    c640 <sbrk+0x110>
    c619:	48 89 cf             	mov    %rcx,%rdi
    c61c:	e8 8f f2 ff ff       	call   b8b0 <mm_uncommit>
    c621:	85 c0                	test   %eax,%eax
    c623:	74 aa                	je     c5cf <sbrk+0x9f>
    c625:	48 89 1d ec e3 01 00 	mov    %rbx,0x1e3ec(%rip)        # 2aa18 <heap_used.0>
    c62c:	0f 1f 40 00          	nopl   0x0(%rax)
    c630:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    c637:	eb 96                	jmp    c5cf <sbrk+0x9f>
    c639:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c640:	48 89 de             	mov    %rbx,%rsi
    c643:	48 8d 0c 10          	lea    (%rax,%rdx,1),%rcx
    c647:	48 29 d6             	sub    %rdx,%rsi
    c64a:	eb cd                	jmp    c619 <sbrk+0xe9>
    c64c:	0f 1f 40 00          	nopl   0x0(%rax)

000000000000c650 <sgx_spin_lock>:
    c650:	f3 0f 1e fa          	endbr64 
    c654:	48 83 ec 18          	sub    $0x18,%rsp
    c658:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    c65f:	00 00 
    c661:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    c666:	b8 01 00 00 00       	mov    $0x1,%eax
    c66b:	f0 87 07             	lock xchg %eax,(%rdi)
    c66e:	89 44 24 04          	mov    %eax,0x4(%rsp)
    c672:	8b 54 24 04          	mov    0x4(%rsp),%edx
    c676:	85 d2                	test   %edx,%edx
    c678:	74 48                	je     c6c2 <sgx_spin_lock+0x72>
    c67a:	48 89 f9             	mov    %rdi,%rcx
    c67d:	be 01 00 00 00       	mov    $0x1,%esi
    c682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    c688:	ba 02 00 00 00       	mov    $0x2,%edx
    c68d:	0f 1f 00             	nopl   (%rax)
    c690:	85 d2                	test   %edx,%edx
    c692:	7e 0d                	jle    c6a1 <sgx_spin_lock+0x51>
    c694:	31 c0                	xor    %eax,%eax
    c696:	f3 90                	pause  
    c698:	f3 90                	pause  
    c69a:	83 c0 02             	add    $0x2,%eax
    c69d:	39 c2                	cmp    %eax,%edx
    c69f:	75 f5                	jne    c696 <sgx_spin_lock+0x46>
    c6a1:	b8 00 04 00 00       	mov    $0x400,%eax
    c6a6:	01 d2                	add    %edx,%edx
    c6a8:	39 c2                	cmp    %eax,%edx
    c6aa:	0f 4f d0             	cmovg  %eax,%edx
    c6ad:	8b 01                	mov    (%rcx),%eax
    c6af:	85 c0                	test   %eax,%eax
    c6b1:	75 dd                	jne    c690 <sgx_spin_lock+0x40>
    c6b3:	f0 87 31             	lock xchg %esi,(%rcx)
    c6b6:	89 74 24 04          	mov    %esi,0x4(%rsp)
    c6ba:	8b 44 24 04          	mov    0x4(%rsp),%eax
    c6be:	85 c0                	test   %eax,%eax
    c6c0:	75 c6                	jne    c688 <sgx_spin_lock+0x38>
    c6c2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    c6c7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    c6ce:	00 00 
    c6d0:	75 07                	jne    c6d9 <sgx_spin_lock+0x89>
    c6d2:	31 c0                	xor    %eax,%eax
    c6d4:	48 83 c4 18          	add    $0x18,%rsp
    c6d8:	c3                   	ret    
    c6d9:	e8 e2 41 00 00       	call   108c0 <__stack_chk_fail>
    c6de:	66 90                	xchg   %ax,%ax

000000000000c6e0 <sgx_spin_unlock>:
    c6e0:	f3 0f 1e fa          	endbr64 
    c6e4:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    c6ea:	31 c0                	xor    %eax,%eax
    c6ec:	c3                   	ret    
    c6ed:	0f 1f 00             	nopl   (%rax)

000000000000c6f0 <dispose_chunk>:
    c6f0:	55                   	push   %rbp
    c6f1:	48 89 f0             	mov    %rsi,%rax
    c6f4:	48 01 d6             	add    %rdx,%rsi
    c6f7:	53                   	push   %rbx
    c6f8:	48 83 ec 08          	sub    $0x8,%rsp
    c6fc:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c700:	f6 c1 01             	test   $0x1,%cl
    c703:	0f 85 f7 00 00 00    	jne    c800 <dispose_chunk+0x110>
    c709:	83 e1 03             	and    $0x3,%ecx
    c70c:	4c 8b 08             	mov    (%rax),%r9
    c70f:	0f 84 64 01 00 00    	je     c879 <dispose_chunk+0x189>
    c715:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c719:	4c 29 c8             	sub    %r9,%rax
    c71c:	4c 01 ca             	add    %r9,%rdx
    c71f:	4c 39 c0             	cmp    %r8,%rax
    c722:	0f 82 38 03 00 00    	jb     ca60 <dispose_chunk+0x370>
    c728:	48 39 47 20          	cmp    %rax,0x20(%rdi)
    c72c:	0f 84 2e 04 00 00    	je     cb60 <dispose_chunk+0x470>
    c732:	4c 89 c9             	mov    %r9,%rcx
    c735:	48 c1 e9 03          	shr    $0x3,%rcx
    c739:	49 81 f9 ff 00 00 00 	cmp    $0xff,%r9
    c740:	0f 86 4a 03 00 00    	jbe    ca90 <dispose_chunk+0x3a0>
    c746:	4c 8b 50 18          	mov    0x18(%rax),%r10
    c74a:	48 8b 58 30          	mov    0x30(%rax),%rbx
    c74e:	49 39 c2             	cmp    %rax,%r10
    c751:	0f 84 89 05 00 00    	je     cce0 <dispose_chunk+0x5f0>
    c757:	48 8b 48 10          	mov    0x10(%rax),%rcx
    c75b:	4c 39 c1             	cmp    %r8,%rcx
    c75e:	0f 82 fc 02 00 00    	jb     ca60 <dispose_chunk+0x370>
    c764:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    c768:	0f 85 f2 02 00 00    	jne    ca60 <dispose_chunk+0x370>
    c76e:	49 39 42 10          	cmp    %rax,0x10(%r10)
    c772:	0f 85 e8 02 00 00    	jne    ca60 <dispose_chunk+0x370>
    c778:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    c77c:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    c780:	48 85 db             	test   %rbx,%rbx
    c783:	74 7f                	je     c804 <dispose_chunk+0x114>
    c785:	44 8b 48 38          	mov    0x38(%rax),%r9d
    c789:	4c 89 c9             	mov    %r9,%rcx
    c78c:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    c790:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    c797:	00 
    c798:	0f 84 32 06 00 00    	je     cdd0 <dispose_chunk+0x6e0>
    c79e:	4c 39 c3             	cmp    %r8,%rbx
    c7a1:	0f 82 b9 02 00 00    	jb     ca60 <dispose_chunk+0x370>
    c7a7:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    c7ab:	0f 84 9c 06 00 00    	je     ce4d <dispose_chunk+0x75d>
    c7b1:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    c7b5:	4d 85 d2             	test   %r10,%r10
    c7b8:	74 4a                	je     c804 <dispose_chunk+0x114>
    c7ba:	4d 39 c2             	cmp    %r8,%r10
    c7bd:	0f 82 9d 02 00 00    	jb     ca60 <dispose_chunk+0x370>
    c7c3:	48 8b 48 20          	mov    0x20(%rax),%rcx
    c7c7:	49 89 5a 30          	mov    %rbx,0x30(%r10)
    c7cb:	48 85 c9             	test   %rcx,%rcx
    c7ce:	74 11                	je     c7e1 <dispose_chunk+0xf1>
    c7d0:	4c 39 c1             	cmp    %r8,%rcx
    c7d3:	0f 82 87 02 00 00    	jb     ca60 <dispose_chunk+0x370>
    c7d9:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    c7dd:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c7e1:	48 8b 48 28          	mov    0x28(%rax),%rcx
    c7e5:	48 85 c9             	test   %rcx,%rcx
    c7e8:	74 1a                	je     c804 <dispose_chunk+0x114>
    c7ea:	4c 39 c1             	cmp    %r8,%rcx
    c7ed:	0f 82 6d 02 00 00    	jb     ca60 <dispose_chunk+0x370>
    c7f3:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    c7f7:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c7fb:	eb 07                	jmp    c804 <dispose_chunk+0x114>
    c7fd:	0f 1f 00             	nopl   (%rax)
    c800:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    c804:	4c 39 c6             	cmp    %r8,%rsi
    c807:	0f 82 53 02 00 00    	jb     ca60 <dispose_chunk+0x370>
    c80d:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    c811:	f6 c1 02             	test   $0x2,%cl
    c814:	74 6a                	je     c880 <dispose_chunk+0x190>
    c816:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    c81a:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    c81e:	48 89 d1             	mov    %rdx,%rcx
    c821:	48 83 c9 01          	or     $0x1,%rcx
    c825:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c829:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c82d:	48 89 d1             	mov    %rdx,%rcx
    c830:	48 c1 e9 03          	shr    $0x3,%rcx
    c834:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    c83b:	0f 87 57 01 00 00    	ja     c998 <dispose_chunk+0x2a8>
    c841:	8d 54 09 09          	lea    0x9(%rcx,%rcx,1),%edx
    c845:	44 8b 0f             	mov    (%rdi),%r9d
    c848:	48 8d 34 d7          	lea    (%rdi,%rdx,8),%rsi
    c84c:	ba 01 00 00 00       	mov    $0x1,%edx
    c851:	d3 e2                	shl    %cl,%edx
    c853:	41 85 d1             	test   %edx,%r9d
    c856:	0f 84 24 02 00 00    	je     ca80 <dispose_chunk+0x390>
    c85c:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    c860:	4c 39 c2             	cmp    %r8,%rdx
    c863:	0f 82 f7 01 00 00    	jb     ca60 <dispose_chunk+0x370>
    c869:	48 89 46 10          	mov    %rax,0x10(%rsi)
    c86d:	48 89 42 18          	mov    %rax,0x18(%rdx)
    c871:	48 89 50 10          	mov    %rdx,0x10(%rax)
    c875:	48 89 70 18          	mov    %rsi,0x18(%rax)
    c879:	48 83 c4 08          	add    $0x8,%rsp
    c87d:	5b                   	pop    %rbx
    c87e:	5d                   	pop    %rbp
    c87f:	c3                   	ret    
    c880:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    c884:	48 39 77 28          	cmp    %rsi,0x28(%rdi)
    c888:	0f 84 22 03 00 00    	je     cbb0 <dispose_chunk+0x4c0>
    c88e:	48 39 f3             	cmp    %rsi,%rbx
    c891:	0f 84 89 03 00 00    	je     cc20 <dispose_chunk+0x530>
    c897:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    c89b:	49 89 cb             	mov    %rcx,%r11
    c89e:	48 01 ca             	add    %rcx,%rdx
    c8a1:	49 c1 eb 03          	shr    $0x3,%r11
    c8a5:	48 81 f9 f8 00 00 00 	cmp    $0xf8,%rcx
    c8ac:	0f 86 7e 01 00 00    	jbe    ca30 <dispose_chunk+0x340>
    c8b2:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    c8b6:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    c8ba:	49 39 f2             	cmp    %rsi,%r10
    c8bd:	0f 84 7d 03 00 00    	je     cc40 <dispose_chunk+0x550>
    c8c3:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    c8c7:	4c 39 c1             	cmp    %r8,%rcx
    c8ca:	0f 82 90 01 00 00    	jb     ca60 <dispose_chunk+0x370>
    c8d0:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    c8d4:	0f 85 86 01 00 00    	jne    ca60 <dispose_chunk+0x370>
    c8da:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    c8de:	0f 85 7c 01 00 00    	jne    ca60 <dispose_chunk+0x370>
    c8e4:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    c8e8:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    c8ec:	48 85 ed             	test   %rbp,%rbp
    c8ef:	74 7f                	je     c970 <dispose_chunk+0x280>
    c8f1:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    c8f5:	4c 89 c9             	mov    %r9,%rcx
    c8f8:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
    c8fc:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    c903:	00 
    c904:	0f 84 76 04 00 00    	je     cd80 <dispose_chunk+0x690>
    c90a:	4c 39 c5             	cmp    %r8,%rbp
    c90d:	0f 82 4d 01 00 00    	jb     ca60 <dispose_chunk+0x370>
    c913:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    c917:	0f 84 27 05 00 00    	je     ce44 <dispose_chunk+0x754>
    c91d:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    c921:	4d 85 d2             	test   %r10,%r10
    c924:	74 4a                	je     c970 <dispose_chunk+0x280>
    c926:	4d 39 c2             	cmp    %r8,%r10
    c929:	0f 82 31 01 00 00    	jb     ca60 <dispose_chunk+0x370>
    c92f:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    c933:	49 89 6a 30          	mov    %rbp,0x30(%r10)
    c937:	48 85 c9             	test   %rcx,%rcx
    c93a:	74 11                	je     c94d <dispose_chunk+0x25d>
    c93c:	4c 39 c1             	cmp    %r8,%rcx
    c93f:	0f 82 1b 01 00 00    	jb     ca60 <dispose_chunk+0x370>
    c945:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    c949:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c94d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    c951:	48 85 c9             	test   %rcx,%rcx
    c954:	74 1a                	je     c970 <dispose_chunk+0x280>
    c956:	4c 39 c1             	cmp    %r8,%rcx
    c959:	0f 82 01 01 00 00    	jb     ca60 <dispose_chunk+0x370>
    c95f:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    c963:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    c967:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    c96e:	00 00 
    c970:	48 89 d1             	mov    %rdx,%rcx
    c973:	48 83 c9 01          	or     $0x1,%rcx
    c977:	48 89 48 08          	mov    %rcx,0x8(%rax)
    c97b:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    c97f:	48 39 d8             	cmp    %rbx,%rax
    c982:	0f 85 a5 fe ff ff    	jne    c82d <dispose_chunk+0x13d>
    c988:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    c98c:	e9 e8 fe ff ff       	jmp    c879 <dispose_chunk+0x189>
    c991:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    c998:	48 89 d6             	mov    %rdx,%rsi
    c99b:	48 c1 ee 08          	shr    $0x8,%rsi
    c99f:	89 f1                	mov    %esi,%ecx
    c9a1:	85 f6                	test   %esi,%esi
    c9a3:	0f 84 bf 00 00 00    	je     ca68 <dispose_chunk+0x378>
    c9a9:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    c9af:	0f 87 e3 01 00 00    	ja     cb98 <dispose_chunk+0x4a8>
    c9b5:	0f bd f1             	bsr    %ecx,%esi
    c9b8:	b9 26 00 00 00       	mov    $0x26,%ecx
    c9bd:	48 89 d3             	mov    %rdx,%rbx
    c9c0:	41 b9 1f 00 00 00    	mov    $0x1f,%r9d
    c9c6:	83 f6 1f             	xor    $0x1f,%esi
    c9c9:	29 f1                	sub    %esi,%ecx
    c9cb:	41 29 f1             	sub    %esi,%r9d
    c9ce:	be 01 00 00 00       	mov    $0x1,%esi
    c9d3:	48 d3 eb             	shr    %cl,%rbx
    c9d6:	48 89 d9             	mov    %rbx,%rcx
    c9d9:	83 e1 01             	and    $0x1,%ecx
    c9dc:	42 8d 0c 49          	lea    (%rcx,%r9,2),%ecx
    c9e0:	44 8d 49 4b          	lea    0x4b(%rcx),%r9d
    c9e4:	d3 e6                	shl    %cl,%esi
    c9e6:	49 c1 e1 03          	shl    $0x3,%r9
    c9ea:	44 8b 57 04          	mov    0x4(%rdi),%r10d
    c9ee:	66 48 0f 6e c8       	movq   %rax,%xmm1
    c9f3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c9f7:	89 48 38             	mov    %ecx,0x38(%rax)
    c9fa:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    c9fe:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    ca02:	44 85 d6             	test   %r10d,%esi
    ca05:	0f 85 c5 00 00 00    	jne    cad0 <dispose_chunk+0x3e0>
    ca0b:	44 09 d6             	or     %r10d,%esi
    ca0e:	49 01 f9             	add    %rdi,%r9
    ca11:	89 77 04             	mov    %esi,0x4(%rdi)
    ca14:	48 89 84 cf 58 02 00 	mov    %rax,0x258(%rdi,%rcx,8)
    ca1b:	00 
    ca1c:	4c 89 48 30          	mov    %r9,0x30(%rax)
    ca20:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    ca24:	48 83 c4 08          	add    $0x8,%rsp
    ca28:	5b                   	pop    %rbx
    ca29:	5d                   	pop    %rbp
    ca2a:	c3                   	ret    
    ca2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ca30:	43 8d 4c 1b 09       	lea    0x9(%r11,%r11,1),%ecx
    ca35:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    ca39:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    ca3d:	48 8d 0c cf          	lea    (%rdi,%rcx,8),%rcx
    ca41:	4c 39 c9             	cmp    %r9,%rcx
    ca44:	0f 85 53 03 00 00    	jne    cd9d <dispose_chunk+0x6ad>
    ca4a:	4d 39 d1             	cmp    %r10,%r9
    ca4d:	0f 84 75 02 00 00    	je     ccc8 <dispose_chunk+0x5d8>
    ca53:	4d 39 c2             	cmp    %r8,%r10
    ca56:	0f 83 aa 01 00 00    	jae    cc06 <dispose_chunk+0x516>
    ca5c:	0f 1f 40 00          	nopl   0x0(%rax)
    ca60:	e8 d2 58 00 00       	call   12337 <abort>
    ca65:	0f 1f 00             	nopl   (%rax)
    ca68:	be 01 00 00 00       	mov    $0x1,%esi
    ca6d:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    ca73:	e9 72 ff ff ff       	jmp    c9ea <dispose_chunk+0x2fa>
    ca78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ca7f:	00 
    ca80:	41 09 d1             	or     %edx,%r9d
    ca83:	48 89 f2             	mov    %rsi,%rdx
    ca86:	44 89 0f             	mov    %r9d,(%rdi)
    ca89:	e9 db fd ff ff       	jmp    c869 <dispose_chunk+0x179>
    ca8e:	66 90                	xchg   %ax,%ax
    ca90:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    ca95:	4c 8b 48 10          	mov    0x10(%rax),%r9
    ca99:	4c 8b 50 18          	mov    0x18(%rax),%r10
    ca9d:	4e 8d 1c df          	lea    (%rdi,%r11,8),%r11
    caa1:	4d 39 cb             	cmp    %r9,%r11
    caa4:	0f 85 46 03 00 00    	jne    cdf0 <dispose_chunk+0x700>
    caaa:	4d 39 d1             	cmp    %r10,%r9
    caad:	0f 84 b5 02 00 00    	je     cd68 <dispose_chunk+0x678>
    cab3:	4d 39 c2             	cmp    %r8,%r10
    cab6:	72 a8                	jb     ca60 <dispose_chunk+0x370>
    cab8:	49 39 42 10          	cmp    %rax,0x10(%r10)
    cabc:	75 a2                	jne    ca60 <dispose_chunk+0x370>
    cabe:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cac2:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cac6:	e9 39 fd ff ff       	jmp    c804 <dispose_chunk+0x114>
    cacb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cad0:	89 ce                	mov    %ecx,%esi
    cad2:	48 8b b4 f7 58 02 00 	mov    0x258(%rdi,%rsi,8),%rsi
    cad9:	00 
    cada:	48 89 d7             	mov    %rdx,%rdi
    cadd:	83 f9 1f             	cmp    $0x1f,%ecx
    cae0:	74 34                	je     cb16 <dispose_chunk+0x426>
    cae2:	89 cf                	mov    %ecx,%edi
    cae4:	b9 39 00 00 00       	mov    $0x39,%ecx
    cae9:	d1 ef                	shr    %edi
    caeb:	29 f9                	sub    %edi,%ecx
    caed:	48 89 d7             	mov    %rdx,%rdi
    caf0:	48 d3 e7             	shl    %cl,%rdi
    caf3:	eb 21                	jmp    cb16 <dispose_chunk+0x426>
    caf5:	0f 1f 00             	nopl   (%rax)
    caf8:	48 89 f9             	mov    %rdi,%rcx
    cafb:	48 01 ff             	add    %rdi,%rdi
    cafe:	48 c1 e9 3f          	shr    $0x3f,%rcx
    cb02:	48 83 c1 04          	add    $0x4,%rcx
    cb06:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    cb0a:	4d 85 c9             	test   %r9,%r9
    cb0d:	0f 84 d5 00 00 00    	je     cbe8 <dispose_chunk+0x4f8>
    cb13:	4c 89 ce             	mov    %r9,%rsi
    cb16:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cb1a:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    cb1e:	48 39 d1             	cmp    %rdx,%rcx
    cb21:	75 d5                	jne    caf8 <dispose_chunk+0x408>
    cb23:	48 8b 56 10          	mov    0x10(%rsi),%rdx
    cb27:	66 48 0f 6e d6       	movq   %rsi,%xmm2
    cb2c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    cb31:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    cb35:	4c 39 c6             	cmp    %r8,%rsi
    cb38:	0f 82 22 ff ff ff    	jb     ca60 <dispose_chunk+0x370>
    cb3e:	4c 39 c2             	cmp    %r8,%rdx
    cb41:	0f 82 19 ff ff ff    	jb     ca60 <dispose_chunk+0x370>
    cb47:	48 89 42 18          	mov    %rax,0x18(%rdx)
    cb4b:	48 89 46 10          	mov    %rax,0x10(%rsi)
    cb4f:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    cb56:	00 
    cb57:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cb5b:	e9 19 fd ff ff       	jmp    c879 <dispose_chunk+0x189>
    cb60:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    cb64:	49 89 c9             	mov    %rcx,%r9
    cb67:	49 f7 d1             	not    %r9
    cb6a:	41 83 e1 03          	and    $0x3,%r9d
    cb6e:	0f 85 90 fc ff ff    	jne    c804 <dispose_chunk+0x114>
    cb74:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    cb78:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cb7c:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    cb80:	48 89 d1             	mov    %rdx,%rcx
    cb83:	48 83 c9 01          	or     $0x1,%rcx
    cb87:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cb8b:	48 89 16             	mov    %rdx,(%rsi)
    cb8e:	e9 e6 fc ff ff       	jmp    c879 <dispose_chunk+0x189>
    cb93:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cb98:	be 00 00 00 80       	mov    $0x80000000,%esi
    cb9d:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    cba3:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    cba8:	e9 3d fe ff ff       	jmp    c9ea <dispose_chunk+0x2fa>
    cbad:	0f 1f 00             	nopl   (%rax)
    cbb0:	48 03 57 10          	add    0x10(%rdi),%rdx
    cbb4:	48 89 47 28          	mov    %rax,0x28(%rdi)
    cbb8:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    cbbc:	48 83 ca 01          	or     $0x1,%rdx
    cbc0:	48 89 50 08          	mov    %rdx,0x8(%rax)
    cbc4:	48 39 d8             	cmp    %rbx,%rax
    cbc7:	0f 85 ac fc ff ff    	jne    c879 <dispose_chunk+0x189>
    cbcd:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    cbd4:	00 
    cbd5:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    cbdc:	00 
    cbdd:	e9 97 fc ff ff       	jmp    c879 <dispose_chunk+0x189>
    cbe2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cbe8:	48 8d 14 ce          	lea    (%rsi,%rcx,8),%rdx
    cbec:	4c 39 c2             	cmp    %r8,%rdx
    cbef:	0f 82 6b fe ff ff    	jb     ca60 <dispose_chunk+0x370>
    cbf5:	48 89 04 ce          	mov    %rax,(%rsi,%rcx,8)
    cbf9:	48 89 70 30          	mov    %rsi,0x30(%rax)
    cbfd:	0f 11 48 10          	movups %xmm1,0x10(%rax)
    cc01:	e9 73 fc ff ff       	jmp    c879 <dispose_chunk+0x189>
    cc06:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    cc0a:	0f 85 50 fe ff ff    	jne    ca60 <dispose_chunk+0x370>
    cc10:	4d 89 51 18          	mov    %r10,0x18(%r9)
    cc14:	4d 89 4a 10          	mov    %r9,0x10(%r10)
    cc18:	e9 53 fd ff ff       	jmp    c970 <dispose_chunk+0x280>
    cc1d:	0f 1f 00             	nopl   (%rax)
    cc20:	48 03 57 08          	add    0x8(%rdi),%rdx
    cc24:	48 89 47 20          	mov    %rax,0x20(%rdi)
    cc28:	48 89 d1             	mov    %rdx,%rcx
    cc2b:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    cc2f:	48 83 c9 01          	or     $0x1,%rcx
    cc33:	48 89 48 08          	mov    %rcx,0x8(%rax)
    cc37:	48 89 14 10          	mov    %rdx,(%rax,%rdx,1)
    cc3b:	e9 39 fc ff ff       	jmp    c879 <dispose_chunk+0x189>
    cc40:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    cc44:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    cc48:	48 85 c9             	test   %rcx,%rcx
    cc4b:	0f 84 cf 01 00 00    	je     ce20 <dispose_chunk+0x730>
    cc51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cc58:	4d 89 cb             	mov    %r9,%r11
    cc5b:	49 89 ca             	mov    %rcx,%r10
    cc5e:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    cc62:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cc66:	48 85 c9             	test   %rcx,%rcx
    cc69:	75 ed                	jne    cc58 <dispose_chunk+0x568>
    cc6b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    cc6f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    cc73:	48 85 c9             	test   %rcx,%rcx
    cc76:	75 e0                	jne    cc58 <dispose_chunk+0x568>
    cc78:	4d 39 c3             	cmp    %r8,%r11
    cc7b:	0f 82 df fd ff ff    	jb     ca60 <dispose_chunk+0x370>
    cc81:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cc88:	48 85 ed             	test   %rbp,%rbp
    cc8b:	0f 84 df fc ff ff    	je     c970 <dispose_chunk+0x280>
    cc91:	8b 4e 38             	mov    0x38(%rsi),%ecx
    cc94:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    cc98:	48 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%rcx,8)
    cc9f:	00 
    cca0:	0f 84 b0 01 00 00    	je     ce56 <dispose_chunk+0x766>
    cca6:	4c 39 c5             	cmp    %r8,%rbp
    cca9:	0f 82 b1 fd ff ff    	jb     ca60 <dispose_chunk+0x370>
    ccaf:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    ccb3:	0f 84 b1 01 00 00    	je     ce6a <dispose_chunk+0x77a>
    ccb9:	4c 89 55 28          	mov    %r10,0x28(%rbp)
    ccbd:	e9 64 fc ff ff       	jmp    c926 <dispose_chunk+0x236>
    ccc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ccc8:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cccd:	44 89 d9             	mov    %r11d,%ecx
    ccd0:	d3 c6                	rol    %cl,%esi
    ccd2:	21 37                	and    %esi,(%rdi)
    ccd4:	e9 97 fc ff ff       	jmp    c970 <dispose_chunk+0x280>
    ccd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cce0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    cce4:	4c 8d 48 28          	lea    0x28(%rax),%r9
    cce8:	48 85 c9             	test   %rcx,%rcx
    cceb:	0f 84 41 01 00 00    	je     ce32 <dispose_chunk+0x742>
    ccf1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ccf8:	4d 89 cb             	mov    %r9,%r11
    ccfb:	49 89 ca             	mov    %rcx,%r10
    ccfe:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    cd02:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    cd06:	48 85 c9             	test   %rcx,%rcx
    cd09:	75 ed                	jne    ccf8 <dispose_chunk+0x608>
    cd0b:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    cd0f:	4d 8d 4a 20          	lea    0x20(%r10),%r9
    cd13:	48 85 c9             	test   %rcx,%rcx
    cd16:	75 e0                	jne    ccf8 <dispose_chunk+0x608>
    cd18:	4d 39 c3             	cmp    %r8,%r11
    cd1b:	0f 82 3f fd ff ff    	jb     ca60 <dispose_chunk+0x370>
    cd21:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    cd28:	48 85 db             	test   %rbx,%rbx
    cd2b:	0f 84 d3 fa ff ff    	je     c804 <dispose_chunk+0x114>
    cd31:	8b 48 38             	mov    0x38(%rax),%ecx
    cd34:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    cd38:	48 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%rcx,8)
    cd3f:	00 
    cd40:	0f 84 1a 01 00 00    	je     ce60 <dispose_chunk+0x770>
    cd46:	4c 39 c3             	cmp    %r8,%rbx
    cd49:	0f 82 11 fd ff ff    	jb     ca60 <dispose_chunk+0x370>
    cd4f:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    cd53:	0f 84 1a 01 00 00    	je     ce73 <dispose_chunk+0x783>
    cd59:	4c 89 53 28          	mov    %r10,0x28(%rbx)
    cd5d:	e9 58 fa ff ff       	jmp    c7ba <dispose_chunk+0xca>
    cd62:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    cd68:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cd6e:	41 d3 c1             	rol    %cl,%r9d
    cd71:	44 21 0f             	and    %r9d,(%rdi)
    cd74:	e9 8b fa ff ff       	jmp    c804 <dispose_chunk+0x114>
    cd79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    cd80:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cd85:	4d 85 d2             	test   %r10,%r10
    cd88:	0f 85 98 fb ff ff    	jne    c926 <dispose_chunk+0x236>
    cd8e:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    cd93:	d3 c6                	rol    %cl,%esi
    cd95:	21 77 04             	and    %esi,0x4(%rdi)
    cd98:	e9 d3 fb ff ff       	jmp    c970 <dispose_chunk+0x280>
    cd9d:	4d 39 c1             	cmp    %r8,%r9
    cda0:	0f 82 ba fc ff ff    	jb     ca60 <dispose_chunk+0x370>
    cda6:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    cdaa:	0f 85 b0 fc ff ff    	jne    ca60 <dispose_chunk+0x370>
    cdb0:	4d 39 d1             	cmp    %r10,%r9
    cdb3:	0f 84 0f ff ff ff    	je     ccc8 <dispose_chunk+0x5d8>
    cdb9:	4c 39 d1             	cmp    %r10,%rcx
    cdbc:	0f 84 4e fe ff ff    	je     cc10 <dispose_chunk+0x520>
    cdc2:	e9 8c fc ff ff       	jmp    ca53 <dispose_chunk+0x363>
    cdc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    cdce:	00 00 
    cdd0:	4e 89 54 df 08       	mov    %r10,0x8(%rdi,%r11,8)
    cdd5:	4d 85 d2             	test   %r10,%r10
    cdd8:	0f 85 dc f9 ff ff    	jne    c7ba <dispose_chunk+0xca>
    cdde:	41 b9 fe ff ff ff    	mov    $0xfffffffe,%r9d
    cde4:	41 d3 c1             	rol    %cl,%r9d
    cde7:	44 21 4f 04          	and    %r9d,0x4(%rdi)
    cdeb:	e9 14 fa ff ff       	jmp    c804 <dispose_chunk+0x114>
    cdf0:	4d 39 c1             	cmp    %r8,%r9
    cdf3:	0f 82 67 fc ff ff    	jb     ca60 <dispose_chunk+0x370>
    cdf9:	49 39 41 18          	cmp    %rax,0x18(%r9)
    cdfd:	0f 85 5d fc ff ff    	jne    ca60 <dispose_chunk+0x370>
    ce03:	4d 39 d1             	cmp    %r10,%r9
    ce06:	0f 84 5c ff ff ff    	je     cd68 <dispose_chunk+0x678>
    ce0c:	4d 39 d3             	cmp    %r10,%r11
    ce0f:	0f 84 a9 fc ff ff    	je     cabe <dispose_chunk+0x3ce>
    ce15:	e9 99 fc ff ff       	jmp    cab3 <dispose_chunk+0x3c3>
    ce1a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ce20:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ce24:	48 85 c9             	test   %rcx,%rcx
    ce27:	74 53                	je     ce7c <dispose_chunk+0x78c>
    ce29:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    ce2d:	e9 26 fe ff ff       	jmp    cc58 <dispose_chunk+0x568>
    ce32:	48 8b 48 20          	mov    0x20(%rax),%rcx
    ce36:	48 85 c9             	test   %rcx,%rcx
    ce39:	74 75                	je     ceb0 <dispose_chunk+0x7c0>
    ce3b:	4c 8d 48 20          	lea    0x20(%rax),%r9
    ce3f:	e9 b4 fe ff ff       	jmp    ccf8 <dispose_chunk+0x608>
    ce44:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    ce48:	e9 d4 fa ff ff       	jmp    c921 <dispose_chunk+0x231>
    ce4d:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    ce51:	e9 5f f9 ff ff       	jmp    c7b5 <dispose_chunk+0xc5>
    ce56:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    ce5b:	e9 c6 fa ff ff       	jmp    c926 <dispose_chunk+0x236>
    ce60:	4e 89 54 cf 08       	mov    %r10,0x8(%rdi,%r9,8)
    ce65:	e9 50 f9 ff ff       	jmp    c7ba <dispose_chunk+0xca>
    ce6a:	4c 89 55 20          	mov    %r10,0x20(%rbp)
    ce6e:	e9 b3 fa ff ff       	jmp    c926 <dispose_chunk+0x236>
    ce73:	4c 89 53 20          	mov    %r10,0x20(%rbx)
    ce77:	e9 3e f9 ff ff       	jmp    c7ba <dispose_chunk+0xca>
    ce7c:	48 85 ed             	test   %rbp,%rbp
    ce7f:	0f 84 eb fa ff ff    	je     c970 <dispose_chunk+0x280>
    ce85:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    ce89:	4c 89 c9             	mov    %r9,%rcx
    ce8c:	4a 39 b4 cf 58 02 00 	cmp    %rsi,0x258(%rdi,%r9,8)
    ce93:	00 
    ce94:	74 4f                	je     cee5 <dispose_chunk+0x7f5>
    ce96:	4c 39 c5             	cmp    %r8,%rbp
    ce99:	0f 82 c1 fb ff ff    	jb     ca60 <dispose_chunk+0x370>
    ce9f:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    cea3:	74 60                	je     cf05 <dispose_chunk+0x815>
    cea5:	31 c9                	xor    %ecx,%ecx
    cea7:	48 89 4d 28          	mov    %rcx,0x28(%rbp)
    ceab:	e9 c0 fa ff ff       	jmp    c970 <dispose_chunk+0x280>
    ceb0:	48 85 db             	test   %rbx,%rbx
    ceb3:	0f 84 4b f9 ff ff    	je     c804 <dispose_chunk+0x114>
    ceb9:	44 8b 48 38          	mov    0x38(%rax),%r9d
    cebd:	4c 89 c9             	mov    %r9,%rcx
    cec0:	4a 39 84 cf 58 02 00 	cmp    %rax,0x258(%rdi,%r9,8)
    cec7:	00 
    cec8:	74 2b                	je     cef5 <dispose_chunk+0x805>
    ceca:	4c 39 c3             	cmp    %r8,%rbx
    cecd:	0f 82 8d fb ff ff    	jb     ca60 <dispose_chunk+0x370>
    ced3:	48 39 43 20          	cmp    %rax,0x20(%rbx)
    ced7:	74 37                	je     cf10 <dispose_chunk+0x820>
    ced9:	45 31 db             	xor    %r11d,%r11d
    cedc:	4c 89 5b 28          	mov    %r11,0x28(%rbx)
    cee0:	e9 1f f9 ff ff       	jmp    c804 <dispose_chunk+0x114>
    cee5:	45 31 d2             	xor    %r10d,%r10d
    cee8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    ceef:	00 
    cef0:	e9 99 fe ff ff       	jmp    cd8e <dispose_chunk+0x69e>
    cef5:	45 31 d2             	xor    %r10d,%r10d
    cef8:	4e 89 94 cf 58 02 00 	mov    %r10,0x258(%rdi,%r9,8)
    ceff:	00 
    cf00:	e9 d9 fe ff ff       	jmp    cdde <dispose_chunk+0x6ee>
    cf05:	31 f6                	xor    %esi,%esi
    cf07:	48 89 75 20          	mov    %rsi,0x20(%rbp)
    cf0b:	e9 60 fa ff ff       	jmp    c970 <dispose_chunk+0x280>
    cf10:	31 ed                	xor    %ebp,%ebp
    cf12:	48 89 6b 20          	mov    %rbp,0x20(%rbx)
    cf16:	e9 e9 f8 ff ff       	jmp    c804 <dispose_chunk+0x114>
    cf1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000cf20 <init_mparams.isra.0>:
    cf20:	48 83 ec 18          	sub    $0x18,%rsp
    cf24:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    cf2b:	00 00 
    cf2d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    cf32:	b8 01 00 00 00       	mov    $0x1,%eax
    cf37:	87 05 f3 de 01 00    	xchg   %eax,0x1def3(%rip)        # 2ae30 <malloc_global_mutex>
    cf3d:	85 c0                	test   %eax,%eax
    cf3f:	0f 85 8b 00 00 00    	jne    cfd0 <init_mparams.isra.0+0xb0>
    cf45:	48 83 3d b3 de 01 00 	cmpq   $0x0,0x1deb3(%rip)        # 2ae00 <mparams>
    cf4c:	00 
    cf4d:	75 5d                	jne    cfac <init_mparams.isra.0+0x8c>
    cf4f:	66 0f 6f 05 39 61 00 	movdqa 0x6139(%rip),%xmm0        # 13090 <g_dyn_entry_table+0x80>
    cf56:	00 
    cf57:	48 89 e7             	mov    %rsp,%rdi
    cf5a:	be 08 00 00 00       	mov    $0x8,%esi
    cf5f:	c7 05 bf de 01 00 02 	movl   $0x2,0x1debf(%rip)        # 2ae28 <mparams+0x28>
    cf66:	00 00 00 
    cf69:	48 c7 05 3c de 01 00 	movq   $0x2,0x1de3c(%rip)        # 2adb0 <_gm_+0x370>
    cf70:	02 00 00 00 
    cf74:	0f 11 05 8d de 01 00 	movups %xmm0,0x1de8d(%rip)        # 2ae08 <mparams+0x8>
    cf7b:	66 0f 6f 05 1d 61 00 	movdqa 0x611d(%rip),%xmm0        # 130a0 <g_dyn_entry_table+0x90>
    cf82:	00 
    cf83:	0f 11 05 8e de 01 00 	movups %xmm0,0x1de8e(%rip)        # 2ae18 <mparams+0x18>
    cf8a:	e8 b1 8c ff ff       	call   5c40 <sgx_read_rand>
    cf8f:	85 c0                	test   %eax,%eax
    cf91:	75 69                	jne    cffc <init_mparams.isra.0+0xdc>
    cf93:	48 8b 04 24          	mov    (%rsp),%rax
    cf97:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    cf9d:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    cfa1:	48 83 c8 08          	or     $0x8,%rax
    cfa5:	48 89 05 54 de 01 00 	mov    %rax,0x1de54(%rip)        # 2ae00 <mparams>
    cfac:	c7 05 7a de 01 00 00 	movl   $0x0,0x1de7a(%rip)        # 2ae30 <malloc_global_mutex>
    cfb3:	00 00 00 
    cfb6:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    cfbb:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    cfc2:	00 00 
    cfc4:	75 31                	jne    cff7 <init_mparams.isra.0+0xd7>
    cfc6:	48 83 c4 18          	add    $0x18,%rsp
    cfca:	c3                   	ret    
    cfcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    cfd0:	48 8d 15 59 de 01 00 	lea    0x1de59(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    cfd7:	b9 01 00 00 00       	mov    $0x1,%ecx
    cfdc:	0f 1f 40 00          	nopl   0x0(%rax)
    cfe0:	8b 02                	mov    (%rdx),%eax
    cfe2:	85 c0                	test   %eax,%eax
    cfe4:	75 fa                	jne    cfe0 <init_mparams.isra.0+0xc0>
    cfe6:	89 c8                	mov    %ecx,%eax
    cfe8:	87 05 42 de 01 00    	xchg   %eax,0x1de42(%rip)        # 2ae30 <malloc_global_mutex>
    cfee:	85 c0                	test   %eax,%eax
    cff0:	75 ee                	jne    cfe0 <init_mparams.isra.0+0xc0>
    cff2:	e9 4e ff ff ff       	jmp    cf45 <init_mparams.isra.0+0x25>
    cff7:	e8 c4 38 00 00       	call   108c0 <__stack_chk_fail>
    cffc:	e8 36 53 00 00       	call   12337 <abort>
    d001:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d008:	00 00 00 
    d00b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

000000000000d010 <dlmalloc>:
    d010:	f3 0f 1e fa          	endbr64 
    d014:	41 57                	push   %r15
    d016:	41 56                	push   %r14
    d018:	41 55                	push   %r13
    d01a:	41 54                	push   %r12
    d01c:	55                   	push   %rbp
    d01d:	48 89 fd             	mov    %rdi,%rbp
    d020:	53                   	push   %rbx
    d021:	48 83 ec 18          	sub    $0x18,%rsp
    d025:	48 83 3d d3 dd 01 00 	cmpq   $0x0,0x1ddd3(%rip)        # 2ae00 <mparams>
    d02c:	00 
    d02d:	0f 84 55 01 00 00    	je     d188 <dlmalloc+0x178>
    d033:	f6 05 76 dd 01 00 02 	testb  $0x2,0x1dd76(%rip)        # 2adb0 <_gm_+0x370>
    d03a:	0f 85 5a 01 00 00    	jne    d19a <dlmalloc+0x18a>
    d040:	48 81 fd e0 00 00 00 	cmp    $0xe0,%rbp
    d047:	0f 87 fb 00 00 00    	ja     d148 <dlmalloc+0x138>
    d04d:	48 83 fd 0e          	cmp    $0xe,%rbp
    d051:	0f 87 d9 00 00 00    	ja     d130 <dlmalloc+0x120>
    d057:	b9 04 00 00 00       	mov    $0x4,%ecx
    d05c:	41 bc 20 00 00 00    	mov    $0x20,%r12d
    d062:	8b 15 d8 d9 01 00    	mov    0x1d9d8(%rip),%edx        # 2aa40 <_gm_>
    d068:	4c 8d 2d d1 d9 01 00 	lea    0x1d9d1(%rip),%r13        # 2aa40 <_gm_>
    d06f:	89 d0                	mov    %edx,%eax
    d071:	d3 e8                	shr    %cl,%eax
    d073:	a8 03                	test   $0x3,%al
    d075:	0f 84 d5 01 00 00    	je     d250 <dlmalloc+0x240>
    d07b:	f7 d0                	not    %eax
    d07d:	83 e0 01             	and    $0x1,%eax
    d080:	01 c1                	add    %eax,%ecx
    d082:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d086:	49 8d 74 c5 00       	lea    0x0(%r13,%rax,8),%rsi
    d08b:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    d08f:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d093:	48 39 c6             	cmp    %rax,%rsi
    d096:	0f 84 a4 07 00 00    	je     d840 <dlmalloc+0x830>
    d09c:	48 3b 05 b5 d9 01 00 	cmp    0x1d9b5(%rip),%rax        # 2aa58 <_gm_+0x18>
    d0a3:	0f 82 c7 05 00 00    	jb     d670 <dlmalloc+0x660>
    d0a9:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d0ad:	0f 85 bd 05 00 00    	jne    d670 <dlmalloc+0x660>
    d0b3:	48 89 70 18          	mov    %rsi,0x18(%rax)
    d0b7:	48 89 46 10          	mov    %rax,0x10(%rsi)
    d0bb:	c1 e1 03             	shl    $0x3,%ecx
    d0be:	89 c8                	mov    %ecx,%eax
    d0c0:	83 c8 03             	or     $0x3,%eax
    d0c3:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d0c7:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    d0cb:	48 83 c3 10          	add    $0x10,%rbx
    d0cf:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d0d4:	4c 33 2d 25 dd 01 00 	xor    0x1dd25(%rip),%r13        # 2ae00 <mparams>
    d0db:	4c 89 28             	mov    %r13,(%rax)
    d0de:	48 85 db             	test   %rbx,%rbx
    d0e1:	0f 84 96 00 00 00    	je     d17d <dlmalloc+0x16d>
    d0e7:	e8 74 a1 ff ff       	call   7260 <get_heap_base>
    d0ec:	48 39 c3             	cmp    %rax,%rbx
    d0ef:	0f 82 7b 05 00 00    	jb     d670 <dlmalloc+0x660>
    d0f5:	48 01 dd             	add    %rbx,%rbp
    d0f8:	0f 82 72 05 00 00    	jb     d670 <dlmalloc+0x660>
    d0fe:	31 ff                	xor    %edi,%edi
    d100:	e8 2b f4 ff ff       	call   c530 <sbrk>
    d105:	48 39 e8             	cmp    %rbp,%rax
    d108:	0f 82 62 05 00 00    	jb     d670 <dlmalloc+0x660>
    d10e:	f6 05 9b dc 01 00 02 	testb  $0x2,0x1dc9b(%rip)        # 2adb0 <_gm_+0x370>
    d115:	0f 85 35 05 00 00    	jne    d650 <dlmalloc+0x640>
    d11b:	48 83 c4 18          	add    $0x18,%rsp
    d11f:	48 89 d8             	mov    %rbx,%rax
    d122:	5b                   	pop    %rbx
    d123:	5d                   	pop    %rbp
    d124:	41 5c                	pop    %r12
    d126:	41 5d                	pop    %r13
    d128:	41 5e                	pop    %r14
    d12a:	41 5f                	pop    %r15
    d12c:	c3                   	ret    
    d12d:	0f 1f 00             	nopl   (%rax)
    d130:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d134:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d138:	4c 89 e1             	mov    %r12,%rcx
    d13b:	48 c1 e9 03          	shr    $0x3,%rcx
    d13f:	e9 1e ff ff ff       	jmp    d062 <dlmalloc+0x52>
    d144:	0f 1f 40 00          	nopl   0x0(%rax)
    d148:	4c 8b 05 f9 d8 01 00 	mov    0x1d8f9(%rip),%r8        # 2aa48 <_gm_+0x8>
    d14f:	4c 8d 2d ea d8 01 00 	lea    0x1d8ea(%rip),%r13        # 2aa40 <_gm_>
    d156:	4c 89 c6             	mov    %r8,%rsi
    d159:	48 81 fd 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rbp
    d160:	76 76                	jbe    d1d8 <dlmalloc+0x1c8>
    d162:	48 8b 05 97 dc 01 00 	mov    0x1dc97(%rip),%rax        # 2ae00 <mparams>
    d169:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    d16d:	0f 84 5d 02 00 00    	je     d3d0 <dlmalloc+0x3c0>
    d173:	48 85 c0             	test   %rax,%rax
    d176:	75 05                	jne    d17d <dlmalloc+0x16d>
    d178:	e8 a3 fd ff ff       	call   cf20 <init_mparams.isra.0>
    d17d:	31 db                	xor    %ebx,%ebx
    d17f:	eb 8d                	jmp    d10e <dlmalloc+0xfe>
    d181:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d188:	e8 93 fd ff ff       	call   cf20 <init_mparams.isra.0>
    d18d:	f6 05 1c dc 01 00 02 	testb  $0x2,0x1dc1c(%rip)        # 2adb0 <_gm_+0x370>
    d194:	0f 84 a6 fe ff ff    	je     d040 <dlmalloc+0x30>
    d19a:	b8 01 00 00 00       	mov    $0x1,%eax
    d19f:	87 05 0f dc 01 00    	xchg   %eax,0x1dc0f(%rip)        # 2adb4 <_gm_+0x374>
    d1a5:	85 c0                	test   %eax,%eax
    d1a7:	0f 84 93 fe ff ff    	je     d040 <dlmalloc+0x30>
    d1ad:	ba 01 00 00 00       	mov    $0x1,%edx
    d1b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    d1b8:	8b 05 f6 db 01 00    	mov    0x1dbf6(%rip),%eax        # 2adb4 <_gm_+0x374>
    d1be:	85 c0                	test   %eax,%eax
    d1c0:	75 f6                	jne    d1b8 <dlmalloc+0x1a8>
    d1c2:	89 d0                	mov    %edx,%eax
    d1c4:	87 05 ea db 01 00    	xchg   %eax,0x1dbea(%rip)        # 2adb4 <_gm_+0x374>
    d1ca:	85 c0                	test   %eax,%eax
    d1cc:	75 ea                	jne    d1b8 <dlmalloc+0x1a8>
    d1ce:	e9 6d fe ff ff       	jmp    d040 <dlmalloc+0x30>
    d1d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d1d8:	44 8b 0d 65 d8 01 00 	mov    0x1d865(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d1df:	4c 8d 65 1f          	lea    0x1f(%rbp),%r12
    d1e3:	49 83 e4 f0          	and    $0xfffffffffffffff0,%r12
    d1e7:	45 85 c9             	test   %r9d,%r9d
    d1ea:	0f 85 20 02 00 00    	jne    d410 <dlmalloc+0x400>
    d1f0:	4c 39 e6             	cmp    %r12,%rsi
    d1f3:	0f 83 7f 01 00 00    	jae    d378 <dlmalloc+0x368>
    d1f9:	48 8b 05 50 d8 01 00 	mov    0x1d850(%rip),%rax        # 2aa50 <_gm_+0x10>
    d200:	48 8b 15 f9 db 01 00 	mov    0x1dbf9(%rip),%rdx        # 2ae00 <mparams>
    d207:	49 39 c4             	cmp    %rax,%r12
    d20a:	0f 83 b0 06 00 00    	jae    d8c0 <dlmalloc+0x8b0>
    d210:	48 8b 1d 51 d8 01 00 	mov    0x1d851(%rip),%rbx        # 2aa68 <_gm_+0x28>
    d217:	4c 29 e0             	sub    %r12,%rax
    d21a:	4c 31 ea             	xor    %r13,%rdx
    d21d:	48 89 05 2c d8 01 00 	mov    %rax,0x1d82c(%rip)        # 2aa50 <_gm_+0x10>
    d224:	48 83 c8 01          	or     $0x1,%rax
    d228:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d22c:	49 83 cc 03          	or     $0x3,%r12
    d230:	48 89 0d 31 d8 01 00 	mov    %rcx,0x1d831(%rip)        # 2aa68 <_gm_+0x28>
    d237:	48 89 41 08          	mov    %rax,0x8(%rcx)
    d23b:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d23f:	48 89 11             	mov    %rdx,(%rcx)
    d242:	48 83 c3 10          	add    $0x10,%rbx
    d246:	e9 93 fe ff ff       	jmp    d0de <dlmalloc+0xce>
    d24b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    d250:	48 8b 35 f1 d7 01 00 	mov    0x1d7f1(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d257:	4c 39 e6             	cmp    %r12,%rsi
    d25a:	0f 83 18 01 00 00    	jae    d378 <dlmalloc+0x368>
    d260:	85 c0                	test   %eax,%eax
    d262:	0f 84 10 04 00 00    	je     d678 <dlmalloc+0x668>
    d268:	bf 01 00 00 00       	mov    $0x1,%edi
    d26d:	d3 e0                	shl    %cl,%eax
    d26f:	41 89 f9             	mov    %edi,%r9d
    d272:	41 d3 e1             	shl    %cl,%r9d
    d275:	45 01 c9             	add    %r9d,%r9d
    d278:	45 89 c8             	mov    %r9d,%r8d
    d27b:	41 f7 d8             	neg    %r8d
    d27e:	45 09 c8             	or     %r9d,%r8d
    d281:	44 21 c0             	and    %r8d,%eax
    d284:	89 c1                	mov    %eax,%ecx
    d286:	f7 d9                	neg    %ecx
    d288:	21 c1                	and    %eax,%ecx
    d28a:	f3 0f bc c9          	tzcnt  %ecx,%ecx
    d28e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d292:	4d 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%r8
    d297:	49 8b 58 10          	mov    0x10(%r8),%rbx
    d29b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d29f:	49 39 c0             	cmp    %rax,%r8
    d2a2:	0f 84 d1 05 00 00    	je     d879 <dlmalloc+0x869>
    d2a8:	48 3b 05 a9 d7 01 00 	cmp    0x1d7a9(%rip),%rax        # 2aa58 <_gm_+0x18>
    d2af:	0f 82 bb 03 00 00    	jb     d670 <dlmalloc+0x660>
    d2b5:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d2b9:	0f 85 b1 03 00 00    	jne    d670 <dlmalloc+0x660>
    d2bf:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d2c3:	49 89 40 10          	mov    %rax,0x10(%r8)
    d2c7:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    d2ce:	48 8b 3d 2b db 01 00 	mov    0x1db2b(%rip),%rdi        # 2ae00 <mparams>
    d2d5:	48 89 c2             	mov    %rax,%rdx
    d2d8:	48 89 c1             	mov    %rax,%rcx
    d2db:	48 01 d8             	add    %rbx,%rax
    d2de:	4c 29 e2             	sub    %r12,%rdx
    d2e1:	4c 31 ef             	xor    %r13,%rdi
    d2e4:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d2e8:	0f 86 8d 0d 00 00    	jbe    e07b <dlmalloc+0x106b>
    d2ee:	4c 89 e1             	mov    %r12,%rcx
    d2f1:	49 01 dc             	add    %rbx,%r12
    d2f4:	48 83 c9 03          	or     $0x3,%rcx
    d2f8:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d2fc:	48 89 d1             	mov    %rdx,%rcx
    d2ff:	48 83 c9 01          	or     $0x1,%rcx
    d303:	49 89 3c 24          	mov    %rdi,(%r12)
    d307:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    d30c:	48 89 10             	mov    %rdx,(%rax)
    d30f:	48 85 f6             	test   %rsi,%rsi
    d312:	74 4d                	je     d361 <dlmalloc+0x351>
    d314:	48 c1 ee 03          	shr    $0x3,%rsi
    d318:	bf 01 00 00 00       	mov    $0x1,%edi
    d31d:	48 8b 05 3c d7 01 00 	mov    0x1d73c(%rip),%rax        # 2aa60 <_gm_+0x20>
    d324:	48 89 f1             	mov    %rsi,%rcx
    d327:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d32b:	4d 8d 44 f5 00       	lea    0x0(%r13,%rsi,8),%r8
    d330:	8b 35 0a d7 01 00    	mov    0x1d70a(%rip),%esi        # 2aa40 <_gm_>
    d336:	d3 e7                	shl    %cl,%edi
    d338:	85 fe                	test   %edi,%esi
    d33a:	0f 84 a9 10 00 00    	je     e3e9 <dlmalloc+0x13d9>
    d340:	49 8b 48 10          	mov    0x10(%r8),%rcx
    d344:	48 3b 0d 0d d7 01 00 	cmp    0x1d70d(%rip),%rcx        # 2aa58 <_gm_+0x18>
    d34b:	0f 82 1f 03 00 00    	jb     d670 <dlmalloc+0x660>
    d351:	49 89 40 10          	mov    %rax,0x10(%r8)
    d355:	48 89 41 18          	mov    %rax,0x18(%rcx)
    d359:	48 89 48 10          	mov    %rcx,0x10(%rax)
    d35d:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d361:	48 89 15 e0 d6 01 00 	mov    %rdx,0x1d6e0(%rip)        # 2aa48 <_gm_+0x8>
    d368:	4c 89 25 f1 d6 01 00 	mov    %r12,0x1d6f1(%rip)        # 2aa60 <_gm_+0x20>
    d36f:	e9 ce fe ff ff       	jmp    d242 <dlmalloc+0x232>
    d374:	0f 1f 40 00          	nopl   0x0(%rax)
    d378:	48 8b 1d e1 d6 01 00 	mov    0x1d6e1(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d37f:	48 8b 3d 7a da 01 00 	mov    0x1da7a(%rip),%rdi        # 2ae00 <mparams>
    d386:	48 89 f2             	mov    %rsi,%rdx
    d389:	4c 29 e2             	sub    %r12,%rdx
    d38c:	48 8d 04 33          	lea    (%rbx,%rsi,1),%rax
    d390:	4c 31 ef             	xor    %r13,%rdi
    d393:	48 83 fa 1f          	cmp    $0x1f,%rdx
    d397:	0f 86 83 0a 00 00    	jbe    de20 <dlmalloc+0xe10>
    d39d:	48 89 d6             	mov    %rdx,%rsi
    d3a0:	4a 8d 0c 23          	lea    (%rbx,%r12,1),%rcx
    d3a4:	49 83 cc 03          	or     $0x3,%r12
    d3a8:	48 89 15 99 d6 01 00 	mov    %rdx,0x1d699(%rip)        # 2aa48 <_gm_+0x8>
    d3af:	48 83 ce 01          	or     $0x1,%rsi
    d3b3:	48 89 0d a6 d6 01 00 	mov    %rcx,0x1d6a6(%rip)        # 2aa60 <_gm_+0x20>
    d3ba:	48 89 71 08          	mov    %rsi,0x8(%rcx)
    d3be:	48 89 10             	mov    %rdx,(%rax)
    d3c1:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    d3c5:	48 89 39             	mov    %rdi,(%rcx)
    d3c8:	e9 75 fe ff ff       	jmp    d242 <dlmalloc+0x232>
    d3cd:	0f 1f 00             	nopl   (%rax)
    d3d0:	48 8b 1d 89 d6 01 00 	mov    0x1d689(%rip),%rbx        # 2aa60 <_gm_+0x20>
    d3d7:	48 c7 c6 ff ff ff ff 	mov    $0xffffffffffffffff,%rsi
    d3de:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    d3e2:	48 c7 05 5b d6 01 00 	movq   $0x0,0x1d65b(%rip)        # 2aa48 <_gm_+0x8>
    d3e9:	00 00 00 00 
    d3ed:	48 c7 05 68 d6 01 00 	movq   $0x0,0x1d668(%rip)        # 2aa60 <_gm_+0x20>
    d3f4:	00 00 00 00 
    d3f8:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    d3fc:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    d401:	4c 33 2d f8 d9 01 00 	xor    0x1d9f8(%rip),%r13        # 2ae00 <mparams>
    d408:	4c 89 28             	mov    %r13,(%rax)
    d40b:	e9 32 fe ff ff       	jmp    d242 <dlmalloc+0x232>
    d410:	4c 89 e0             	mov    %r12,%rax
    d413:	4c 89 e7             	mov    %r12,%rdi
    d416:	48 c1 e8 08          	shr    $0x8,%rax
    d41a:	48 f7 df             	neg    %rdi
    d41d:	41 89 c2             	mov    %eax,%r10d
    d420:	85 c0                	test   %eax,%eax
    d422:	0f 85 28 04 00 00    	jne    d850 <dlmalloc+0x840>
    d428:	48 8b 15 69 d8 01 00 	mov    0x1d869(%rip),%rdx        # 2ac98 <_gm_+0x258>
    d42f:	b9 39 00 00 00       	mov    $0x39,%ecx
    d434:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d439:	48 85 d2             	test   %rdx,%rdx
    d43c:	0f 84 52 04 00 00    	je     d894 <dlmalloc+0x884>
    d442:	4d 89 e3             	mov    %r12,%r11
    d445:	49 d3 e3             	shl    %cl,%r11
    d448:	31 c9                	xor    %ecx,%ecx
    d44a:	31 db                	xor    %ebx,%ebx
    d44c:	eb 05                	jmp    d453 <dlmalloc+0x443>
    d44e:	66 90                	xchg   %ax,%ax
    d450:	4d 01 db             	add    %r11,%r11
    d453:	48 8b 42 08          	mov    0x8(%rdx),%rax
    d457:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d45b:	4c 29 e0             	sub    %r12,%rax
    d45e:	48 39 f8             	cmp    %rdi,%rax
    d461:	73 0f                	jae    d472 <dlmalloc+0x462>
    d463:	48 85 c0             	test   %rax,%rax
    d466:	0f 84 c3 0b 00 00    	je     e02f <dlmalloc+0x101f>
    d46c:	48 89 c7             	mov    %rax,%rdi
    d46f:	48 89 d3             	mov    %rdx,%rbx
    d472:	48 8b 42 28          	mov    0x28(%rdx),%rax
    d476:	4d 89 de             	mov    %r11,%r14
    d479:	49 c1 ee 3f          	shr    $0x3f,%r14
    d47d:	4a 8b 54 f2 20       	mov    0x20(%rdx,%r14,8),%rdx
    d482:	48 85 c0             	test   %rax,%rax
    d485:	74 07                	je     d48e <dlmalloc+0x47e>
    d487:	48 39 d0             	cmp    %rdx,%rax
    d48a:	48 0f 45 c8          	cmovne %rax,%rcx
    d48e:	48 85 d2             	test   %rdx,%rdx
    d491:	75 bd                	jne    d450 <dlmalloc+0x440>
    d493:	48 89 c8             	mov    %rcx,%rax
    d496:	48 09 d8             	or     %rbx,%rax
    d499:	0f 84 eb 03 00 00    	je     d88a <dlmalloc+0x87a>
    d49f:	48 85 c9             	test   %rcx,%rcx
    d4a2:	75 0f                	jne    d4b3 <dlmalloc+0x4a3>
    d4a4:	eb 35                	jmp    d4db <dlmalloc+0x4cb>
    d4a6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    d4ad:	00 00 00 
    d4b0:	48 89 c1             	mov    %rax,%rcx
    d4b3:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d4b7:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d4bb:	4c 29 e0             	sub    %r12,%rax
    d4be:	48 39 f8             	cmp    %rdi,%rax
    d4c1:	73 06                	jae    d4c9 <dlmalloc+0x4b9>
    d4c3:	48 89 c7             	mov    %rax,%rdi
    d4c6:	48 89 cb             	mov    %rcx,%rbx
    d4c9:	48 8b 41 20          	mov    0x20(%rcx),%rax
    d4cd:	48 85 c0             	test   %rax,%rax
    d4d0:	75 de                	jne    d4b0 <dlmalloc+0x4a0>
    d4d2:	48 8b 41 28          	mov    0x28(%rcx),%rax
    d4d6:	48 85 c0             	test   %rax,%rax
    d4d9:	75 d5                	jne    d4b0 <dlmalloc+0x4a0>
    d4db:	48 85 db             	test   %rbx,%rbx
    d4de:	0f 84 0c fd ff ff    	je     d1f0 <dlmalloc+0x1e0>
    d4e4:	4c 89 c0             	mov    %r8,%rax
    d4e7:	4c 29 e0             	sub    %r12,%rax
    d4ea:	48 39 c7             	cmp    %rax,%rdi
    d4ed:	0f 83 fd fc ff ff    	jae    d1f0 <dlmalloc+0x1e0>
    d4f3:	4c 8b 1d 5e d5 01 00 	mov    0x1d55e(%rip),%r11        # 2aa58 <_gm_+0x18>
    d4fa:	4c 39 db             	cmp    %r11,%rbx
    d4fd:	0f 82 6d 01 00 00    	jb     d670 <dlmalloc+0x660>
    d503:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d507:	4c 39 d3             	cmp    %r10,%rbx
    d50a:	0f 83 60 01 00 00    	jae    d670 <dlmalloc+0x660>
    d510:	4c 8b 73 18          	mov    0x18(%rbx),%r14
    d514:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    d518:	4c 39 f3             	cmp    %r14,%rbx
    d51b:	0f 84 2d 0d 00 00    	je     e24e <dlmalloc+0x123e>
    d521:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d525:	4c 39 d8             	cmp    %r11,%rax
    d528:	0f 82 42 01 00 00    	jb     d670 <dlmalloc+0x660>
    d52e:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    d532:	0f 85 38 01 00 00    	jne    d670 <dlmalloc+0x660>
    d538:	49 3b 5e 10          	cmp    0x10(%r14),%rbx
    d53c:	0f 85 2e 01 00 00    	jne    d670 <dlmalloc+0x660>
    d542:	4c 89 70 18          	mov    %r14,0x18(%rax)
    d546:	49 89 46 10          	mov    %rax,0x10(%r14)
    d54a:	4d 85 ff             	test   %r15,%r15
    d54d:	74 71                	je     d5c0 <dlmalloc+0x5b0>
    d54f:	8b 53 38             	mov    0x38(%rbx),%edx
    d552:	48 89 d0             	mov    %rdx,%rax
    d555:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    d55c:	00 
    d55d:	0f 84 ca 0f 00 00    	je     e52d <dlmalloc+0x151d>
    d563:	4d 39 df             	cmp    %r11,%r15
    d566:	0f 82 04 01 00 00    	jb     d670 <dlmalloc+0x660>
    d56c:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    d570:	0f 84 3e 11 00 00    	je     e6b4 <dlmalloc+0x16a4>
    d576:	4d 89 77 28          	mov    %r14,0x28(%r15)
    d57a:	4d 85 f6             	test   %r14,%r14
    d57d:	74 41                	je     d5c0 <dlmalloc+0x5b0>
    d57f:	4d 39 de             	cmp    %r11,%r14
    d582:	0f 82 e8 00 00 00    	jb     d670 <dlmalloc+0x660>
    d588:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d58c:	4d 89 7e 30          	mov    %r15,0x30(%r14)
    d590:	48 85 c0             	test   %rax,%rax
    d593:	74 11                	je     d5a6 <dlmalloc+0x596>
    d595:	4c 39 d8             	cmp    %r11,%rax
    d598:	0f 82 d2 00 00 00    	jb     d670 <dlmalloc+0x660>
    d59e:	49 89 46 20          	mov    %rax,0x20(%r14)
    d5a2:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d5a6:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d5aa:	48 85 c0             	test   %rax,%rax
    d5ad:	74 11                	je     d5c0 <dlmalloc+0x5b0>
    d5af:	4c 39 d8             	cmp    %r11,%rax
    d5b2:	0f 82 b8 00 00 00    	jb     d670 <dlmalloc+0x660>
    d5b8:	49 89 46 28          	mov    %rax,0x28(%r14)
    d5bc:	4c 89 70 30          	mov    %r14,0x30(%rax)
    d5c0:	48 8b 15 39 d8 01 00 	mov    0x1d839(%rip),%rdx        # 2ae00 <mparams>
    d5c7:	4c 31 ea             	xor    %r13,%rdx
    d5ca:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d5ce:	0f 86 fa 0c 00 00    	jbe    e2ce <dlmalloc+0x12be>
    d5d4:	4c 89 e0             	mov    %r12,%rax
    d5d7:	48 89 f9             	mov    %rdi,%rcx
    d5da:	48 83 c8 03          	or     $0x3,%rax
    d5de:	48 c1 e9 03          	shr    $0x3,%rcx
    d5e2:	48 89 43 08          	mov    %rax,0x8(%rbx)
    d5e6:	48 89 f8             	mov    %rdi,%rax
    d5e9:	48 83 c8 01          	or     $0x1,%rax
    d5ed:	49 89 12             	mov    %rdx,(%r10)
    d5f0:	49 89 42 08          	mov    %rax,0x8(%r10)
    d5f4:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d5f8:	48 81 ff ff 00 00 00 	cmp    $0xff,%rdi
    d5ff:	0f 87 e8 0c 00 00    	ja     e2ed <dlmalloc+0x12dd>
    d605:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    d609:	8b 35 31 d4 01 00    	mov    0x1d431(%rip),%esi        # 2aa40 <_gm_>
    d60f:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    d614:	b8 01 00 00 00       	mov    $0x1,%eax
    d619:	d3 e0                	shl    %cl,%eax
    d61b:	85 c6                	test   %eax,%esi
    d61d:	0f 84 39 10 00 00    	je     e65c <dlmalloc+0x164c>
    d623:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d627:	4c 39 d8             	cmp    %r11,%rax
    d62a:	72 44                	jb     d670 <dlmalloc+0x660>
    d62c:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    d630:	4c 89 50 18          	mov    %r10,0x18(%rax)
    d634:	49 89 42 10          	mov    %rax,0x10(%r10)
    d638:	49 89 52 18          	mov    %rdx,0x18(%r10)
    d63c:	48 83 c3 10          	add    $0x10,%rbx
    d640:	4c 89 c6             	mov    %r8,%rsi
    d643:	0f 85 9e fa ff ff    	jne    d0e7 <dlmalloc+0xd7>
    d649:	e9 a2 fb ff ff       	jmp    d1f0 <dlmalloc+0x1e0>
    d64e:	66 90                	xchg   %ax,%ax
    d650:	c7 05 5a d7 01 00 00 	movl   $0x0,0x1d75a(%rip)        # 2adb4 <_gm_+0x374>
    d657:	00 00 00 
    d65a:	e9 bc fa ff ff       	jmp    d11b <dlmalloc+0x10b>
    d65f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    d663:	48 3b 05 ee d3 01 00 	cmp    0x1d3ee(%rip),%rax        # 2aa58 <_gm_+0x18>
    d66a:	0f 83 57 06 00 00    	jae    dcc7 <dlmalloc+0xcb7>
    d670:	e8 c2 4c 00 00       	call   12337 <abort>
    d675:	0f 1f 00             	nopl   (%rax)
    d678:	44 8b 0d c5 d3 01 00 	mov    0x1d3c5(%rip),%r9d        # 2aa44 <_gm_+0x4>
    d67f:	45 85 c9             	test   %r9d,%r9d
    d682:	0f 84 71 fb ff ff    	je     d1f9 <dlmalloc+0x1e9>
    d688:	44 89 c8             	mov    %r9d,%eax
    d68b:	f7 d8                	neg    %eax
    d68d:	44 21 c8             	and    %r9d,%eax
    d690:	f3 0f bc c0          	tzcnt  %eax,%eax
    d694:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    d69b:	00 
    d69c:	48 8b 78 08          	mov    0x8(%rax),%rdi
    d6a0:	48 89 c3             	mov    %rax,%rbx
    d6a3:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    d6a7:	4c 29 e7             	sub    %r12,%rdi
    d6aa:	eb 1d                	jmp    d6c9 <dlmalloc+0x6b9>
    d6ac:	0f 1f 40 00          	nopl   0x0(%rax)
    d6b0:	48 8b 41 08          	mov    0x8(%rcx),%rax
    d6b4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    d6b8:	4c 29 e0             	sub    %r12,%rax
    d6bb:	48 39 f8             	cmp    %rdi,%rax
    d6be:	73 06                	jae    d6c6 <dlmalloc+0x6b6>
    d6c0:	48 89 c7             	mov    %rax,%rdi
    d6c3:	48 89 cb             	mov    %rcx,%rbx
    d6c6:	48 89 c8             	mov    %rcx,%rax
    d6c9:	48 8b 48 20          	mov    0x20(%rax),%rcx
    d6cd:	48 85 c9             	test   %rcx,%rcx
    d6d0:	75 de                	jne    d6b0 <dlmalloc+0x6a0>
    d6d2:	48 8b 48 28          	mov    0x28(%rax),%rcx
    d6d6:	48 85 c9             	test   %rcx,%rcx
    d6d9:	75 d5                	jne    d6b0 <dlmalloc+0x6a0>
    d6db:	4c 8b 1d 76 d3 01 00 	mov    0x1d376(%rip),%r11        # 2aa58 <_gm_+0x18>
    d6e2:	4c 39 db             	cmp    %r11,%rbx
    d6e5:	72 89                	jb     d670 <dlmalloc+0x660>
    d6e7:	4e 8d 14 23          	lea    (%rbx,%r12,1),%r10
    d6eb:	4c 39 d3             	cmp    %r10,%rbx
    d6ee:	73 80                	jae    d670 <dlmalloc+0x660>
    d6f0:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    d6f4:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    d6f8:	49 39 d8             	cmp    %rbx,%r8
    d6fb:	0f 84 36 0d 00 00    	je     e437 <dlmalloc+0x1427>
    d701:	48 8b 43 10          	mov    0x10(%rbx),%rax
    d705:	4c 39 d8             	cmp    %r11,%rax
    d708:	0f 82 62 ff ff ff    	jb     d670 <dlmalloc+0x660>
    d70e:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    d712:	0f 85 58 ff ff ff    	jne    d670 <dlmalloc+0x660>
    d718:	49 39 58 10          	cmp    %rbx,0x10(%r8)
    d71c:	0f 85 4e ff ff ff    	jne    d670 <dlmalloc+0x660>
    d722:	4c 89 40 18          	mov    %r8,0x18(%rax)
    d726:	49 89 40 10          	mov    %rax,0x10(%r8)
    d72a:	4d 85 f6             	test   %r14,%r14
    d72d:	74 71                	je     d7a0 <dlmalloc+0x790>
    d72f:	8b 4b 38             	mov    0x38(%rbx),%ecx
    d732:	48 89 c8             	mov    %rcx,%rax
    d735:	49 39 9c cd 58 02 00 	cmp    %rbx,0x258(%r13,%rcx,8)
    d73c:	00 
    d73d:	0f 84 14 10 00 00    	je     e757 <dlmalloc+0x1747>
    d743:	4d 39 de             	cmp    %r11,%r14
    d746:	0f 82 24 ff ff ff    	jb     d670 <dlmalloc+0x660>
    d74c:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    d750:	0f 84 00 11 00 00    	je     e856 <dlmalloc+0x1846>
    d756:	4d 89 46 28          	mov    %r8,0x28(%r14)
    d75a:	4d 85 c0             	test   %r8,%r8
    d75d:	74 41                	je     d7a0 <dlmalloc+0x790>
    d75f:	4d 39 d8             	cmp    %r11,%r8
    d762:	0f 82 08 ff ff ff    	jb     d670 <dlmalloc+0x660>
    d768:	48 8b 43 20          	mov    0x20(%rbx),%rax
    d76c:	4d 89 70 30          	mov    %r14,0x30(%r8)
    d770:	48 85 c0             	test   %rax,%rax
    d773:	74 11                	je     d786 <dlmalloc+0x776>
    d775:	4c 39 d8             	cmp    %r11,%rax
    d778:	0f 82 f2 fe ff ff    	jb     d670 <dlmalloc+0x660>
    d77e:	49 89 40 20          	mov    %rax,0x20(%r8)
    d782:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d786:	48 8b 43 28          	mov    0x28(%rbx),%rax
    d78a:	48 85 c0             	test   %rax,%rax
    d78d:	74 11                	je     d7a0 <dlmalloc+0x790>
    d78f:	4c 39 d8             	cmp    %r11,%rax
    d792:	0f 82 d8 fe ff ff    	jb     d670 <dlmalloc+0x660>
    d798:	49 89 40 28          	mov    %rax,0x28(%r8)
    d79c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    d7a0:	48 8b 05 59 d6 01 00 	mov    0x1d659(%rip),%rax        # 2ae00 <mparams>
    d7a7:	4c 31 e8             	xor    %r13,%rax
    d7aa:	48 83 ff 1f          	cmp    $0x1f,%rdi
    d7ae:	0f 86 d2 0d 00 00    	jbe    e586 <dlmalloc+0x1576>
    d7b4:	4c 89 e1             	mov    %r12,%rcx
    d7b7:	48 83 c9 03          	or     $0x3,%rcx
    d7bb:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    d7bf:	49 89 02             	mov    %rax,(%r10)
    d7c2:	48 89 f8             	mov    %rdi,%rax
    d7c5:	48 83 c8 01          	or     $0x1,%rax
    d7c9:	49 89 42 08          	mov    %rax,0x8(%r10)
    d7cd:	49 89 3c 3a          	mov    %rdi,(%r10,%rdi,1)
    d7d1:	48 85 f6             	test   %rsi,%rsi
    d7d4:	74 46                	je     d81c <dlmalloc+0x80c>
    d7d6:	48 c1 ee 03          	shr    $0x3,%rsi
    d7da:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    d7e0:	48 8b 05 79 d2 01 00 	mov    0x1d279(%rip),%rax        # 2aa60 <_gm_+0x20>
    d7e7:	48 89 f1             	mov    %rsi,%rcx
    d7ea:	8d 74 36 09          	lea    0x9(%rsi,%rsi,1),%esi
    d7ee:	41 d3 e0             	shl    %cl,%r8d
    d7f1:	4d 8d 4c f5 00       	lea    0x0(%r13,%rsi,8),%r9
    d7f6:	44 85 c2             	test   %r8d,%edx
    d7f9:	0f 84 79 0f 00 00    	je     e778 <dlmalloc+0x1768>
    d7ff:	49 8b 51 10          	mov    0x10(%r9),%rdx
    d803:	4c 39 da             	cmp    %r11,%rdx
    d806:	0f 82 64 fe ff ff    	jb     d670 <dlmalloc+0x660>
    d80c:	49 89 41 10          	mov    %rax,0x10(%r9)
    d810:	48 89 42 18          	mov    %rax,0x18(%rdx)
    d814:	48 89 50 10          	mov    %rdx,0x10(%rax)
    d818:	4c 89 48 18          	mov    %r9,0x18(%rax)
    d81c:	48 89 3d 25 d2 01 00 	mov    %rdi,0x1d225(%rip)        # 2aa48 <_gm_+0x8>
    d823:	4c 89 15 36 d2 01 00 	mov    %r10,0x1d236(%rip)        # 2aa60 <_gm_+0x20>
    d82a:	48 83 c3 10          	add    $0x10,%rbx
    d82e:	0f 85 b3 f8 ff ff    	jne    d0e7 <dlmalloc+0xd7>
    d834:	48 8b 35 0d d2 01 00 	mov    0x1d20d(%rip),%rsi        # 2aa48 <_gm_+0x8>
    d83b:	e9 b0 f9 ff ff       	jmp    d1f0 <dlmalloc+0x1e0>
    d840:	0f b3 ca             	btr    %ecx,%edx
    d843:	89 15 f7 d1 01 00    	mov    %edx,0x1d1f7(%rip)        # 2aa40 <_gm_>
    d849:	e9 6d f8 ff ff       	jmp    d0bb <dlmalloc+0xab>
    d84e:	66 90                	xchg   %ax,%ax
    d850:	3d ff ff 00 00       	cmp    $0xffff,%eax
    d855:	0f 86 85 07 00 00    	jbe    dfe0 <dlmalloc+0xfd0>
    d85b:	48 8b 15 2e d5 01 00 	mov    0x1d52e(%rip),%rdx        # 2ad90 <_gm_+0x350>
    d862:	4d 89 e3             	mov    %r12,%r11
    d865:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    d86b:	48 85 d2             	test   %rdx,%rdx
    d86e:	0f 85 d4 fb ff ff    	jne    d448 <dlmalloc+0x438>
    d874:	e9 77 f9 ff ff       	jmp    d1f0 <dlmalloc+0x1e0>
    d879:	d3 e7                	shl    %cl,%edi
    d87b:	f7 d7                	not    %edi
    d87d:	21 d7                	and    %edx,%edi
    d87f:	89 3d bb d1 01 00    	mov    %edi,0x1d1bb(%rip)        # 2aa40 <_gm_>
    d885:	e9 3d fa ff ff       	jmp    d2c7 <dlmalloc+0x2b7>
    d88a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d88f:	44 89 d1             	mov    %r10d,%ecx
    d892:	d3 e0                	shl    %cl,%eax
    d894:	44 21 c8             	and    %r9d,%eax
    d897:	0f 84 53 f9 ff ff    	je     d1f0 <dlmalloc+0x1e0>
    d89d:	89 c2                	mov    %eax,%edx
    d89f:	31 db                	xor    %ebx,%ebx
    d8a1:	f7 da                	neg    %edx
    d8a3:	21 d0                	and    %edx,%eax
    d8a5:	f3 0f bc c0          	tzcnt  %eax,%eax
    d8a9:	49 8b 8c c5 58 02 00 	mov    0x258(%r13,%rax,8),%rcx
    d8b0:	00 
    d8b1:	48 85 c9             	test   %rcx,%rcx
    d8b4:	0f 85 f9 fb ff ff    	jne    d4b3 <dlmalloc+0x4a3>
    d8ba:	e9 31 f9 ff ff       	jmp    d1f0 <dlmalloc+0x1e0>
    d8bf:	90                   	nop
    d8c0:	48 85 d2             	test   %rdx,%rdx
    d8c3:	0f 84 74 12 00 00    	je     eb3d <dlmalloc+0x1b2d>
    d8c9:	48 8b 05 40 d5 01 00 	mov    0x1d540(%rip),%rax        # 2ae10 <mparams+0x10>
    d8d0:	49 8d 4c 04 5f       	lea    0x5f(%r12,%rax,1),%rcx
    d8d5:	48 f7 d8             	neg    %rax
    d8d8:	48 21 c1             	and    %rax,%rcx
    d8db:	49 39 cc             	cmp    %rcx,%r12
    d8de:	0f 83 99 f8 ff ff    	jae    d17d <dlmalloc+0x16d>
    d8e4:	48 8b 05 bd d4 01 00 	mov    0x1d4bd(%rip),%rax        # 2ada8 <_gm_+0x368>
    d8eb:	48 85 c0             	test   %rax,%rax
    d8ee:	74 1d                	je     d90d <dlmalloc+0x8fd>
    d8f0:	48 8b 15 a1 d4 01 00 	mov    0x1d4a1(%rip),%rdx        # 2ad98 <_gm_+0x358>
    d8f7:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    d8fb:	48 39 f2             	cmp    %rsi,%rdx
    d8fe:	0f 83 79 f8 ff ff    	jae    d17d <dlmalloc+0x16d>
    d904:	48 39 f0             	cmp    %rsi,%rax
    d907:	0f 82 70 f8 ff ff    	jb     d17d <dlmalloc+0x16d>
    d90d:	f6 05 9c d4 01 00 04 	testb  $0x4,0x1d49c(%rip)        # 2adb0 <_gm_+0x370>
    d914:	0f 85 b9 00 00 00    	jne    d9d3 <dlmalloc+0x9c3>
    d91a:	48 8b 15 47 d1 01 00 	mov    0x1d147(%rip),%rdx        # 2aa68 <_gm_+0x28>
    d921:	48 85 d2             	test   %rdx,%rdx
    d924:	0f 84 b6 05 00 00    	je     dee0 <dlmalloc+0xed0>
    d92a:	4c 8d 35 87 d4 01 00 	lea    0x1d487(%rip),%r14        # 2adb8 <_gm_+0x378>
    d931:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    d938:	49 8b 06             	mov    (%r14),%rax
    d93b:	48 39 c2             	cmp    %rax,%rdx
    d93e:	72 0d                	jb     d94d <dlmalloc+0x93d>
    d940:	49 03 46 08          	add    0x8(%r14),%rax
    d944:	48 39 c2             	cmp    %rax,%rdx
    d947:	0f 82 44 07 00 00    	jb     e091 <dlmalloc+0x1081>
    d94d:	4d 8b 76 10          	mov    0x10(%r14),%r14
    d951:	4d 85 f6             	test   %r14,%r14
    d954:	75 e2                	jne    d938 <dlmalloc+0x928>
    d956:	b8 01 00 00 00       	mov    $0x1,%eax
    d95b:	87 05 cf d4 01 00    	xchg   %eax,0x1d4cf(%rip)        # 2ae30 <malloc_global_mutex>
    d961:	85 c0                	test   %eax,%eax
    d963:	0f 84 8a 05 00 00    	je     def3 <dlmalloc+0xee3>
    d969:	45 31 f6             	xor    %r14d,%r14d
    d96c:	48 8d 15 bd d4 01 00 	lea    0x1d4bd(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    d973:	be 01 00 00 00       	mov    $0x1,%esi
    d978:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    d97f:	00 
    d980:	8b 02                	mov    (%rdx),%eax
    d982:	85 c0                	test   %eax,%eax
    d984:	75 fa                	jne    d980 <dlmalloc+0x970>
    d986:	89 f0                	mov    %esi,%eax
    d988:	87 05 a2 d4 01 00    	xchg   %eax,0x1d4a2(%rip)        # 2ae30 <malloc_global_mutex>
    d98e:	85 c0                	test   %eax,%eax
    d990:	75 ee                	jne    d980 <dlmalloc+0x970>
    d992:	4d 85 f6             	test   %r14,%r14
    d995:	0f 84 58 05 00 00    	je     def3 <dlmalloc+0xee3>
    d99b:	48 8b 05 6e d4 01 00 	mov    0x1d46e(%rip),%rax        # 2ae10 <mparams+0x10>
    d9a2:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    d9a6:	4c 2b 3d a3 d0 01 00 	sub    0x1d0a3(%rip),%r15        # 2aa50 <_gm_+0x10>
    d9ad:	48 f7 d8             	neg    %rax
    d9b0:	4d 01 e7             	add    %r12,%r15
    d9b3:	49 21 c7             	and    %rax,%r15
    d9b6:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d9bd:	ff ff 7f 
    d9c0:	4c 39 f8             	cmp    %r15,%rax
    d9c3:	0f 83 73 06 00 00    	jae    e03c <dlmalloc+0x102c>
    d9c9:	c7 05 5d d4 01 00 00 	movl   $0x0,0x1d45d(%rip)        # 2ae30 <malloc_global_mutex>
    d9d0:	00 00 00 
    d9d3:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    d9da:	ff ff 7f 
    d9dd:	48 39 c8             	cmp    %rcx,%rax
    d9e0:	73 16                	jae    d9f8 <dlmalloc+0x9e8>
    d9e2:	e8 a9 33 00 00       	call   10d90 <__errno_location>
    d9e7:	31 db                	xor    %ebx,%ebx
    d9e9:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    d9ef:	e9 1a f7 ff ff       	jmp    d10e <dlmalloc+0xfe>
    d9f4:	0f 1f 40 00          	nopl   0x0(%rax)
    d9f8:	b8 01 00 00 00       	mov    $0x1,%eax
    d9fd:	87 05 2d d4 01 00    	xchg   %eax,0x1d42d(%rip)        # 2ae30 <malloc_global_mutex>
    da03:	48 8d 15 26 d4 01 00 	lea    0x1d426(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    da0a:	be 01 00 00 00       	mov    $0x1,%esi
    da0f:	85 c0                	test   %eax,%eax
    da11:	0f 85 11 03 00 00    	jne    dd28 <dlmalloc+0xd18>
    da17:	48 89 cf             	mov    %rcx,%rdi
    da1a:	e8 11 eb ff ff       	call   c530 <sbrk>
    da1f:	31 ff                	xor    %edi,%edi
    da21:	48 89 c3             	mov    %rax,%rbx
    da24:	e8 07 eb ff ff       	call   c530 <sbrk>
    da29:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    da2d:	0f 95 c1             	setne  %cl
    da30:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    da34:	c7 05 f2 d3 01 00 00 	movl   $0x0,0x1d3f2(%rip)        # 2ae30 <malloc_global_mutex>
    da3b:	00 00 00 
    da3e:	0f 95 c2             	setne  %dl
    da41:	84 d1                	test   %dl,%cl
    da43:	74 9d                	je     d9e2 <dlmalloc+0x9d2>
    da45:	48 39 c3             	cmp    %rax,%rbx
    da48:	73 98                	jae    d9e2 <dlmalloc+0x9d2>
    da4a:	48 29 d8             	sub    %rbx,%rax
    da4d:	49 89 c7             	mov    %rax,%r15
    da50:	49 8d 44 24 50       	lea    0x50(%r12),%rax
    da55:	4c 39 f8             	cmp    %r15,%rax
    da58:	73 88                	jae    d9e2 <dlmalloc+0x9d2>
    da5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    da60:	48 8b 05 31 d3 01 00 	mov    0x1d331(%rip),%rax        # 2ad98 <_gm_+0x358>
    da67:	4c 01 f8             	add    %r15,%rax
    da6a:	48 39 05 2f d3 01 00 	cmp    %rax,0x1d32f(%rip)        # 2ada0 <_gm_+0x360>
    da71:	48 89 05 20 d3 01 00 	mov    %rax,0x1d320(%rip)        # 2ad98 <_gm_+0x358>
    da78:	73 07                	jae    da81 <dlmalloc+0xa71>
    da7a:	48 89 05 1f d3 01 00 	mov    %rax,0x1d31f(%rip)        # 2ada0 <_gm_+0x360>
    da81:	48 8b 35 e0 cf 01 00 	mov    0x1cfe0(%rip),%rsi        # 2aa68 <_gm_+0x28>
    da88:	48 8d 05 29 d3 01 00 	lea    0x1d329(%rip),%rax        # 2adb8 <_gm_+0x378>
    da8f:	48 85 f6             	test   %rsi,%rsi
    da92:	75 15                	jne    daa9 <dlmalloc+0xa99>
    da94:	e9 a7 02 00 00       	jmp    dd40 <dlmalloc+0xd30>
    da99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    daa0:	48 8b 40 10          	mov    0x10(%rax),%rax
    daa4:	48 85 c0             	test   %rax,%rax
    daa7:	74 27                	je     dad0 <dlmalloc+0xac0>
    daa9:	48 8b 10             	mov    (%rax),%rdx
    daac:	48 8b 48 08          	mov    0x8(%rax),%rcx
    dab0:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    dab4:	48 39 fb             	cmp    %rdi,%rbx
    dab7:	75 e7                	jne    daa0 <dlmalloc+0xa90>
    dab9:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    dabd:	75 11                	jne    dad0 <dlmalloc+0xac0>
    dabf:	48 39 d6             	cmp    %rdx,%rsi
    dac2:	72 0c                	jb     dad0 <dlmalloc+0xac0>
    dac4:	48 39 de             	cmp    %rbx,%rsi
    dac7:	0f 82 ed 09 00 00    	jb     e4ba <dlmalloc+0x14aa>
    dacd:	0f 1f 00             	nopl   (%rax)
    dad0:	48 3b 1d 81 cf 01 00 	cmp    0x1cf81(%rip),%rbx        # 2aa58 <_gm_+0x18>
    dad7:	73 07                	jae    dae0 <dlmalloc+0xad0>
    dad9:	48 89 1d 78 cf 01 00 	mov    %rbx,0x1cf78(%rip)        # 2aa58 <_gm_+0x18>
    dae0:	4a 8d 14 3b          	lea    (%rbx,%r15,1),%rdx
    dae4:	48 8d 05 cd d2 01 00 	lea    0x1d2cd(%rip),%rax        # 2adb8 <_gm_+0x378>
    daeb:	eb 10                	jmp    dafd <dlmalloc+0xaed>
    daed:	0f 1f 00             	nopl   (%rax)
    daf0:	48 8b 40 10          	mov    0x10(%rax),%rax
    daf4:	48 85 c0             	test   %rax,%rax
    daf7:	0f 84 b3 05 00 00    	je     e0b0 <dlmalloc+0x10a0>
    dafd:	48 39 10             	cmp    %rdx,(%rax)
    db00:	75 ee                	jne    daf0 <dlmalloc+0xae0>
    db02:	44 8b 48 18          	mov    0x18(%rax),%r9d
    db06:	49 89 d8             	mov    %rbx,%r8
    db09:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    db0d:	41 83 e0 0f          	and    $0xf,%r8d
    db11:	41 83 e1 08          	and    $0x8,%r9d
    db15:	0f 84 a5 05 00 00    	je     e0c0 <dlmalloc+0x10b0>
    db1b:	48 8d 05 96 d2 01 00 	lea    0x1d296(%rip),%rax        # 2adb8 <_gm_+0x378>
    db22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    db28:	48 8b 10             	mov    (%rax),%rdx
    db2b:	48 39 d6             	cmp    %rdx,%rsi
    db2e:	72 09                	jb     db39 <dlmalloc+0xb29>
    db30:	48 03 50 08          	add    0x8(%rax),%rdx
    db34:	48 39 d6             	cmp    %rdx,%rsi
    db37:	72 19                	jb     db52 <dlmalloc+0xb42>
    db39:	48 8b 40 10          	mov    0x10(%rax),%rax
    db3d:	48 85 c0             	test   %rax,%rax
    db40:	75 e6                	jne    db28 <dlmalloc+0xb18>
    db42:	48 8b 14 25 08 00 00 	mov    0x8,%rdx
    db49:	00 
    db4a:	48 03 14 25 00 00 00 	add    0x0,%rdx
    db51:	00 
    db52:	48 8d 42 b1          	lea    -0x4f(%rdx),%rax
    db56:	48 c7 c1 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rcx
    db5d:	a8 0f                	test   $0xf,%al
    db5f:	74 0a                	je     db6b <dlmalloc+0xb5b>
    db61:	48 f7 d8             	neg    %rax
    db64:	83 e0 0f             	and    $0xf,%eax
    db67:	48 8d 48 a1          	lea    -0x5f(%rax),%rcx
    db6b:	48 01 d1             	add    %rdx,%rcx
    db6e:	48 8d 46 20          	lea    0x20(%rsi),%rax
    db72:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    db76:	48 39 c1             	cmp    %rax,%rcx
    db79:	48 0f 42 ce          	cmovb  %rsi,%rcx
    db7d:	4c 8d 51 10          	lea    0x10(%rcx),%r10
    db81:	4d 85 c0             	test   %r8,%r8
    db84:	0f 84 86 02 00 00    	je     de10 <dlmalloc+0xe00>
    db8a:	48 f7 df             	neg    %rdi
    db8d:	4c 89 c8             	mov    %r9,%rax
    db90:	83 e7 0f             	and    $0xf,%edi
    db93:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    db97:	48 29 f8             	sub    %rdi,%rax
    db9a:	48 89 05 af ce 01 00 	mov    %rax,0x1ceaf(%rip)        # 2aa50 <_gm_+0x10>
    dba1:	48 83 c8 01          	or     $0x1,%rax
    dba5:	f3 0f 6f 15 0b d2 01 	movdqu 0x1d20b(%rip),%xmm2        # 2adb8 <_gm_+0x378>
    dbac:	00 
    dbad:	4c 89 05 b4 ce 01 00 	mov    %r8,0x1ceb4(%rip)        # 2aa68 <_gm_+0x28>
    dbb4:	49 89 40 08          	mov    %rax,0x8(%r8)
    dbb8:	48 8b 05 61 d2 01 00 	mov    0x1d261(%rip),%rax        # 2ae20 <mparams+0x20>
    dbbf:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    dbc6:	00 00 
    dbc8:	48 89 05 a1 ce 01 00 	mov    %rax,0x1cea1(%rip)        # 2aa70 <_gm_+0x30>
    dbcf:	48 8b 05 2a d2 01 00 	mov    0x1d22a(%rip),%rax        # 2ae00 <mparams>
    dbd6:	0f 11 51 10          	movups %xmm2,0x10(%rcx)
    dbda:	f3 0f 6f 1d e6 d1 01 	movdqu 0x1d1e6(%rip),%xmm3        # 2adc8 <_gm_+0x388>
    dbe1:	00 
    dbe2:	4c 31 e8             	xor    %r13,%rax
    dbe5:	48 c7 41 08 33 00 00 	movq   $0x33,0x8(%rcx)
    dbec:	00 
    dbed:	48 89 41 30          	mov    %rax,0x30(%rcx)
    dbf1:	48 8d 41 38          	lea    0x38(%rcx),%rax
    dbf5:	48 89 c7             	mov    %rax,%rdi
    dbf8:	48 8d 41 40          	lea    0x40(%rcx),%rax
    dbfc:	0f 11 59 20          	movups %xmm3,0x20(%rcx)
    dc00:	48 f7 d7             	not    %rdi
    dc03:	48 89 1d ae d1 01 00 	mov    %rbx,0x1d1ae(%rip)        # 2adb8 <_gm_+0x378>
    dc0a:	48 01 d7             	add    %rdx,%rdi
    dc0d:	4c 89 3d ac d1 01 00 	mov    %r15,0x1d1ac(%rip)        # 2adc0 <_gm_+0x380>
    dc14:	48 c1 ef 03          	shr    $0x3,%rdi
    dc18:	4c 89 15 a9 d1 01 00 	mov    %r10,0x1d1a9(%rip)        # 2adc8 <_gm_+0x388>
    dc1f:	c7 05 a7 d1 01 00 00 	movl   $0x0,0x1d1a7(%rip)        # 2add0 <_gm_+0x390>
    dc26:	00 00 00 
    dc29:	83 e7 01             	and    $0x1,%edi
    dc2c:	48 c7 41 38 0b 00 00 	movq   $0xb,0x38(%rcx)
    dc33:	00 
    dc34:	48 39 d0             	cmp    %rdx,%rax
    dc37:	73 2f                	jae    dc68 <dlmalloc+0xc58>
    dc39:	48 85 ff             	test   %rdi,%rdi
    dc3c:	74 12                	je     dc50 <dlmalloc+0xc40>
    dc3e:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dc45:	48 8d 41 48          	lea    0x48(%rcx),%rax
    dc49:	48 39 d0             	cmp    %rdx,%rax
    dc4c:	73 1a                	jae    dc68 <dlmalloc+0xc58>
    dc4e:	66 90                	xchg   %ax,%ax
    dc50:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    dc57:	48 83 c0 10          	add    $0x10,%rax
    dc5b:	48 c7 40 f8 0b 00 00 	movq   $0xb,-0x8(%rax)
    dc62:	00 
    dc63:	48 39 d0             	cmp    %rdx,%rax
    dc66:	72 e8                	jb     dc50 <dlmalloc+0xc40>
    dc68:	48 39 ce             	cmp    %rcx,%rsi
    dc6b:	0f 84 5f 02 00 00    	je     ded0 <dlmalloc+0xec0>
    dc71:	48 89 ca             	mov    %rcx,%rdx
    dc74:	48 83 61 08 fe       	andq   $0xfffffffffffffffe,0x8(%rcx)
    dc79:	48 29 f2             	sub    %rsi,%rdx
    dc7c:	48 89 d0             	mov    %rdx,%rax
    dc7f:	48 83 c8 01          	or     $0x1,%rax
    dc83:	48 89 46 08          	mov    %rax,0x8(%rsi)
    dc87:	48 89 11             	mov    %rdx,(%rcx)
    dc8a:	48 89 d1             	mov    %rdx,%rcx
    dc8d:	48 c1 e9 03          	shr    $0x3,%rcx
    dc91:	48 81 fa ff 00 00 00 	cmp    $0xff,%rdx
    dc98:	0f 87 92 01 00 00    	ja     de30 <dlmalloc+0xe20>
    dc9e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    dca2:	8b 3d 98 cd 01 00    	mov    0x1cd98(%rip),%edi        # 2aa40 <_gm_>
    dca8:	49 8d 54 c5 00       	lea    0x0(%r13,%rax,8),%rdx
    dcad:	b8 01 00 00 00       	mov    $0x1,%eax
    dcb2:	d3 e0                	shl    %cl,%eax
    dcb4:	85 c7                	test   %eax,%edi
    dcb6:	0f 85 a3 f9 ff ff    	jne    d65f <dlmalloc+0x64f>
    dcbc:	09 c7                	or     %eax,%edi
    dcbe:	48 89 d0             	mov    %rdx,%rax
    dcc1:	89 3d 79 cd 01 00    	mov    %edi,0x1cd79(%rip)        # 2aa40 <_gm_>
    dcc7:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    dccb:	48 89 70 18          	mov    %rsi,0x18(%rax)
    dccf:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    dcd3:	48 89 46 10          	mov    %rax,0x10(%rsi)
    dcd7:	48 8b 05 72 cd 01 00 	mov    0x1cd72(%rip),%rax        # 2aa50 <_gm_+0x10>
    dcde:	49 39 c4             	cmp    %rax,%r12
    dce1:	0f 83 fb fc ff ff    	jae    d9e2 <dlmalloc+0x9d2>
    dce7:	48 8b 1d 7a cd 01 00 	mov    0x1cd7a(%rip),%rbx        # 2aa68 <_gm_+0x28>
    dcee:	4c 29 e0             	sub    %r12,%rax
    dcf1:	4c 33 2d 08 d1 01 00 	xor    0x1d108(%rip),%r13        # 2ae00 <mparams>
    dcf8:	48 89 05 51 cd 01 00 	mov    %rax,0x1cd51(%rip)        # 2aa50 <_gm_+0x10>
    dcff:	48 83 c8 01          	or     $0x1,%rax
    dd03:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    dd07:	49 83 cc 03          	or     $0x3,%r12
    dd0b:	48 89 15 56 cd 01 00 	mov    %rdx,0x1cd56(%rip)        # 2aa68 <_gm_+0x28>
    dd12:	48 89 42 08          	mov    %rax,0x8(%rdx)
    dd16:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    dd1a:	4c 89 2a             	mov    %r13,(%rdx)
    dd1d:	e9 20 f5 ff ff       	jmp    d242 <dlmalloc+0x232>
    dd22:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    dd28:	8b 02                	mov    (%rdx),%eax
    dd2a:	85 c0                	test   %eax,%eax
    dd2c:	75 fa                	jne    dd28 <dlmalloc+0xd18>
    dd2e:	89 f0                	mov    %esi,%eax
    dd30:	87 05 fa d0 01 00    	xchg   %eax,0x1d0fa(%rip)        # 2ae30 <malloc_global_mutex>
    dd36:	85 c0                	test   %eax,%eax
    dd38:	75 ee                	jne    dd28 <dlmalloc+0xd18>
    dd3a:	e9 d8 fc ff ff       	jmp    da17 <dlmalloc+0xa07>
    dd3f:	90                   	nop
    dd40:	48 8b 05 11 cd 01 00 	mov    0x1cd11(%rip),%rax        # 2aa58 <_gm_+0x18>
    dd47:	48 85 c0             	test   %rax,%rax
    dd4a:	74 05                	je     dd51 <dlmalloc+0xd41>
    dd4c:	48 39 c3             	cmp    %rax,%rbx
    dd4f:	73 07                	jae    dd58 <dlmalloc+0xd48>
    dd51:	48 89 1d 00 cd 01 00 	mov    %rbx,0x1cd00(%rip)        # 2aa58 <_gm_+0x18>
    dd58:	48 8b 05 a1 d0 01 00 	mov    0x1d0a1(%rip),%rax        # 2ae00 <mparams>
    dd5f:	48 89 1d 52 d0 01 00 	mov    %rbx,0x1d052(%rip)        # 2adb8 <_gm_+0x378>
    dd66:	4c 89 3d 53 d0 01 00 	mov    %r15,0x1d053(%rip)        # 2adc0 <_gm_+0x380>
    dd6d:	c7 05 59 d0 01 00 00 	movl   $0x0,0x1d059(%rip)        # 2add0 <_gm_+0x390>
    dd74:	00 00 00 
    dd77:	48 c7 05 f6 cc 01 00 	movq   $0xffffffffffffffff,0x1ccf6(%rip)        # 2aa78 <_gm_+0x38>
    dd7e:	ff ff ff ff 
    dd82:	48 89 05 f7 cc 01 00 	mov    %rax,0x1ccf7(%rip)        # 2aa80 <_gm_+0x40>
    dd89:	48 8d 05 f8 cc 01 00 	lea    0x1ccf8(%rip),%rax        # 2aa88 <_gm_+0x48>
    dd90:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    dd97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dd9e:	00 00 
    dda0:	66 48 0f 6e c0       	movq   %rax,%xmm0
    dda5:	48 83 c0 10          	add    $0x10,%rax
    dda9:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    ddad:	0f 11 00             	movups %xmm0,(%rax)
    ddb0:	48 39 d0             	cmp    %rdx,%rax
    ddb3:	75 eb                	jne    dda0 <dlmalloc+0xd90>
    ddb5:	49 83 ef 50          	sub    $0x50,%r15
    ddb9:	48 8d 53 10          	lea    0x10(%rbx),%rdx
    ddbd:	f6 c3 0f             	test   $0xf,%bl
    ddc0:	0f 84 aa 02 00 00    	je     e070 <dlmalloc+0x1060>
    ddc6:	48 f7 da             	neg    %rdx
    ddc9:	4c 89 f8             	mov    %r15,%rax
    ddcc:	83 e2 0f             	and    $0xf,%edx
    ddcf:	48 8d 0c 13          	lea    (%rbx,%rdx,1),%rcx
    ddd3:	48 29 d0             	sub    %rdx,%rax
    ddd6:	48 89 c2             	mov    %rax,%rdx
    ddd9:	48 89 0d 88 cc 01 00 	mov    %rcx,0x1cc88(%rip)        # 2aa68 <_gm_+0x28>
    dde0:	48 83 ca 01          	or     $0x1,%rdx
    dde4:	48 89 05 65 cc 01 00 	mov    %rax,0x1cc65(%rip)        # 2aa50 <_gm_+0x10>
    ddeb:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    ddef:	48 8b 15 2a d0 01 00 	mov    0x1d02a(%rip),%rdx        # 2ae20 <mparams+0x20>
    ddf6:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    ddfd:	00 00 
    ddff:	48 89 15 6a cc 01 00 	mov    %rdx,0x1cc6a(%rip)        # 2aa70 <_gm_+0x30>
    de06:	e9 d3 fe ff ff       	jmp    dcde <dlmalloc+0xcce>
    de0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    de10:	4c 89 c8             	mov    %r9,%rax
    de13:	49 89 d8             	mov    %rbx,%r8
    de16:	e9 7f fd ff ff       	jmp    db9a <dlmalloc+0xb8a>
    de1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    de20:	48 83 ce 03          	or     $0x3,%rsi
    de24:	e9 b9 f5 ff ff       	jmp    d3e2 <dlmalloc+0x3d2>
    de29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    de30:	48 89 d0             	mov    %rdx,%rax
    de33:	48 c1 e8 08          	shr    $0x8,%rax
    de37:	89 c1                	mov    %eax,%ecx
    de39:	85 c0                	test   %eax,%eax
    de3b:	0f 84 60 03 00 00    	je     e1a1 <dlmalloc+0x1191>
    de41:	3d ff ff 00 00       	cmp    $0xffff,%eax
    de46:	0f 87 ad 05 00 00    	ja     e3f9 <dlmalloc+0x13e9>
    de4c:	0f bd c1             	bsr    %ecx,%eax
    de4f:	b9 26 00 00 00       	mov    $0x26,%ecx
    de54:	48 89 d3             	mov    %rdx,%rbx
    de57:	bf 1f 00 00 00       	mov    $0x1f,%edi
    de5c:	83 f0 1f             	xor    $0x1f,%eax
    de5f:	29 c1                	sub    %eax,%ecx
    de61:	29 c7                	sub    %eax,%edi
    de63:	48 d3 eb             	shr    %cl,%rbx
    de66:	48 89 d9             	mov    %rbx,%rcx
    de69:	83 e1 01             	and    $0x1,%ecx
    de6c:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    de6f:	bf 01 00 00 00       	mov    $0x1,%edi
    de74:	44 8d 41 4b          	lea    0x4b(%rcx),%r8d
    de78:	d3 e7                	shl    %cl,%edi
    de7a:	49 c1 e0 03          	shl    $0x3,%r8
    de7e:	8b 05 c0 cb 01 00    	mov    0x1cbc0(%rip),%eax        # 2aa44 <_gm_+0x4>
    de84:	66 48 0f 6e ce       	movq   %rsi,%xmm1
    de89:	66 0f ef c0          	pxor   %xmm0,%xmm0
    de8d:	89 4e 38             	mov    %ecx,0x38(%rsi)
    de90:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    de94:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    de98:	85 f8                	test   %edi,%eax
    de9a:	0f 85 11 03 00 00    	jne    e1b1 <dlmalloc+0x11a1>
    dea0:	09 f8                	or     %edi,%eax
    dea2:	4d 01 e8             	add    %r13,%r8
    dea5:	49 89 b4 cd 58 02 00 	mov    %rsi,0x258(%r13,%rcx,8)
    deac:	00 
    dead:	89 05 91 cb 01 00    	mov    %eax,0x1cb91(%rip)        # 2aa44 <_gm_+0x4>
    deb3:	48 8b 05 96 cb 01 00 	mov    0x1cb96(%rip),%rax        # 2aa50 <_gm_+0x10>
    deba:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    debe:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    dec2:	e9 17 fe ff ff       	jmp    dcde <dlmalloc+0xcce>
    dec7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    dece:	00 00 
    ded0:	48 8b 05 79 cb 01 00 	mov    0x1cb79(%rip),%rax        # 2aa50 <_gm_+0x10>
    ded7:	e9 02 fe ff ff       	jmp    dcde <dlmalloc+0xcce>
    dedc:	0f 1f 40 00          	nopl   0x0(%rax)
    dee0:	b8 01 00 00 00       	mov    $0x1,%eax
    dee5:	87 05 45 cf 01 00    	xchg   %eax,0x1cf45(%rip)        # 2ae30 <malloc_global_mutex>
    deeb:	85 c0                	test   %eax,%eax
    deed:	0f 85 76 fa ff ff    	jne    d969 <dlmalloc+0x959>
    def3:	31 ff                	xor    %edi,%edi
    def5:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    defa:	e8 31 e6 ff ff       	call   c530 <sbrk>
    deff:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    df04:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    df08:	49 89 c6             	mov    %rax,%r14
    df0b:	0f 84 b8 fa ff ff    	je     d9c9 <dlmalloc+0x9b9>
    df11:	48 8b 15 f0 ce 01 00 	mov    0x1cef0(%rip),%rdx        # 2ae08 <mparams+0x8>
    df18:	49 89 cf             	mov    %rcx,%r15
    df1b:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    df1f:	49 85 c6             	test   %rax,%r14
    df22:	74 0f                	je     df33 <dlmalloc+0xf23>
    df24:	4c 01 f0             	add    %r14,%rax
    df27:	48 f7 da             	neg    %rdx
    df2a:	4d 29 f7             	sub    %r14,%r15
    df2d:	48 21 d0             	and    %rdx,%rax
    df30:	49 01 c7             	add    %rax,%r15
    df33:	48 8b 05 5e ce 01 00 	mov    0x1ce5e(%rip),%rax        # 2ad98 <_gm_+0x358>
    df3a:	4d 39 fc             	cmp    %r15,%r12
    df3d:	0f 83 86 fa ff ff    	jae    d9c9 <dlmalloc+0x9b9>
    df43:	48 ba fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rdx
    df4a:	ff ff 7f 
    df4d:	4c 39 fa             	cmp    %r15,%rdx
    df50:	0f 82 73 fa ff ff    	jb     d9c9 <dlmalloc+0x9b9>
    df56:	48 8b 15 4b ce 01 00 	mov    0x1ce4b(%rip),%rdx        # 2ada8 <_gm_+0x368>
    df5d:	48 85 d2             	test   %rdx,%rdx
    df60:	74 16                	je     df78 <dlmalloc+0xf68>
    df62:	4a 8d 34 38          	lea    (%rax,%r15,1),%rsi
    df66:	48 39 f0             	cmp    %rsi,%rax
    df69:	0f 83 5a fa ff ff    	jae    d9c9 <dlmalloc+0x9b9>
    df6f:	48 39 f2             	cmp    %rsi,%rdx
    df72:	0f 82 51 fa ff ff    	jb     d9c9 <dlmalloc+0x9b9>
    df78:	4c 89 ff             	mov    %r15,%rdi
    df7b:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    df80:	e8 ab e5 ff ff       	call   c530 <sbrk>
    df85:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    df8a:	49 39 c6             	cmp    %rax,%r14
    df8d:	48 89 c3             	mov    %rax,%rbx
    df90:	74 3c                	je     dfce <dlmalloc+0xfbe>
    df92:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    df96:	0f 84 2d fa ff ff    	je     d9c9 <dlmalloc+0x9b9>
    df9c:	49 8d 44 24 60       	lea    0x60(%r12),%rax
    dfa1:	49 39 c7             	cmp    %rax,%r15
    dfa4:	73 28                	jae    dfce <dlmalloc+0xfbe>
    dfa6:	48 8b 05 63 ce 01 00 	mov    0x1ce63(%rip),%rax        # 2ae10 <mparams+0x10>
    dfad:	4d 8d 74 04 5f       	lea    0x5f(%r12,%rax,1),%r14
    dfb2:	48 f7 d8             	neg    %rax
    dfb5:	4d 29 fe             	sub    %r15,%r14
    dfb8:	49 21 c6             	and    %rax,%r14
    dfbb:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    dfc2:	ff ff 7f 
    dfc5:	4c 39 f0             	cmp    %r14,%rax
    dfc8:	0f 83 91 08 00 00    	jae    e85f <dlmalloc+0x184f>
    dfce:	c7 05 58 ce 01 00 00 	movl   $0x0,0x1ce58(%rip)        # 2ae30 <malloc_global_mutex>
    dfd5:	00 00 00 
    dfd8:	e9 83 fa ff ff       	jmp    da60 <dlmalloc+0xa50>
    dfdd:	0f 1f 00             	nopl   (%rax)
    dfe0:	44 0f bd d0          	bsr    %eax,%r10d
    dfe4:	b9 26 00 00 00       	mov    $0x26,%ecx
    dfe9:	4c 89 e0             	mov    %r12,%rax
    dfec:	ba 1f 00 00 00       	mov    $0x1f,%edx
    dff1:	41 83 f2 1f          	xor    $0x1f,%r10d
    dff5:	44 29 d1             	sub    %r10d,%ecx
    dff8:	44 29 d2             	sub    %r10d,%edx
    dffb:	48 d3 e8             	shr    %cl,%rax
    dffe:	83 e0 01             	and    $0x1,%eax
    e001:	8d 04 50             	lea    (%rax,%rdx,2),%eax
    e004:	49 8b 94 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdx
    e00b:	00 
    e00c:	49 89 c2             	mov    %rax,%r10
    e00f:	48 85 d2             	test   %rdx,%rdx
    e012:	0f 84 72 f8 ff ff    	je     d88a <dlmalloc+0x87a>
    e018:	83 f8 1f             	cmp    $0x1f,%eax
    e01b:	0f 84 d4 09 00 00    	je     e9f5 <dlmalloc+0x19e5>
    e021:	d1 e8                	shr    %eax
    e023:	b9 39 00 00 00       	mov    $0x39,%ecx
    e028:	29 c1                	sub    %eax,%ecx
    e02a:	e9 13 f4 ff ff       	jmp    d442 <dlmalloc+0x432>
    e02f:	48 89 d3             	mov    %rdx,%rbx
    e032:	31 ff                	xor    %edi,%edi
    e034:	48 89 d1             	mov    %rdx,%rcx
    e037:	e9 77 f4 ff ff       	jmp    d4b3 <dlmalloc+0x4a3>
    e03c:	4c 89 ff             	mov    %r15,%rdi
    e03f:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e044:	e8 e7 e4 ff ff       	call   c530 <sbrk>
    e049:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e04e:	48 89 c3             	mov    %rax,%rbx
    e051:	49 8b 46 08          	mov    0x8(%r14),%rax
    e055:	49 03 06             	add    (%r14),%rax
    e058:	48 39 c3             	cmp    %rax,%rbx
    e05b:	0f 85 31 ff ff ff    	jne    df92 <dlmalloc+0xf82>
    e061:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    e065:	0f 85 63 ff ff ff    	jne    dfce <dlmalloc+0xfbe>
    e06b:	e9 59 f9 ff ff       	jmp    d9c9 <dlmalloc+0x9b9>
    e070:	4c 89 f8             	mov    %r15,%rax
    e073:	48 89 d9             	mov    %rbx,%rcx
    e076:	e9 5b fd ff ff       	jmp    ddd6 <dlmalloc+0xdc6>
    e07b:	83 c9 03             	or     $0x3,%ecx
    e07e:	89 ce                	mov    %ecx,%esi
    e080:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    e084:	48 89 38             	mov    %rdi,(%rax)
    e087:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e08c:	e9 b1 f1 ff ff       	jmp    d242 <dlmalloc+0x232>
    e091:	b8 01 00 00 00       	mov    $0x1,%eax
    e096:	87 05 94 cd 01 00    	xchg   %eax,0x1cd94(%rip)        # 2ae30 <malloc_global_mutex>
    e09c:	85 c0                	test   %eax,%eax
    e09e:	0f 84 f7 f8 ff ff    	je     d99b <dlmalloc+0x98b>
    e0a4:	e9 c3 f8 ff ff       	jmp    d96c <dlmalloc+0x95c>
    e0a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    e0b0:	49 89 d8             	mov    %rbx,%r8
    e0b3:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    e0b7:	41 83 e0 0f          	and    $0xf,%r8d
    e0bb:	e9 5b fa ff ff       	jmp    db1b <dlmalloc+0xb0b>
    e0c0:	4c 01 78 08          	add    %r15,0x8(%rax)
    e0c4:	49 89 d2             	mov    %rdx,%r10
    e0c7:	48 89 18             	mov    %rbx,(%rax)
    e0ca:	4d 85 c0             	test   %r8,%r8
    e0cd:	74 09                	je     e0d8 <dlmalloc+0x10c8>
    e0cf:	48 f7 df             	neg    %rdi
    e0d2:	83 e7 0f             	and    $0xf,%edi
    e0d5:	48 01 fb             	add    %rdi,%rbx
    e0d8:	48 8d 42 10          	lea    0x10(%rdx),%rax
    e0dc:	f6 c2 0f             	test   $0xf,%dl
    e0df:	74 0a                	je     e0eb <dlmalloc+0x10db>
    e0e1:	48 f7 d8             	neg    %rax
    e0e4:	83 e0 0f             	and    $0xf,%eax
    e0e7:	4c 8d 14 02          	lea    (%rdx,%rax,1),%r10
    e0eb:	48 8b 0d 0e cd 01 00 	mov    0x1cd0e(%rip),%rcx        # 2ae00 <mparams>
    e0f2:	4c 89 d0             	mov    %r10,%rax
    e0f5:	4a 8d 14 23          	lea    (%rbx,%r12,1),%rdx
    e0f9:	48 29 d8             	sub    %rbx,%rax
    e0fc:	4c 29 e0             	sub    %r12,%rax
    e0ff:	4c 31 e9             	xor    %r13,%rcx
    e102:	49 83 cc 03          	or     $0x3,%r12
    e106:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    e10a:	48 89 0a             	mov    %rcx,(%rdx)
    e10d:	4c 39 d6             	cmp    %r10,%rsi
    e110:	0f 84 38 04 00 00    	je     e54e <dlmalloc+0x153e>
    e116:	4c 39 15 43 c9 01 00 	cmp    %r10,0x1c943(%rip)        # 2aa60 <_gm_+0x20>
    e11d:	0f 84 49 05 00 00    	je     e66c <dlmalloc+0x165c>
    e123:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e127:	4c 89 d1             	mov    %r10,%rcx
    e12a:	48 89 f7             	mov    %rsi,%rdi
    e12d:	83 e7 03             	and    $0x3,%edi
    e130:	48 83 ff 01          	cmp    $0x1,%rdi
    e134:	0f 84 a2 05 00 00    	je     e6dc <dlmalloc+0x16cc>
    e13a:	48 83 e6 fe          	and    $0xfffffffffffffffe,%rsi
    e13e:	49 89 72 08          	mov    %rsi,0x8(%r10)
    e142:	48 89 c6             	mov    %rax,%rsi
    e145:	48 83 ce 01          	or     $0x1,%rsi
    e149:	48 89 72 08          	mov    %rsi,0x8(%rdx)
    e14d:	48 89 01             	mov    %rax,(%rcx)
    e150:	48 89 c1             	mov    %rax,%rcx
    e153:	48 c1 e9 03          	shr    $0x3,%rcx
    e157:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    e15d:	0f 87 42 04 00 00    	ja     e5a5 <dlmalloc+0x1595>
    e163:	bf 01 00 00 00       	mov    $0x1,%edi
    e168:	8b 35 d2 c8 01 00    	mov    0x1c8d2(%rip),%esi        # 2aa40 <_gm_>
    e16e:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    e172:	d3 e7                	shl    %cl,%edi
    e174:	49 8d 44 c5 00       	lea    0x0(%r13,%rax,8),%rax
    e179:	85 fe                	test   %edi,%esi
    e17b:	0f 85 08 06 00 00    	jne    e789 <dlmalloc+0x1779>
    e181:	09 fe                	or     %edi,%esi
    e183:	48 89 c1             	mov    %rax,%rcx
    e186:	89 35 b4 c8 01 00    	mov    %esi,0x1c8b4(%rip)        # 2aa40 <_gm_>
    e18c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    e190:	48 89 51 18          	mov    %rdx,0x18(%rcx)
    e194:	48 89 4a 10          	mov    %rcx,0x10(%rdx)
    e198:	48 89 42 18          	mov    %rax,0x18(%rdx)
    e19c:	e9 a1 f0 ff ff       	jmp    d242 <dlmalloc+0x232>
    e1a1:	bf 01 00 00 00       	mov    $0x1,%edi
    e1a6:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    e1ac:	e9 cd fc ff ff       	jmp    de7e <dlmalloc+0xe6e>
    e1b1:	89 c8                	mov    %ecx,%eax
    e1b3:	49 89 d0             	mov    %rdx,%r8
    e1b6:	49 8b bc c5 58 02 00 	mov    0x258(%r13,%rax,8),%rdi
    e1bd:	00 
    e1be:	83 f9 1f             	cmp    $0x1f,%ecx
    e1c1:	74 33                	je     e1f6 <dlmalloc+0x11e6>
    e1c3:	89 c8                	mov    %ecx,%eax
    e1c5:	b9 39 00 00 00       	mov    $0x39,%ecx
    e1ca:	d1 e8                	shr    %eax
    e1cc:	29 c1                	sub    %eax,%ecx
    e1ce:	49 d3 e0             	shl    %cl,%r8
    e1d1:	eb 23                	jmp    e1f6 <dlmalloc+0x11e6>
    e1d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    e1d8:	4c 89 c0             	mov    %r8,%rax
    e1db:	4d 01 c0             	add    %r8,%r8
    e1de:	48 c1 e8 3f          	shr    $0x3f,%rax
    e1e2:	48 83 c0 04          	add    $0x4,%rax
    e1e6:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    e1ea:	48 85 c9             	test   %rcx,%rcx
    e1ed:	0f 84 1b 02 00 00    	je     e40e <dlmalloc+0x13fe>
    e1f3:	48 89 cf             	mov    %rcx,%rdi
    e1f6:	48 8b 47 08          	mov    0x8(%rdi),%rax
    e1fa:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e1fe:	48 39 c2             	cmp    %rax,%rdx
    e201:	75 d5                	jne    e1d8 <dlmalloc+0x11c8>
    e203:	48 8b 47 10          	mov    0x10(%rdi),%rax
    e207:	48 8b 15 4a c8 01 00 	mov    0x1c84a(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e20e:	66 48 0f 6e e7       	movq   %rdi,%xmm4
    e213:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e218:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    e21c:	48 39 d7             	cmp    %rdx,%rdi
    e21f:	0f 82 4b f4 ff ff    	jb     d670 <dlmalloc+0x660>
    e225:	48 39 d0             	cmp    %rdx,%rax
    e228:	0f 82 42 f4 ff ff    	jb     d670 <dlmalloc+0x660>
    e22e:	48 89 70 18          	mov    %rsi,0x18(%rax)
    e232:	48 8b 05 17 c8 01 00 	mov    0x1c817(%rip),%rax        # 2aa50 <_gm_+0x10>
    e239:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    e23d:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    e244:	00 
    e245:	0f 11 46 10          	movups %xmm0,0x10(%rsi)
    e249:	e9 90 fa ff ff       	jmp    dcde <dlmalloc+0xcce>
    e24e:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e252:	48 8d 53 28          	lea    0x28(%rbx),%rdx
    e256:	48 85 c0             	test   %rax,%rax
    e259:	0f 84 11 03 00 00    	je     e570 <dlmalloc+0x1560>
    e25f:	90                   	nop
    e260:	48 89 d6             	mov    %rdx,%rsi
    e263:	48 89 c1             	mov    %rax,%rcx
    e266:	48 8d 50 28          	lea    0x28(%rax),%rdx
    e26a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e26e:	48 85 c0             	test   %rax,%rax
    e271:	75 ed                	jne    e260 <dlmalloc+0x1250>
    e273:	48 8b 41 20          	mov    0x20(%rcx),%rax
    e277:	48 8d 51 20          	lea    0x20(%rcx),%rdx
    e27b:	48 85 c0             	test   %rax,%rax
    e27e:	75 e0                	jne    e260 <dlmalloc+0x1250>
    e280:	4c 39 de             	cmp    %r11,%rsi
    e283:	0f 82 e7 f3 ff ff    	jb     d670 <dlmalloc+0x660>
    e289:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    e290:	4d 85 ff             	test   %r15,%r15
    e293:	0f 84 27 f3 ff ff    	je     d5c0 <dlmalloc+0x5b0>
    e299:	41 8b 46 38          	mov    0x38(%r14),%eax
    e29d:	48 8d 50 4a          	lea    0x4a(%rax),%rdx
    e2a1:	4d 3b b4 c5 58 02 00 	cmp    0x258(%r13,%rax,8),%r14
    e2a8:	00 
    e2a9:	0f 84 9e 04 00 00    	je     e74d <dlmalloc+0x173d>
    e2af:	4d 39 df             	cmp    %r11,%r15
    e2b2:	0f 82 b8 f3 ff ff    	jb     d670 <dlmalloc+0x660>
    e2b8:	49 3b 5f 20          	cmp    0x20(%r15),%rbx
    e2bc:	0f 84 cb 05 00 00    	je     e88d <dlmalloc+0x187d>
    e2c2:	49 89 4f 28          	mov    %rcx,0x28(%r15)
    e2c6:	49 89 ce             	mov    %rcx,%r14
    e2c9:	e9 b1 f2 ff ff       	jmp    d57f <dlmalloc+0x56f>
    e2ce:	49 8d 04 3c          	lea    (%r12,%rdi,1),%rax
    e2d2:	48 89 c1             	mov    %rax,%rcx
    e2d5:	48 01 d8             	add    %rbx,%rax
    e2d8:	48 83 c9 03          	or     $0x3,%rcx
    e2dc:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e2e0:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    e2e5:	48 89 10             	mov    %rdx,(%rax)
    e2e8:	e9 4f f3 ff ff       	jmp    d63c <dlmalloc+0x62c>
    e2ed:	48 89 fa             	mov    %rdi,%rdx
    e2f0:	48 c1 ea 08          	shr    $0x8,%rdx
    e2f4:	89 d0                	mov    %edx,%eax
    e2f6:	85 d2                	test   %edx,%edx
    e2f8:	0f 84 20 02 00 00    	je     e51e <dlmalloc+0x150e>
    e2fe:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    e304:	0f 87 be 03 00 00    	ja     e6c8 <dlmalloc+0x16b8>
    e30a:	0f bd c0             	bsr    %eax,%eax
    e30d:	b9 26 00 00 00       	mov    $0x26,%ecx
    e312:	48 89 fa             	mov    %rdi,%rdx
    e315:	83 f0 1f             	xor    $0x1f,%eax
    e318:	29 c1                	sub    %eax,%ecx
    e31a:	48 d3 ea             	shr    %cl,%rdx
    e31d:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e322:	83 e2 01             	and    $0x1,%edx
    e325:	29 c1                	sub    %eax,%ecx
    e327:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    e32a:	ba 01 00 00 00       	mov    $0x1,%edx
    e32f:	89 c1                	mov    %eax,%ecx
    e331:	8d 70 4b             	lea    0x4b(%rax),%esi
    e334:	d3 e2                	shl    %cl,%edx
    e336:	48 c1 e6 03          	shl    $0x3,%rsi
    e33a:	89 d1                	mov    %edx,%ecx
    e33c:	8b 15 02 c7 01 00    	mov    0x1c702(%rip),%edx        # 2aa44 <_gm_+0x4>
    e342:	66 49 0f 6e ca       	movq   %r10,%xmm1
    e347:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e34b:	41 89 42 38          	mov    %eax,0x38(%r10)
    e34f:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    e353:	41 0f 11 42 20       	movups %xmm0,0x20(%r10)
    e358:	85 ca                	test   %ecx,%edx
    e35a:	0f 84 db 02 00 00    	je     e63b <dlmalloc+0x162b>
    e360:	89 c2                	mov    %eax,%edx
    e362:	48 89 fe             	mov    %rdi,%rsi
    e365:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    e36c:	00 
    e36d:	83 f8 1f             	cmp    $0x1f,%eax
    e370:	74 2c                	je     e39e <dlmalloc+0x138e>
    e372:	d1 e8                	shr    %eax
    e374:	b9 39 00 00 00       	mov    $0x39,%ecx
    e379:	29 c1                	sub    %eax,%ecx
    e37b:	48 d3 e6             	shl    %cl,%rsi
    e37e:	eb 1e                	jmp    e39e <dlmalloc+0x138e>
    e380:	48 89 f0             	mov    %rsi,%rax
    e383:	48 01 f6             	add    %rsi,%rsi
    e386:	48 c1 e8 3f          	shr    $0x3f,%rax
    e38a:	48 83 c0 04          	add    $0x4,%rax
    e38e:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    e392:	48 85 c9             	test   %rcx,%rcx
    e395:	0f 84 fa 02 00 00    	je     e695 <dlmalloc+0x1685>
    e39b:	48 89 ca             	mov    %rcx,%rdx
    e39e:	48 8b 42 08          	mov    0x8(%rdx),%rax
    e3a2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    e3a6:	48 39 f8             	cmp    %rdi,%rax
    e3a9:	75 d5                	jne    e380 <dlmalloc+0x1370>
    e3ab:	48 8b 42 10          	mov    0x10(%rdx),%rax
    e3af:	66 48 0f 6e ea       	movq   %rdx,%xmm5
    e3b4:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e3b9:	66 0f 6c c5          	punpcklqdq %xmm5,%xmm0
    e3bd:	4c 39 da             	cmp    %r11,%rdx
    e3c0:	0f 82 aa f2 ff ff    	jb     d670 <dlmalloc+0x660>
    e3c6:	4c 39 d8             	cmp    %r11,%rax
    e3c9:	0f 82 a1 f2 ff ff    	jb     d670 <dlmalloc+0x660>
    e3cf:	4c 89 50 18          	mov    %r10,0x18(%rax)
    e3d3:	4c 89 52 10          	mov    %r10,0x10(%rdx)
    e3d7:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    e3de:	00 
    e3df:	41 0f 11 42 10       	movups %xmm0,0x10(%r10)
    e3e4:	e9 53 f2 ff ff       	jmp    d63c <dlmalloc+0x62c>
    e3e9:	09 fe                	or     %edi,%esi
    e3eb:	4c 89 c1             	mov    %r8,%rcx
    e3ee:	89 35 4c c6 01 00    	mov    %esi,0x1c64c(%rip)        # 2aa40 <_gm_>
    e3f4:	e9 58 ef ff ff       	jmp    d351 <dlmalloc+0x341>
    e3f9:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e3fe:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    e404:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e409:	e9 70 fa ff ff       	jmp    de7e <dlmalloc+0xe6e>
    e40e:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
    e412:	48 3b 15 3f c6 01 00 	cmp    0x1c63f(%rip),%rdx        # 2aa58 <_gm_+0x18>
    e419:	0f 82 51 f2 ff ff    	jb     d670 <dlmalloc+0x660>
    e41f:	48 89 34 c7          	mov    %rsi,(%rdi,%rax,8)
    e423:	48 8b 05 26 c6 01 00 	mov    0x1c626(%rip),%rax        # 2aa50 <_gm_+0x10>
    e42a:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    e42e:	0f 11 4e 10          	movups %xmm1,0x10(%rsi)
    e432:	e9 a7 f8 ff ff       	jmp    dcde <dlmalloc+0xcce>
    e437:	48 8b 43 28          	mov    0x28(%rbx),%rax
    e43b:	48 8d 4b 28          	lea    0x28(%rbx),%rcx
    e43f:	48 85 c0             	test   %rax,%rax
    e442:	0f 84 f8 03 00 00    	je     e840 <dlmalloc+0x1830>
    e448:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    e44f:	00 
    e450:	49 89 c9             	mov    %rcx,%r9
    e453:	49 89 c0             	mov    %rax,%r8
    e456:	48 8d 48 28          	lea    0x28(%rax),%rcx
    e45a:	48 8b 40 28          	mov    0x28(%rax),%rax
    e45e:	48 85 c0             	test   %rax,%rax
    e461:	75 ed                	jne    e450 <dlmalloc+0x1440>
    e463:	49 8b 40 20          	mov    0x20(%r8),%rax
    e467:	49 8d 48 20          	lea    0x20(%r8),%rcx
    e46b:	48 85 c0             	test   %rax,%rax
    e46e:	75 e0                	jne    e450 <dlmalloc+0x1440>
    e470:	4d 39 d9             	cmp    %r11,%r9
    e473:	0f 82 f7 f1 ff ff    	jb     d670 <dlmalloc+0x660>
    e479:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    e480:	4d 85 f6             	test   %r14,%r14
    e483:	0f 84 17 f3 ff ff    	je     d7a0 <dlmalloc+0x790>
    e489:	8b 43 38             	mov    0x38(%rbx),%eax
    e48c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    e490:	49 3b 9c c5 58 02 00 	cmp    0x258(%r13,%rax,8),%rbx
    e497:	00 
    e498:	0f 84 0e 05 00 00    	je     e9ac <dlmalloc+0x199c>
    e49e:	4d 39 de             	cmp    %r11,%r14
    e4a1:	0f 82 c9 f1 ff ff    	jb     d670 <dlmalloc+0x660>
    e4a7:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    e4ab:	0f 84 3b 05 00 00    	je     e9ec <dlmalloc+0x19dc>
    e4b1:	4d 89 46 28          	mov    %r8,0x28(%r14)
    e4b5:	e9 a5 f2 ff ff       	jmp    d75f <dlmalloc+0x74f>
    e4ba:	4c 01 f9             	add    %r15,%rcx
    e4bd:	4c 03 3d 8c c5 01 00 	add    0x1c58c(%rip),%r15        # 2aa50 <_gm_+0x10>
    e4c4:	48 89 48 08          	mov    %rcx,0x8(%rax)
    e4c8:	48 8d 46 10          	lea    0x10(%rsi),%rax
    e4cc:	40 f6 c6 0f          	test   $0xf,%sil
    e4d0:	0f 84 e7 01 00 00    	je     e6bd <dlmalloc+0x16ad>
    e4d6:	48 f7 d8             	neg    %rax
    e4d9:	83 e0 0f             	and    $0xf,%eax
    e4dc:	48 89 c2             	mov    %rax,%rdx
    e4df:	48 8d 0c 06          	lea    (%rsi,%rax,1),%rcx
    e4e3:	4c 89 f8             	mov    %r15,%rax
    e4e6:	48 29 d0             	sub    %rdx,%rax
    e4e9:	48 89 c2             	mov    %rax,%rdx
    e4ec:	48 89 0d 75 c5 01 00 	mov    %rcx,0x1c575(%rip)        # 2aa68 <_gm_+0x28>
    e4f3:	48 83 ca 01          	or     $0x1,%rdx
    e4f7:	48 89 05 52 c5 01 00 	mov    %rax,0x1c552(%rip)        # 2aa50 <_gm_+0x10>
    e4fe:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    e502:	48 8b 15 17 c9 01 00 	mov    0x1c917(%rip),%rdx        # 2ae20 <mparams+0x20>
    e509:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    e510:	00 00 
    e512:	48 89 15 57 c5 01 00 	mov    %rdx,0x1c557(%rip)        # 2aa70 <_gm_+0x30>
    e519:	e9 c0 f7 ff ff       	jmp    dcde <dlmalloc+0xcce>
    e51e:	b9 01 00 00 00       	mov    $0x1,%ecx
    e523:	be 58 02 00 00       	mov    $0x258,%esi
    e528:	e9 0f fe ff ff       	jmp    e33c <dlmalloc+0x132c>
    e52d:	4d 89 b4 d5 58 02 00 	mov    %r14,0x258(%r13,%rdx,8)
    e534:	00 
    e535:	4d 85 f6             	test   %r14,%r14
    e538:	0f 85 41 f0 ff ff    	jne    d57f <dlmalloc+0x56f>
    e53e:	41 0f b3 c1          	btr    %eax,%r9d
    e542:	44 89 0d fb c4 01 00 	mov    %r9d,0x1c4fb(%rip)        # 2aa44 <_gm_+0x4>
    e549:	e9 72 f0 ff ff       	jmp    d5c0 <dlmalloc+0x5b0>
    e54e:	48 03 05 fb c4 01 00 	add    0x1c4fb(%rip),%rax        # 2aa50 <_gm_+0x10>
    e555:	48 89 15 0c c5 01 00 	mov    %rdx,0x1c50c(%rip)        # 2aa68 <_gm_+0x28>
    e55c:	48 89 05 ed c4 01 00 	mov    %rax,0x1c4ed(%rip)        # 2aa50 <_gm_+0x10>
    e563:	48 83 c8 01          	or     $0x1,%rax
    e567:	48 89 42 08          	mov    %rax,0x8(%rdx)
    e56b:	e9 d2 ec ff ff       	jmp    d242 <dlmalloc+0x232>
    e570:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e574:	48 85 c0             	test   %rax,%rax
    e577:	0f 84 f0 03 00 00    	je     e96d <dlmalloc+0x195d>
    e57d:	48 8d 53 20          	lea    0x20(%rbx),%rdx
    e581:	e9 da fc ff ff       	jmp    e260 <dlmalloc+0x1250>
    e586:	49 8d 14 3c          	lea    (%r12,%rdi,1),%rdx
    e58a:	48 89 d1             	mov    %rdx,%rcx
    e58d:	48 01 da             	add    %rbx,%rdx
    e590:	48 83 c9 03          	or     $0x3,%rcx
    e594:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    e598:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    e59d:	48 89 02             	mov    %rax,(%rdx)
    e5a0:	e9 85 f2 ff ff       	jmp    d82a <dlmalloc+0x81a>
    e5a5:	48 89 c6             	mov    %rax,%rsi
    e5a8:	48 c1 ee 08          	shr    $0x8,%rsi
    e5ac:	89 f1                	mov    %esi,%ecx
    e5ae:	85 f6                	test   %esi,%esi
    e5b0:	0f 84 7b 02 00 00    	je     e831 <dlmalloc+0x1821>
    e5b6:	81 fe ff ff 00 00    	cmp    $0xffff,%esi
    e5bc:	0f 87 16 04 00 00    	ja     e9d8 <dlmalloc+0x19c8>
    e5c2:	0f bd c9             	bsr    %ecx,%ecx
    e5c5:	48 89 c7             	mov    %rax,%rdi
    e5c8:	89 ce                	mov    %ecx,%esi
    e5ca:	b9 26 00 00 00       	mov    $0x26,%ecx
    e5cf:	83 f6 1f             	xor    $0x1f,%esi
    e5d2:	29 f1                	sub    %esi,%ecx
    e5d4:	48 d3 ef             	shr    %cl,%rdi
    e5d7:	48 89 f9             	mov    %rdi,%rcx
    e5da:	bf 1f 00 00 00       	mov    $0x1f,%edi
    e5df:	29 f7                	sub    %esi,%edi
    e5e1:	83 e1 01             	and    $0x1,%ecx
    e5e4:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    e5e7:	bf 01 00 00 00       	mov    $0x1,%edi
    e5ec:	8d 71 4b             	lea    0x4b(%rcx),%esi
    e5ef:	d3 e7                	shl    %cl,%edi
    e5f1:	48 c1 e6 03          	shl    $0x3,%rsi
    e5f5:	44 8b 05 48 c4 01 00 	mov    0x1c448(%rip),%r8d        # 2aa44 <_gm_+0x4>
    e5fc:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    e601:	66 0f ef c9          	pxor   %xmm1,%xmm1
    e605:	89 4a 38             	mov    %ecx,0x38(%rdx)
    e608:	66 0f 6c c0          	punpcklqdq %xmm0,%xmm0
    e60c:	0f 11 4a 20          	movups %xmm1,0x20(%rdx)
    e610:	41 85 f8             	test   %edi,%r8d
    e613:	0f 85 86 01 00 00    	jne    e79f <dlmalloc+0x178f>
    e619:	41 09 f8             	or     %edi,%r8d
    e61c:	4c 01 ee             	add    %r13,%rsi
    e61f:	49 89 94 cd 58 02 00 	mov    %rdx,0x258(%r13,%rcx,8)
    e626:	00 
    e627:	44 89 05 16 c4 01 00 	mov    %r8d,0x1c416(%rip)        # 2aa44 <_gm_+0x4>
    e62e:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e632:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e636:	e9 07 ec ff ff       	jmp    d242 <dlmalloc+0x232>
    e63b:	09 ca                	or     %ecx,%edx
    e63d:	4c 01 ee             	add    %r13,%rsi
    e640:	4d 89 94 c5 58 02 00 	mov    %r10,0x258(%r13,%rax,8)
    e647:	00 
    e648:	89 15 f6 c3 01 00    	mov    %edx,0x1c3f6(%rip)        # 2aa44 <_gm_+0x4>
    e64e:	49 89 72 30          	mov    %rsi,0x30(%r10)
    e652:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e657:	e9 e0 ef ff ff       	jmp    d63c <dlmalloc+0x62c>
    e65c:	09 c6                	or     %eax,%esi
    e65e:	48 89 d0             	mov    %rdx,%rax
    e661:	89 35 d9 c3 01 00    	mov    %esi,0x1c3d9(%rip)        # 2aa40 <_gm_>
    e667:	e9 c0 ef ff ff       	jmp    d62c <dlmalloc+0x61c>
    e66c:	48 03 05 d5 c3 01 00 	add    0x1c3d5(%rip),%rax        # 2aa48 <_gm_+0x8>
    e673:	48 89 15 e6 c3 01 00 	mov    %rdx,0x1c3e6(%rip)        # 2aa60 <_gm_+0x20>
    e67a:	48 89 c1             	mov    %rax,%rcx
    e67d:	48 89 05 c4 c3 01 00 	mov    %rax,0x1c3c4(%rip)        # 2aa48 <_gm_+0x8>
    e684:	48 83 c9 01          	or     $0x1,%rcx
    e688:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    e68c:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    e690:	e9 ad eb ff ff       	jmp    d242 <dlmalloc+0x232>
    e695:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    e699:	4c 39 d9             	cmp    %r11,%rcx
    e69c:	0f 82 ce ef ff ff    	jb     d670 <dlmalloc+0x660>
    e6a2:	4c 89 14 c2          	mov    %r10,(%rdx,%rax,8)
    e6a6:	49 89 52 30          	mov    %rdx,0x30(%r10)
    e6aa:	41 0f 11 4a 10       	movups %xmm1,0x10(%r10)
    e6af:	e9 88 ef ff ff       	jmp    d63c <dlmalloc+0x62c>
    e6b4:	4d 89 77 20          	mov    %r14,0x20(%r15)
    e6b8:	e9 bd ee ff ff       	jmp    d57a <dlmalloc+0x56a>
    e6bd:	4c 89 f8             	mov    %r15,%rax
    e6c0:	48 89 f1             	mov    %rsi,%rcx
    e6c3:	e9 21 fe ff ff       	jmp    e4e9 <dlmalloc+0x14d9>
    e6c8:	b9 00 00 00 80       	mov    $0x80000000,%ecx
    e6cd:	be 50 03 00 00       	mov    $0x350,%esi
    e6d2:	b8 1f 00 00 00       	mov    $0x1f,%eax
    e6d7:	e9 60 fc ff ff       	jmp    e33c <dlmalloc+0x132c>
    e6dc:	49 89 f0             	mov    %rsi,%r8
    e6df:	48 89 f1             	mov    %rsi,%rcx
    e6e2:	49 83 e0 f8          	and    $0xfffffffffffffff8,%r8
    e6e6:	48 c1 e9 03          	shr    $0x3,%rcx
    e6ea:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    e6f1:	0f 87 9f 01 00 00    	ja     e896 <dlmalloc+0x1886>
    e6f7:	44 8d 5c 09 09       	lea    0x9(%rcx,%rcx,1),%r11d
    e6fc:	49 8b 7a 10          	mov    0x10(%r10),%rdi
    e700:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e704:	4f 8d 5c dd 00       	lea    0x0(%r13,%r11,8),%r11
    e709:	4c 39 df             	cmp    %r11,%rdi
    e70c:	0f 85 84 03 00 00    	jne    ea96 <dlmalloc+0x1a86>
    e712:	48 39 fe             	cmp    %rdi,%rsi
    e715:	0f 84 69 03 00 00    	je     ea84 <dlmalloc+0x1a74>
    e71b:	48 3b 35 36 c3 01 00 	cmp    0x1c336(%rip),%rsi        # 2aa58 <_gm_+0x18>
    e722:	0f 82 48 ef ff ff    	jb     d670 <dlmalloc+0x660>
    e728:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e72c:	0f 85 3e ef ff ff    	jne    d670 <dlmalloc+0x660>
    e732:	48 89 77 18          	mov    %rsi,0x18(%rdi)
    e736:	48 89 7e 10          	mov    %rdi,0x10(%rsi)
    e73a:	4d 01 c2             	add    %r8,%r10
    e73d:	4c 01 c0             	add    %r8,%rax
    e740:	49 8b 72 08          	mov    0x8(%r10),%rsi
    e744:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    e748:	e9 ed f9 ff ff       	jmp    e13a <dlmalloc+0x112a>
    e74d:	49 89 4c d5 08       	mov    %rcx,0x8(%r13,%rdx,8)
    e752:	e9 6f fb ff ff       	jmp    e2c6 <dlmalloc+0x12b6>
    e757:	4d 89 84 cd 58 02 00 	mov    %r8,0x258(%r13,%rcx,8)
    e75e:	00 
    e75f:	4d 85 c0             	test   %r8,%r8
    e762:	0f 85 f7 ef ff ff    	jne    d75f <dlmalloc+0x74f>
    e768:	41 0f b3 c1          	btr    %eax,%r9d
    e76c:	44 89 0d d1 c2 01 00 	mov    %r9d,0x1c2d1(%rip)        # 2aa44 <_gm_+0x4>
    e773:	e9 28 f0 ff ff       	jmp    d7a0 <dlmalloc+0x790>
    e778:	44 09 c2             	or     %r8d,%edx
    e77b:	89 15 bf c2 01 00    	mov    %edx,0x1c2bf(%rip)        # 2aa40 <_gm_>
    e781:	4c 89 ca             	mov    %r9,%rdx
    e784:	e9 83 f0 ff ff       	jmp    d80c <dlmalloc+0x7fc>
    e789:	48 8b 48 10          	mov    0x10(%rax),%rcx
    e78d:	48 3b 0d c4 c2 01 00 	cmp    0x1c2c4(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e794:	0f 83 f2 f9 ff ff    	jae    e18c <dlmalloc+0x117c>
    e79a:	e9 d1 ee ff ff       	jmp    d670 <dlmalloc+0x660>
    e79f:	89 ce                	mov    %ecx,%esi
    e7a1:	49 8b b4 f5 58 02 00 	mov    0x258(%r13,%rsi,8),%rsi
    e7a8:	00 
    e7a9:	83 f9 1f             	cmp    $0x1f,%ecx
    e7ac:	74 0b                	je     e7b9 <dlmalloc+0x17a9>
    e7ae:	d1 e9                	shr    %ecx
    e7b0:	41 b9 39 00 00 00    	mov    $0x39,%r9d
    e7b6:	41 29 c9             	sub    %ecx,%r9d
    e7b9:	48 89 c7             	mov    %rax,%rdi
    e7bc:	44 89 c9             	mov    %r9d,%ecx
    e7bf:	48 d3 e7             	shl    %cl,%rdi
    e7c2:	eb 1e                	jmp    e7e2 <dlmalloc+0x17d2>
    e7c4:	48 89 f9             	mov    %rdi,%rcx
    e7c7:	48 01 ff             	add    %rdi,%rdi
    e7ca:	48 c1 e9 3f          	shr    $0x3f,%rcx
    e7ce:	48 83 c1 04          	add    $0x4,%rcx
    e7d2:	4c 8b 04 ce          	mov    (%rsi,%rcx,8),%r8
    e7d6:	4d 85 c0             	test   %r8,%r8
    e7d9:	0f 84 d7 01 00 00    	je     e9b6 <dlmalloc+0x19a6>
    e7df:	4c 89 c6             	mov    %r8,%rsi
    e7e2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    e7e6:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    e7ea:	48 39 c8             	cmp    %rcx,%rax
    e7ed:	75 d5                	jne    e7c4 <dlmalloc+0x17b4>
    e7ef:	48 8b 46 10          	mov    0x10(%rsi),%rax
    e7f3:	48 8b 0d 5e c2 01 00 	mov    0x1c25e(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e7fa:	66 48 0f 6e f6       	movq   %rsi,%xmm6
    e7ff:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e804:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    e808:	48 39 c8             	cmp    %rcx,%rax
    e80b:	0f 82 5f ee ff ff    	jb     d670 <dlmalloc+0x660>
    e811:	48 39 ce             	cmp    %rcx,%rsi
    e814:	0f 82 56 ee ff ff    	jb     d670 <dlmalloc+0x660>
    e81a:	48 89 50 18          	mov    %rdx,0x18(%rax)
    e81e:	31 c0                	xor    %eax,%eax
    e820:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    e824:	48 89 42 30          	mov    %rax,0x30(%rdx)
    e828:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e82c:	e9 11 ea ff ff       	jmp    d242 <dlmalloc+0x232>
    e831:	bf 01 00 00 00       	mov    $0x1,%edi
    e836:	be 58 02 00 00       	mov    $0x258,%esi
    e83b:	e9 b5 fd ff ff       	jmp    e5f5 <dlmalloc+0x15e5>
    e840:	48 8b 43 20          	mov    0x20(%rbx),%rax
    e844:	48 85 c0             	test   %rax,%rax
    e847:	0f 84 b0 01 00 00    	je     e9fd <dlmalloc+0x19ed>
    e84d:	48 8d 4b 20          	lea    0x20(%rbx),%rcx
    e851:	e9 fa fb ff ff       	jmp    e450 <dlmalloc+0x1440>
    e856:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e85a:	e9 fb ee ff ff       	jmp    d75a <dlmalloc+0x74a>
    e85f:	4c 89 f7             	mov    %r14,%rdi
    e862:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    e867:	e8 c4 dc ff ff       	call   c530 <sbrk>
    e86c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    e871:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    e875:	0f 84 5b 02 00 00    	je     ead6 <dlmalloc+0x1ac6>
    e87b:	4d 01 f7             	add    %r14,%r15
    e87e:	c7 05 a8 c5 01 00 00 	movl   $0x0,0x1c5a8(%rip)        # 2ae30 <malloc_global_mutex>
    e885:	00 00 00 
    e888:	e9 d3 f1 ff ff       	jmp    da60 <dlmalloc+0xa50>
    e88d:	49 89 4f 20          	mov    %rcx,0x20(%r15)
    e891:	e9 30 fa ff ff       	jmp    e2c6 <dlmalloc+0x12b6>
    e896:	49 8b 72 18          	mov    0x18(%r10),%rsi
    e89a:	4d 8b 62 30          	mov    0x30(%r10),%r12
    e89e:	4c 39 d6             	cmp    %r10,%rsi
    e8a1:	0f 84 96 01 00 00    	je     ea3d <dlmalloc+0x1a2d>
    e8a7:	49 8b 4a 10          	mov    0x10(%r10),%rcx
    e8ab:	48 3b 0d a6 c1 01 00 	cmp    0x1c1a6(%rip),%rcx        # 2aa58 <_gm_+0x18>
    e8b2:	0f 82 b8 ed ff ff    	jb     d670 <dlmalloc+0x660>
    e8b8:	4c 39 51 18          	cmp    %r10,0x18(%rcx)
    e8bc:	0f 85 ae ed ff ff    	jne    d670 <dlmalloc+0x660>
    e8c2:	4c 39 56 10          	cmp    %r10,0x10(%rsi)
    e8c6:	0f 85 a4 ed ff ff    	jne    d670 <dlmalloc+0x660>
    e8cc:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    e8d0:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    e8d4:	4d 85 e4             	test   %r12,%r12
    e8d7:	0f 84 5d fe ff ff    	je     e73a <dlmalloc+0x172a>
    e8dd:	41 8b 7a 38          	mov    0x38(%r10),%edi
    e8e1:	48 89 f9             	mov    %rdi,%rcx
    e8e4:	4c 8d 5f 4a          	lea    0x4a(%rdi),%r11
    e8e8:	4d 39 94 fd 58 02 00 	cmp    %r10,0x258(%r13,%rdi,8)
    e8ef:	00 
    e8f0:	0f 84 0e 02 00 00    	je     eb04 <dlmalloc+0x1af4>
    e8f6:	4c 3b 25 5b c1 01 00 	cmp    0x1c15b(%rip),%r12        # 2aa58 <_gm_+0x18>
    e8fd:	0f 82 6d ed ff ff    	jb     d670 <dlmalloc+0x660>
    e903:	4d 39 54 24 20       	cmp    %r10,0x20(%r12)
    e908:	0f 84 ec 01 00 00    	je     eafa <dlmalloc+0x1aea>
    e90e:	49 89 74 24 28       	mov    %rsi,0x28(%r12)
    e913:	48 85 f6             	test   %rsi,%rsi
    e916:	0f 84 1e fe ff ff    	je     e73a <dlmalloc+0x172a>
    e91c:	48 8b 3d 35 c1 01 00 	mov    0x1c135(%rip),%rdi        # 2aa58 <_gm_+0x18>
    e923:	48 39 fe             	cmp    %rdi,%rsi
    e926:	0f 82 44 ed ff ff    	jb     d670 <dlmalloc+0x660>
    e92c:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    e930:	4c 89 66 30          	mov    %r12,0x30(%rsi)
    e934:	48 85 c9             	test   %rcx,%rcx
    e937:	74 11                	je     e94a <dlmalloc+0x193a>
    e939:	48 39 f9             	cmp    %rdi,%rcx
    e93c:	0f 82 2e ed ff ff    	jb     d670 <dlmalloc+0x660>
    e942:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    e946:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    e94a:	49 8b 4a 28          	mov    0x28(%r10),%rcx
    e94e:	48 85 c9             	test   %rcx,%rcx
    e951:	0f 84 e3 fd ff ff    	je     e73a <dlmalloc+0x172a>
    e957:	48 39 f9             	cmp    %rdi,%rcx
    e95a:	0f 82 10 ed ff ff    	jb     d670 <dlmalloc+0x660>
    e960:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    e964:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    e968:	e9 cd fd ff ff       	jmp    e73a <dlmalloc+0x172a>
    e96d:	4d 85 ff             	test   %r15,%r15
    e970:	0f 84 4a ec ff ff    	je     d5c0 <dlmalloc+0x5b0>
    e976:	8b 53 38             	mov    0x38(%rbx),%edx
    e979:	48 89 d0             	mov    %rdx,%rax
    e97c:	48 8d 4a 4a          	lea    0x4a(%rdx),%rcx
    e980:	49 3b 9c d5 58 02 00 	cmp    0x258(%r13,%rdx,8),%rbx
    e987:	00 
    e988:	0f 84 a2 01 00 00    	je     eb30 <dlmalloc+0x1b20>
    e98e:	4d 39 df             	cmp    %r11,%r15
    e991:	0f 82 d9 ec ff ff    	jb     d670 <dlmalloc+0x660>
    e997:	4d 39 77 20          	cmp    %r14,0x20(%r15)
    e99b:	0f 84 83 01 00 00    	je     eb24 <dlmalloc+0x1b14>
    e9a1:	31 f6                	xor    %esi,%esi
    e9a3:	49 89 77 28          	mov    %rsi,0x28(%r15)
    e9a7:	e9 14 ec ff ff       	jmp    d5c0 <dlmalloc+0x5b0>
    e9ac:	4d 89 44 cd 08       	mov    %r8,0x8(%r13,%rcx,8)
    e9b1:	e9 a9 ed ff ff       	jmp    d75f <dlmalloc+0x74f>
    e9b6:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    e9ba:	48 3b 05 97 c0 01 00 	cmp    0x1c097(%rip),%rax        # 2aa58 <_gm_+0x18>
    e9c1:	0f 82 a9 ec ff ff    	jb     d670 <dlmalloc+0x660>
    e9c7:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    e9cb:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    e9cf:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    e9d3:	e9 6a e8 ff ff       	jmp    d242 <dlmalloc+0x232>
    e9d8:	bf 00 00 00 80       	mov    $0x80000000,%edi
    e9dd:	be 50 03 00 00       	mov    $0x350,%esi
    e9e2:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    e9e7:	e9 09 fc ff ff       	jmp    e5f5 <dlmalloc+0x15e5>
    e9ec:	4d 89 46 20          	mov    %r8,0x20(%r14)
    e9f0:	e9 6a ed ff ff       	jmp    d75f <dlmalloc+0x74f>
    e9f5:	4d 89 e3             	mov    %r12,%r11
    e9f8:	e9 4b ea ff ff       	jmp    d448 <dlmalloc+0x438>
    e9fd:	4d 85 f6             	test   %r14,%r14
    ea00:	0f 84 9a ed ff ff    	je     d7a0 <dlmalloc+0x790>
    ea06:	8b 4b 38             	mov    0x38(%rbx),%ecx
    ea09:	48 89 c8             	mov    %rcx,%rax
    ea0c:	4c 8d 41 4a          	lea    0x4a(%rcx),%r8
    ea10:	49 3b 9c cd 58 02 00 	cmp    0x258(%r13,%rcx,8),%rbx
    ea17:	00 
    ea18:	0f 84 34 01 00 00    	je     eb52 <dlmalloc+0x1b42>
    ea1e:	4d 39 de             	cmp    %r11,%r14
    ea21:	0f 82 49 ec ff ff    	jb     d670 <dlmalloc+0x660>
    ea27:	49 3b 5e 20          	cmp    0x20(%r14),%rbx
    ea2b:	0f 84 16 01 00 00    	je     eb47 <dlmalloc+0x1b37>
    ea31:	45 31 ff             	xor    %r15d,%r15d
    ea34:	4d 89 7e 28          	mov    %r15,0x28(%r14)
    ea38:	e9 63 ed ff ff       	jmp    d7a0 <dlmalloc+0x790>
    ea3d:	49 8b 72 28          	mov    0x28(%r10),%rsi
    ea41:	48 85 f6             	test   %rsi,%rsi
    ea44:	74 7a                	je     eac0 <dlmalloc+0x1ab0>
    ea46:	49 8d 7a 28          	lea    0x28(%r10),%rdi
    ea4a:	48 89 f1             	mov    %rsi,%rcx
    ea4d:	49 89 fb             	mov    %rdi,%r11
    ea50:	48 89 ce             	mov    %rcx,%rsi
    ea53:	48 8d 79 28          	lea    0x28(%rcx),%rdi
    ea57:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ea5b:	48 85 c9             	test   %rcx,%rcx
    ea5e:	75 ed                	jne    ea4d <dlmalloc+0x1a3d>
    ea60:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    ea64:	48 8d 7e 20          	lea    0x20(%rsi),%rdi
    ea68:	48 85 c9             	test   %rcx,%rcx
    ea6b:	75 e0                	jne    ea4d <dlmalloc+0x1a3d>
    ea6d:	4c 3b 1d e4 bf 01 00 	cmp    0x1bfe4(%rip),%r11        # 2aa58 <_gm_+0x18>
    ea74:	0f 82 f6 eb ff ff    	jb     d670 <dlmalloc+0x660>
    ea7a:	31 c9                	xor    %ecx,%ecx
    ea7c:	49 89 0b             	mov    %rcx,(%r11)
    ea7f:	e9 50 fe ff ff       	jmp    e8d4 <dlmalloc+0x18c4>
    ea84:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    ea89:	d3 c6                	rol    %cl,%esi
    ea8b:	21 35 af bf 01 00    	and    %esi,0x1bfaf(%rip)        # 2aa40 <_gm_>
    ea91:	e9 a4 fc ff ff       	jmp    e73a <dlmalloc+0x172a>
    ea96:	48 3b 3d bb bf 01 00 	cmp    0x1bfbb(%rip),%rdi        # 2aa58 <_gm_+0x18>
    ea9d:	0f 82 cd eb ff ff    	jb     d670 <dlmalloc+0x660>
    eaa3:	4c 39 57 18          	cmp    %r10,0x18(%rdi)
    eaa7:	0f 85 c3 eb ff ff    	jne    d670 <dlmalloc+0x660>
    eaad:	48 39 f7             	cmp    %rsi,%rdi
    eab0:	74 d2                	je     ea84 <dlmalloc+0x1a74>
    eab2:	4c 39 de             	cmp    %r11,%rsi
    eab5:	0f 84 77 fc ff ff    	je     e732 <dlmalloc+0x1722>
    eabb:	e9 5b fc ff ff       	jmp    e71b <dlmalloc+0x170b>
    eac0:	49 8b 72 20          	mov    0x20(%r10),%rsi
    eac4:	48 85 f6             	test   %rsi,%rsi
    eac7:	0f 84 07 fe ff ff    	je     e8d4 <dlmalloc+0x18c4>
    eacd:	49 8d 7a 20          	lea    0x20(%r10),%rdi
    ead1:	e9 74 ff ff ff       	jmp    ea4a <dlmalloc+0x1a3a>
    ead6:	4c 89 ff             	mov    %r15,%rdi
    ead9:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    eade:	48 f7 df             	neg    %rdi
    eae1:	e8 4a da ff ff       	call   c530 <sbrk>
    eae6:	c7 05 40 c3 01 00 00 	movl   $0x0,0x1c340(%rip)        # 2ae30 <malloc_global_mutex>
    eaed:	00 00 00 
    eaf0:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    eaf5:	e9 d9 ee ff ff       	jmp    d9d3 <dlmalloc+0x9c3>
    eafa:	49 89 74 24 20       	mov    %rsi,0x20(%r12)
    eaff:	e9 0f fe ff ff       	jmp    e913 <dlmalloc+0x1903>
    eb04:	4b 89 74 dd 08       	mov    %rsi,0x8(%r13,%r11,8)
    eb09:	48 85 f6             	test   %rsi,%rsi
    eb0c:	0f 85 0a fe ff ff    	jne    e91c <dlmalloc+0x190c>
    eb12:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    eb17:	d3 c6                	rol    %cl,%esi
    eb19:	21 35 25 bf 01 00    	and    %esi,0x1bf25(%rip)        # 2aa44 <_gm_+0x4>
    eb1f:	e9 16 fc ff ff       	jmp    e73a <dlmalloc+0x172a>
    eb24:	45 31 c9             	xor    %r9d,%r9d
    eb27:	4d 89 4f 20          	mov    %r9,0x20(%r15)
    eb2b:	e9 90 ea ff ff       	jmp    d5c0 <dlmalloc+0x5b0>
    eb30:	45 31 f6             	xor    %r14d,%r14d
    eb33:	4d 89 74 cd 08       	mov    %r14,0x8(%r13,%rcx,8)
    eb38:	e9 01 fa ff ff       	jmp    e53e <dlmalloc+0x152e>
    eb3d:	e8 de e3 ff ff       	call   cf20 <init_mparams.isra.0>
    eb42:	e9 82 ed ff ff       	jmp    d8c9 <dlmalloc+0x8b9>
    eb47:	31 c0                	xor    %eax,%eax
    eb49:	49 89 46 20          	mov    %rax,0x20(%r14)
    eb4d:	e9 4e ec ff ff       	jmp    d7a0 <dlmalloc+0x790>
    eb52:	31 c9                	xor    %ecx,%ecx
    eb54:	4b 89 4c c5 08       	mov    %rcx,0x8(%r13,%r8,8)
    eb59:	e9 0a fc ff ff       	jmp    e768 <dlmalloc+0x1758>
    eb5e:	66 90                	xchg   %ax,%ax

000000000000eb60 <internal_memalign.constprop.0>:
    eb60:	41 55                	push   %r13
    eb62:	41 54                	push   %r12
    eb64:	55                   	push   %rbp
    eb65:	53                   	push   %rbx
    eb66:	bb 20 00 00 00       	mov    $0x20,%ebx
    eb6b:	48 83 ec 18          	sub    $0x18,%rsp
    eb6f:	48 39 df             	cmp    %rbx,%rdi
    eb72:	48 0f 43 df          	cmovae %rdi,%rbx
    eb76:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    eb7a:	48 85 d8             	test   %rbx,%rax
    eb7d:	74 49                	je     ebc8 <internal_memalign.constprop.0+0x68>
    eb7f:	48 83 ff 20          	cmp    $0x20,%rdi
    eb83:	0f 86 17 02 00 00    	jbe    eda0 <internal_memalign.constprop.0+0x240>
    eb89:	b8 20 00 00 00       	mov    $0x20,%eax
    eb8e:	66 90                	xchg   %ax,%ax
    eb90:	48 01 c0             	add    %rax,%rax
    eb93:	48 39 d8             	cmp    %rbx,%rax
    eb96:	72 f8                	jb     eb90 <internal_memalign.constprop.0+0x30>
    eb98:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    eb9f:	48 89 c3             	mov    %rax,%rbx
    eba2:	48 29 c2             	sub    %rax,%rdx
    eba5:	48 39 d6             	cmp    %rdx,%rsi
    eba8:	72 2d                	jb     ebd7 <internal_memalign.constprop.0+0x77>
    ebaa:	e8 e1 21 00 00       	call   10d90 <__errno_location>
    ebaf:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    ebb5:	48 83 c4 18          	add    $0x18,%rsp
    ebb9:	31 c0                	xor    %eax,%eax
    ebbb:	5b                   	pop    %rbx
    ebbc:	5d                   	pop    %rbp
    ebbd:	41 5c                	pop    %r12
    ebbf:	41 5d                	pop    %r13
    ebc1:	c3                   	ret    
    ebc2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    ebc8:	48 c7 c2 80 ff ff ff 	mov    $0xffffffffffffff80,%rdx
    ebcf:	48 29 da             	sub    %rbx,%rdx
    ebd2:	48 39 d6             	cmp    %rdx,%rsi
    ebd5:	73 d3                	jae    ebaa <internal_memalign.constprop.0+0x4a>
    ebd7:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    ebdb:	ba 20 00 00 00       	mov    $0x20,%edx
    ebe0:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    ebe4:	48 83 fe 0e          	cmp    $0xe,%rsi
    ebe8:	48 0f 47 d0          	cmova  %rax,%rdx
    ebec:	48 8d 7c 13 10       	lea    0x10(%rbx,%rdx,1),%rdi
    ebf1:	49 89 d4             	mov    %rdx,%r12
    ebf4:	e8 17 e4 ff ff       	call   d010 <dlmalloc>
    ebf9:	48 85 c0             	test   %rax,%rax
    ebfc:	74 b7                	je     ebb5 <internal_memalign.constprop.0+0x55>
    ebfe:	44 8b 2d ab c1 01 00 	mov    0x1c1ab(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ec05:	48 8d 70 f0          	lea    -0x10(%rax),%rsi
    ec09:	41 83 e5 02          	and    $0x2,%r13d
    ec0d:	0f 85 9d 00 00 00    	jne    ecb0 <internal_memalign.constprop.0+0x150>
    ec13:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ec17:	48 85 e8             	test   %rbp,%rax
    ec1a:	75 3c                	jne    ec58 <internal_memalign.constprop.0+0xf8>
    ec1c:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ec20:	48 89 f5             	mov    %rsi,%rbp
    ec23:	f6 c2 03             	test   $0x3,%dl
    ec26:	74 15                	je     ec3d <internal_memalign.constprop.0+0xdd>
    ec28:	48 89 d1             	mov    %rdx,%rcx
    ec2b:	49 8d 74 24 20       	lea    0x20(%r12),%rsi
    ec30:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ec34:	48 39 ce             	cmp    %rcx,%rsi
    ec37:	0f 82 a3 00 00 00    	jb     ece0 <internal_memalign.constprop.0+0x180>
    ec3d:	45 85 ed             	test   %r13d,%r13d
    ec40:	0f 85 72 01 00 00    	jne    edb8 <internal_memalign.constprop.0+0x258>
    ec46:	48 83 c4 18          	add    $0x18,%rsp
    ec4a:	5b                   	pop    %rbx
    ec4b:	5d                   	pop    %rbp
    ec4c:	41 5c                	pop    %r12
    ec4e:	41 5d                	pop    %r13
    ec50:	c3                   	ret    
    ec51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    ec58:	48 89 da             	mov    %rbx,%rdx
    ec5b:	48 01 c5             	add    %rax,%rbp
    ec5e:	48 f7 da             	neg    %rdx
    ec61:	48 21 d5             	and    %rdx,%rbp
    ec64:	48 83 ed 10          	sub    $0x10,%rbp
    ec68:	48 89 e9             	mov    %rbp,%rcx
    ec6b:	48 29 f1             	sub    %rsi,%rcx
    ec6e:	48 83 f9 1f          	cmp    $0x1f,%rcx
    ec72:	77 09                	ja     ec7d <internal_memalign.constprop.0+0x11d>
    ec74:	48 01 dd             	add    %rbx,%rbp
    ec77:	48 89 e9             	mov    %rbp,%rcx
    ec7a:	48 29 f1             	sub    %rsi,%rcx
    ec7d:	48 8b 78 f8          	mov    -0x8(%rax),%rdi
    ec81:	48 8d 5d 10          	lea    0x10(%rbp),%rbx
    ec85:	48 89 fa             	mov    %rdi,%rdx
    ec88:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    ec8c:	48 29 ca             	sub    %rcx,%rdx
    ec8f:	83 e7 03             	and    $0x3,%edi
    ec92:	0f 85 a8 00 00 00    	jne    ed40 <internal_memalign.constprop.0+0x1e0>
    ec98:	48 03 48 f0          	add    -0x10(%rax),%rcx
    ec9c:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    eca0:	48 89 d8             	mov    %rbx,%rax
    eca3:	48 89 4d 00          	mov    %rcx,0x0(%rbp)
    eca7:	e9 77 ff ff ff       	jmp    ec23 <internal_memalign.constprop.0+0xc3>
    ecac:	0f 1f 40 00          	nopl   0x0(%rax)
    ecb0:	ba 01 00 00 00       	mov    $0x1,%edx
    ecb5:	87 15 f9 c0 01 00    	xchg   %edx,0x1c0f9(%rip)        # 2adb4 <_gm_+0x374>
    ecbb:	85 d2                	test   %edx,%edx
    ecbd:	0f 85 0d 01 00 00    	jne    edd0 <internal_memalign.constprop.0+0x270>
    ecc3:	44 8b 2d e6 c0 01 00 	mov    0x1c0e6(%rip),%r13d        # 2adb0 <_gm_+0x370>
    ecca:	48 8d 6b ff          	lea    -0x1(%rbx),%rbp
    ecce:	41 83 e5 02          	and    $0x2,%r13d
    ecd2:	48 85 e8             	test   %rbp,%rax
    ecd5:	75 81                	jne    ec58 <internal_memalign.constprop.0+0xf8>
    ecd7:	e9 40 ff ff ff       	jmp    ec1c <internal_memalign.constprop.0+0xbc>
    ecdc:	0f 1f 40 00          	nopl   0x0(%rax)
    ece0:	83 e2 01             	and    $0x1,%edx
    ece3:	49 89 c8             	mov    %rcx,%r8
    ece6:	4a 8d 74 25 00       	lea    0x0(%rbp,%r12,1),%rsi
    eceb:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    ecf0:	4c 09 e2             	or     %r12,%rdx
    ecf3:	4d 29 e0             	sub    %r12,%r8
    ecf6:	48 8d 3d 43 bd 01 00 	lea    0x1bd43(%rip),%rdi        # 2aa40 <_gm_>
    ecfd:	48 83 ca 02          	or     $0x2,%rdx
    ed01:	4d 89 c1             	mov    %r8,%r9
    ed04:	48 89 55 08          	mov    %rdx,0x8(%rbp)
    ed08:	48 8b 15 f1 c0 01 00 	mov    0x1c0f1(%rip),%rdx        # 2ae00 <mparams>
    ed0f:	48 01 cd             	add    %rcx,%rbp
    ed12:	49 83 c9 03          	or     $0x3,%r9
    ed16:	4c 89 4e 08          	mov    %r9,0x8(%rsi)
    ed1a:	48 31 fa             	xor    %rdi,%rdx
    ed1d:	48 89 16             	mov    %rdx,(%rsi)
    ed20:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ed25:	48 89 55 00          	mov    %rdx,0x0(%rbp)
    ed29:	4c 89 c2             	mov    %r8,%rdx
    ed2c:	e8 bf d9 ff ff       	call   c6f0 <dispose_chunk>
    ed31:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    ed36:	e9 02 ff ff ff       	jmp    ec3d <internal_memalign.constprop.0+0xdd>
    ed3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    ed40:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    ed44:	4c 8b 05 b5 c0 01 00 	mov    0x1c0b5(%rip),%r8        # 2ae00 <mparams>
    ed4b:	83 e7 01             	and    $0x1,%edi
    ed4e:	48 09 d7             	or     %rdx,%rdi
    ed51:	48 01 ea             	add    %rbp,%rdx
    ed54:	48 83 cf 02          	or     $0x2,%rdi
    ed58:	48 89 7d 08          	mov    %rdi,0x8(%rbp)
    ed5c:	48 8d 3d dd bc 01 00 	lea    0x1bcdd(%rip),%rdi        # 2aa40 <_gm_>
    ed63:	49 31 f8             	xor    %rdi,%r8
    ed66:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    ed6b:	4c 89 02             	mov    %r8,(%rdx)
    ed6e:	48 8b 50 f8          	mov    -0x8(%rax),%rdx
    ed72:	83 e2 01             	and    $0x1,%edx
    ed75:	48 09 ca             	or     %rcx,%rdx
    ed78:	48 83 ca 02          	or     $0x2,%rdx
    ed7c:	48 89 50 f8          	mov    %rdx,-0x8(%rax)
    ed80:	48 89 ca             	mov    %rcx,%rdx
    ed83:	48 83 4d 08 01       	orq    $0x1,0x8(%rbp)
    ed88:	4c 89 45 00          	mov    %r8,0x0(%rbp)
    ed8c:	e8 5f d9 ff ff       	call   c6f0 <dispose_chunk>
    ed91:	48 8b 55 08          	mov    0x8(%rbp),%rdx
    ed95:	48 89 d8             	mov    %rbx,%rax
    ed98:	e9 86 fe ff ff       	jmp    ec23 <internal_memalign.constprop.0+0xc3>
    ed9d:	0f 1f 00             	nopl   (%rax)
    eda0:	48 c7 c2 60 ff ff ff 	mov    $0xffffffffffffff60,%rdx
    eda7:	bb 20 00 00 00       	mov    $0x20,%ebx
    edac:	e9 21 fe ff ff       	jmp    ebd2 <internal_memalign.constprop.0+0x72>
    edb1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    edb8:	c7 05 f2 bf 01 00 00 	movl   $0x0,0x1bff2(%rip)        # 2adb4 <_gm_+0x374>
    edbf:	00 00 00 
    edc2:	48 83 c4 18          	add    $0x18,%rsp
    edc6:	5b                   	pop    %rbx
    edc7:	5d                   	pop    %rbp
    edc8:	41 5c                	pop    %r12
    edca:	41 5d                	pop    %r13
    edcc:	c3                   	ret    
    edcd:	0f 1f 00             	nopl   (%rax)
    edd0:	b9 01 00 00 00       	mov    $0x1,%ecx
    edd5:	0f 1f 00             	nopl   (%rax)
    edd8:	8b 15 d6 bf 01 00    	mov    0x1bfd6(%rip),%edx        # 2adb4 <_gm_+0x374>
    edde:	85 d2                	test   %edx,%edx
    ede0:	75 f6                	jne    edd8 <internal_memalign.constprop.0+0x278>
    ede2:	89 ca                	mov    %ecx,%edx
    ede4:	87 15 ca bf 01 00    	xchg   %edx,0x1bfca(%rip)        # 2adb4 <_gm_+0x374>
    edea:	85 d2                	test   %edx,%edx
    edec:	75 ea                	jne    edd8 <internal_memalign.constprop.0+0x278>
    edee:	e9 d0 fe ff ff       	jmp    ecc3 <internal_memalign.constprop.0+0x163>
    edf3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    edfa:	00 00 00 
    edfd:	0f 1f 00             	nopl   (%rax)

000000000000ee00 <dlfree>:
    ee00:	f3 0f 1e fa          	endbr64 
    ee04:	48 85 ff             	test   %rdi,%rdi
    ee07:	0f 84 db 01 00 00    	je     efe8 <dlfree+0x1e8>
    ee0d:	41 55                	push   %r13
    ee0f:	48 89 f8             	mov    %rdi,%rax
    ee12:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    ee16:	41 54                	push   %r12
    ee18:	55                   	push   %rbp
    ee19:	53                   	push   %rbx
    ee1a:	48 83 ec 08          	sub    $0x8,%rsp
    ee1e:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    ee22:	48 8b 35 d7 bf 01 00 	mov    0x1bfd7(%rip),%rsi        # 2ae00 <mparams>
    ee29:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    ee2d:	48 8b 5c 0f f0       	mov    -0x10(%rdi,%rcx,1),%rbx
    ee32:	48 31 f3             	xor    %rsi,%rbx
    ee35:	48 3b 73 40          	cmp    0x40(%rbx),%rsi
    ee39:	0f 85 89 02 00 00    	jne    f0c8 <dlfree+0x2c8>
    ee3f:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    ee46:	0f 85 54 01 00 00    	jne    efa0 <dlfree+0x1a0>
    ee4c:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    ee50:	4c 39 ca             	cmp    %r9,%rdx
    ee53:	0f 82 87 01 00 00    	jb     efe0 <dlfree+0x1e0>
    ee59:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    ee5d:	49 89 c8             	mov    %rcx,%r8
    ee60:	41 83 e0 03          	and    $0x3,%r8d
    ee64:	49 83 f8 01          	cmp    $0x1,%r8
    ee68:	0f 84 72 01 00 00    	je     efe0 <dlfree+0x1e0>
    ee6e:	48 89 ce             	mov    %rcx,%rsi
    ee71:	48 83 e6 f8          	and    $0xfffffffffffffff8,%rsi
    ee75:	83 e1 01             	and    $0x1,%ecx
    ee78:	48 8d 3c 32          	lea    (%rdx,%rsi,1),%rdi
    ee7c:	0f 84 9e 00 00 00    	je     ef20 <dlfree+0x120>
    ee82:	48 39 fa             	cmp    %rdi,%rdx
    ee85:	0f 83 55 01 00 00    	jae    efe0 <dlfree+0x1e0>
    ee8b:	48 8b 47 08          	mov    0x8(%rdi),%rax
    ee8f:	a8 01                	test   $0x1,%al
    ee91:	0f 84 49 01 00 00    	je     efe0 <dlfree+0x1e0>
    ee97:	a8 02                	test   $0x2,%al
    ee99:	0f 84 51 01 00 00    	je     eff0 <dlfree+0x1f0>
    ee9f:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    eea3:	48 89 47 08          	mov    %rax,0x8(%rdi)
    eea7:	48 89 f0             	mov    %rsi,%rax
    eeaa:	48 83 c8 01          	or     $0x1,%rax
    eeae:	48 89 42 08          	mov    %rax,0x8(%rdx)
    eeb2:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    eeb6:	48 89 f1             	mov    %rsi,%rcx
    eeb9:	48 c1 e9 03          	shr    $0x3,%rcx
    eebd:	48 81 fe ff 00 00 00 	cmp    $0xff,%rsi
    eec4:	0f 87 ce 01 00 00    	ja     f098 <dlfree+0x298>
    eeca:	8d 44 09 09          	lea    0x9(%rcx,%rcx,1),%eax
    eece:	8b 3b                	mov    (%rbx),%edi
    eed0:	48 8d 34 c3          	lea    (%rbx,%rax,8),%rsi
    eed4:	b8 01 00 00 00       	mov    $0x1,%eax
    eed9:	d3 e0                	shl    %cl,%eax
    eedb:	85 c7                	test   %eax,%edi
    eedd:	0f 84 35 06 00 00    	je     f518 <dlfree+0x718>
    eee3:	48 8b 46 10          	mov    0x10(%rsi),%rax
    eee7:	4c 39 c8             	cmp    %r9,%rax
    eeea:	0f 82 d8 01 00 00    	jb     f0c8 <dlfree+0x2c8>
    eef0:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    eef4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    eef8:	48 89 42 10          	mov    %rax,0x10(%rdx)
    eefc:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    ef00:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    ef07:	0f 85 73 01 00 00    	jne    f080 <dlfree+0x280>
    ef0d:	48 83 c4 08          	add    $0x8,%rsp
    ef11:	5b                   	pop    %rbx
    ef12:	5d                   	pop    %rbp
    ef13:	41 5c                	pop    %r12
    ef15:	41 5d                	pop    %r13
    ef17:	c3                   	ret    
    ef18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ef1f:	00 
    ef20:	48 8b 40 f0          	mov    -0x10(%rax),%rax
    ef24:	4d 85 c0             	test   %r8,%r8
    ef27:	74 d7                	je     ef00 <dlfree+0x100>
    ef29:	48 29 c2             	sub    %rax,%rdx
    ef2c:	48 01 c6             	add    %rax,%rsi
    ef2f:	4c 39 ca             	cmp    %r9,%rdx
    ef32:	0f 82 a8 00 00 00    	jb     efe0 <dlfree+0x1e0>
    ef38:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    ef3c:	0f 84 9e 05 00 00    	je     f4e0 <dlfree+0x6e0>
    ef42:	48 89 c1             	mov    %rax,%rcx
    ef45:	48 c1 e9 03          	shr    $0x3,%rcx
    ef49:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    ef4f:	0f 87 6b 02 00 00    	ja     f1c0 <dlfree+0x3c0>
    ef55:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    ef5a:	48 8b 42 10          	mov    0x10(%rdx),%rax
    ef5e:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    ef62:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    ef66:	49 39 c2             	cmp    %rax,%r10
    ef69:	0f 85 ae 07 00 00    	jne    f71d <dlfree+0x91d>
    ef6f:	4c 39 c0             	cmp    %r8,%rax
    ef72:	0f 84 28 05 00 00    	je     f4a0 <dlfree+0x6a0>
    ef78:	4d 39 c8             	cmp    %r9,%r8
    ef7b:	0f 82 47 01 00 00    	jb     f0c8 <dlfree+0x2c8>
    ef81:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    ef85:	0f 85 3d 01 00 00    	jne    f0c8 <dlfree+0x2c8>
    ef8b:	4c 89 40 18          	mov    %r8,0x18(%rax)
    ef8f:	49 89 40 10          	mov    %rax,0x10(%r8)
    ef93:	e9 ea fe ff ff       	jmp    ee82 <dlfree+0x82>
    ef98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    ef9f:	00 
    efa0:	48 8d b3 74 03 00 00 	lea    0x374(%rbx),%rsi
    efa7:	b9 01 00 00 00       	mov    $0x1,%ecx
    efac:	87 0e                	xchg   %ecx,(%rsi)
    efae:	85 c9                	test   %ecx,%ecx
    efb0:	0f 84 96 fe ff ff    	je     ee4c <dlfree+0x4c>
    efb6:	bf 01 00 00 00       	mov    $0x1,%edi
    efbb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    efc0:	8b 8b 74 03 00 00    	mov    0x374(%rbx),%ecx
    efc6:	85 c9                	test   %ecx,%ecx
    efc8:	75 f6                	jne    efc0 <dlfree+0x1c0>
    efca:	89 f9                	mov    %edi,%ecx
    efcc:	87 0e                	xchg   %ecx,(%rsi)
    efce:	85 c9                	test   %ecx,%ecx
    efd0:	75 ee                	jne    efc0 <dlfree+0x1c0>
    efd2:	e9 75 fe ff ff       	jmp    ee4c <dlfree+0x4c>
    efd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    efde:	00 00 
    efe0:	e8 52 33 00 00       	call   12337 <abort>
    efe5:	0f 1f 00             	nopl   (%rax)
    efe8:	c3                   	ret    
    efe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    eff0:	4c 8b 5b 20          	mov    0x20(%rbx),%r11
    eff4:	48 39 7b 28          	cmp    %rdi,0x28(%rbx)
    eff8:	0f 84 72 05 00 00    	je     f570 <dlfree+0x770>
    effe:	49 39 fb             	cmp    %rdi,%r11
    f001:	0f 84 91 06 00 00    	je     f698 <dlfree+0x898>
    f007:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f00b:	48 89 c1             	mov    %rax,%rcx
    f00e:	48 01 c6             	add    %rax,%rsi
    f011:	48 c1 e9 03          	shr    $0x3,%rcx
    f015:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    f01b:	0f 87 67 02 00 00    	ja     f288 <dlfree+0x488>
    f021:	44 8d 54 09 09       	lea    0x9(%rcx,%rcx,1),%r10d
    f026:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f02a:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f02e:	4e 8d 14 d3          	lea    (%rbx,%r10,8),%r10
    f032:	49 39 c2             	cmp    %rax,%r10
    f035:	0f 85 73 04 00 00    	jne    f4ae <dlfree+0x6ae>
    f03b:	4c 39 c0             	cmp    %r8,%rax
    f03e:	0f 84 7c 06 00 00    	je     f6c0 <dlfree+0x8c0>
    f044:	4d 39 c8             	cmp    %r9,%r8
    f047:	72 7f                	jb     f0c8 <dlfree+0x2c8>
    f049:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f04d:	75 79                	jne    f0c8 <dlfree+0x2c8>
    f04f:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f053:	49 89 40 10          	mov    %rax,0x10(%r8)
    f057:	48 89 f0             	mov    %rsi,%rax
    f05a:	48 83 c8 01          	or     $0x1,%rax
    f05e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f062:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f066:	4c 39 da             	cmp    %r11,%rdx
    f069:	0f 85 47 fe ff ff    	jne    eeb6 <dlfree+0xb6>
    f06f:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f073:	e9 88 fe ff ff       	jmp    ef00 <dlfree+0x100>
    f078:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f07f:	00 
    f080:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    f087:	00 00 00 
    f08a:	48 83 c4 08          	add    $0x8,%rsp
    f08e:	5b                   	pop    %rbx
    f08f:	5d                   	pop    %rbp
    f090:	41 5c                	pop    %r12
    f092:	41 5d                	pop    %r13
    f094:	c3                   	ret    
    f095:	0f 1f 00             	nopl   (%rax)
    f098:	48 89 f0             	mov    %rsi,%rax
    f09b:	48 c1 e8 08          	shr    $0x8,%rax
    f09f:	89 c1                	mov    %eax,%ecx
    f0a1:	85 c0                	test   %eax,%eax
    f0a3:	74 2b                	je     f0d0 <dlfree+0x2d0>
    f0a5:	3d ff ff 00 00       	cmp    $0xffff,%eax
    f0aa:	0f 86 a0 02 00 00    	jbe    f350 <dlfree+0x550>
    f0b0:	b8 00 00 00 80       	mov    $0x80000000,%eax
    f0b5:	bf 50 03 00 00       	mov    $0x350,%edi
    f0ba:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    f0bf:	eb 19                	jmp    f0da <dlfree+0x2da>
    f0c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f0c8:	e8 6a 32 00 00       	call   12337 <abort>
    f0cd:	0f 1f 00             	nopl   (%rax)
    f0d0:	b8 01 00 00 00       	mov    $0x1,%eax
    f0d5:	bf 58 02 00 00       	mov    $0x258,%edi
    f0da:	44 8b 43 04          	mov    0x4(%rbx),%r8d
    f0de:	66 48 0f 6e ca       	movq   %rdx,%xmm1
    f0e3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f0e7:	89 4a 38             	mov    %ecx,0x38(%rdx)
    f0ea:	66 0f 6c c9          	punpcklqdq %xmm1,%xmm1
    f0ee:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    f0f2:	44 85 c0             	test   %r8d,%eax
    f0f5:	0f 84 2d 04 00 00    	je     f528 <dlfree+0x728>
    f0fb:	89 c8                	mov    %ecx,%eax
    f0fd:	49 89 f0             	mov    %rsi,%r8
    f100:	48 8b bc c3 58 02 00 	mov    0x258(%rbx,%rax,8),%rdi
    f107:	00 
    f108:	83 f9 1f             	cmp    $0x1f,%ecx
    f10b:	74 31                	je     f13e <dlfree+0x33e>
    f10d:	89 c8                	mov    %ecx,%eax
    f10f:	b9 39 00 00 00       	mov    $0x39,%ecx
    f114:	d1 e8                	shr    %eax
    f116:	29 c1                	sub    %eax,%ecx
    f118:	49 d3 e0             	shl    %cl,%r8
    f11b:	eb 21                	jmp    f13e <dlfree+0x33e>
    f11d:	0f 1f 00             	nopl   (%rax)
    f120:	4c 89 c0             	mov    %r8,%rax
    f123:	4d 01 c0             	add    %r8,%r8
    f126:	48 c1 e8 3f          	shr    $0x3f,%rax
    f12a:	48 83 c0 04          	add    $0x4,%rax
    f12e:	48 8b 0c c7          	mov    (%rdi,%rax,8),%rcx
    f132:	48 85 c9             	test   %rcx,%rcx
    f135:	0f 84 15 04 00 00    	je     f550 <dlfree+0x750>
    f13b:	48 89 cf             	mov    %rcx,%rdi
    f13e:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f142:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    f146:	48 39 f0             	cmp    %rsi,%rax
    f149:	75 d5                	jne    f120 <dlfree+0x320>
    f14b:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f14f:	66 48 0f 6e d7       	movq   %rdi,%xmm2
    f154:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f159:	66 0f 6c c2          	punpcklqdq %xmm2,%xmm0
    f15d:	4c 39 cf             	cmp    %r9,%rdi
    f160:	0f 82 62 ff ff ff    	jb     f0c8 <dlfree+0x2c8>
    f166:	4c 39 c8             	cmp    %r9,%rax
    f169:	0f 82 59 ff ff ff    	jb     f0c8 <dlfree+0x2c8>
    f16f:	48 89 50 18          	mov    %rdx,0x18(%rax)
    f173:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    f177:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    f17e:	00 
    f17f:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    f183:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    f188:	0f 85 72 fd ff ff    	jne    ef00 <dlfree+0x100>
    f18e:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    f195:	48 85 c0             	test   %rax,%rax
    f198:	74 0f                	je     f1a9 <dlfree+0x3a9>
    f19a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f1a0:	48 8b 40 10          	mov    0x10(%rax),%rax
    f1a4:	48 85 c0             	test   %rax,%rax
    f1a7:	75 f7                	jne    f1a0 <dlfree+0x3a0>
    f1a9:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    f1b0:	ff 
    f1b1:	e9 4a fd ff ff       	jmp    ef00 <dlfree+0x100>
    f1b6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f1bd:	00 00 00 
    f1c0:	4c 8b 42 18          	mov    0x18(%rdx),%r8
    f1c4:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    f1c8:	49 39 d0             	cmp    %rdx,%r8
    f1cb:	0f 84 bf 01 00 00    	je     f390 <dlfree+0x590>
    f1d1:	48 8b 42 10          	mov    0x10(%rdx),%rax
    f1d5:	4c 39 c8             	cmp    %r9,%rax
    f1d8:	0f 82 ea fe ff ff    	jb     f0c8 <dlfree+0x2c8>
    f1de:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f1e2:	0f 85 e0 fe ff ff    	jne    f0c8 <dlfree+0x2c8>
    f1e8:	49 39 50 10          	cmp    %rdx,0x10(%r8)
    f1ec:	0f 85 d6 fe ff ff    	jne    f0c8 <dlfree+0x2c8>
    f1f2:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f1f6:	49 89 40 10          	mov    %rax,0x10(%r8)
    f1fa:	4d 85 db             	test   %r11,%r11
    f1fd:	0f 84 7f fc ff ff    	je     ee82 <dlfree+0x82>
    f203:	8b 42 38             	mov    0x38(%rdx),%eax
    f206:	48 89 c1             	mov    %rax,%rcx
    f209:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f20d:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f214:	00 
    f215:	0f 84 c8 04 00 00    	je     f6e3 <dlfree+0x8e3>
    f21b:	4d 39 cb             	cmp    %r9,%r11
    f21e:	0f 82 a4 fe ff ff    	jb     f0c8 <dlfree+0x2c8>
    f224:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f228:	0f 84 4a 05 00 00    	je     f778 <dlfree+0x978>
    f22e:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f232:	4d 85 c0             	test   %r8,%r8
    f235:	0f 84 47 fc ff ff    	je     ee82 <dlfree+0x82>
    f23b:	4d 39 c8             	cmp    %r9,%r8
    f23e:	0f 82 84 fe ff ff    	jb     f0c8 <dlfree+0x2c8>
    f244:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f248:	4d 89 58 30          	mov    %r11,0x30(%r8)
    f24c:	48 85 c0             	test   %rax,%rax
    f24f:	74 11                	je     f262 <dlfree+0x462>
    f251:	4c 39 c8             	cmp    %r9,%rax
    f254:	0f 82 6e fe ff ff    	jb     f0c8 <dlfree+0x2c8>
    f25a:	49 89 40 20          	mov    %rax,0x20(%r8)
    f25e:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f262:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f266:	48 85 c0             	test   %rax,%rax
    f269:	0f 84 13 fc ff ff    	je     ee82 <dlfree+0x82>
    f26f:	4c 39 c8             	cmp    %r9,%rax
    f272:	0f 82 50 fe ff ff    	jb     f0c8 <dlfree+0x2c8>
    f278:	49 89 40 28          	mov    %rax,0x28(%r8)
    f27c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f280:	e9 fd fb ff ff       	jmp    ee82 <dlfree+0x82>
    f285:	0f 1f 00             	nopl   (%rax)
    f288:	4c 8b 47 18          	mov    0x18(%rdi),%r8
    f28c:	48 8b 6f 30          	mov    0x30(%rdi),%rbp
    f290:	49 39 f8             	cmp    %rdi,%r8
    f293:	0f 84 7f 01 00 00    	je     f418 <dlfree+0x618>
    f299:	48 8b 47 10          	mov    0x10(%rdi),%rax
    f29d:	4c 39 c8             	cmp    %r9,%rax
    f2a0:	0f 82 22 fe ff ff    	jb     f0c8 <dlfree+0x2c8>
    f2a6:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f2aa:	0f 85 18 fe ff ff    	jne    f0c8 <dlfree+0x2c8>
    f2b0:	49 39 78 10          	cmp    %rdi,0x10(%r8)
    f2b4:	0f 85 0e fe ff ff    	jne    f0c8 <dlfree+0x2c8>
    f2ba:	4c 89 40 18          	mov    %r8,0x18(%rax)
    f2be:	49 89 40 10          	mov    %rax,0x10(%r8)
    f2c2:	48 85 ed             	test   %rbp,%rbp
    f2c5:	0f 84 8c fd ff ff    	je     f057 <dlfree+0x257>
    f2cb:	8b 47 38             	mov    0x38(%rdi),%eax
    f2ce:	48 89 c1             	mov    %rax,%rcx
    f2d1:	4c 8d 50 4a          	lea    0x4a(%rax),%r10
    f2d5:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f2dc:	00 
    f2dd:	0f 84 1d 04 00 00    	je     f700 <dlfree+0x900>
    f2e3:	4c 39 cd             	cmp    %r9,%rbp
    f2e6:	0f 82 dc fd ff ff    	jb     f0c8 <dlfree+0x2c8>
    f2ec:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f2f0:	0f 84 8b 04 00 00    	je     f781 <dlfree+0x981>
    f2f6:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f2fa:	4d 85 c0             	test   %r8,%r8
    f2fd:	0f 84 54 fd ff ff    	je     f057 <dlfree+0x257>
    f303:	4d 39 c8             	cmp    %r9,%r8
    f306:	0f 82 bc fd ff ff    	jb     f0c8 <dlfree+0x2c8>
    f30c:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f310:	49 89 68 30          	mov    %rbp,0x30(%r8)
    f314:	48 85 c0             	test   %rax,%rax
    f317:	74 11                	je     f32a <dlfree+0x52a>
    f319:	4c 39 c8             	cmp    %r9,%rax
    f31c:	0f 82 a6 fd ff ff    	jb     f0c8 <dlfree+0x2c8>
    f322:	49 89 40 20          	mov    %rax,0x20(%r8)
    f326:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f32a:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f32e:	48 85 c0             	test   %rax,%rax
    f331:	0f 84 20 fd ff ff    	je     f057 <dlfree+0x257>
    f337:	4c 39 c8             	cmp    %r9,%rax
    f33a:	0f 82 88 fd ff ff    	jb     f0c8 <dlfree+0x2c8>
    f340:	49 89 40 28          	mov    %rax,0x28(%r8)
    f344:	4c 89 40 30          	mov    %r8,0x30(%rax)
    f348:	e9 0a fd ff ff       	jmp    f057 <dlfree+0x257>
    f34d:	0f 1f 00             	nopl   (%rax)
    f350:	0f bd c1             	bsr    %ecx,%eax
    f353:	b9 26 00 00 00       	mov    $0x26,%ecx
    f358:	48 89 f7             	mov    %rsi,%rdi
    f35b:	83 f0 1f             	xor    $0x1f,%eax
    f35e:	29 c1                	sub    %eax,%ecx
    f360:	48 d3 ef             	shr    %cl,%rdi
    f363:	48 89 f9             	mov    %rdi,%rcx
    f366:	bf 1f 00 00 00       	mov    $0x1f,%edi
    f36b:	29 c7                	sub    %eax,%edi
    f36d:	83 e1 01             	and    $0x1,%ecx
    f370:	b8 01 00 00 00       	mov    $0x1,%eax
    f375:	8d 0c 79             	lea    (%rcx,%rdi,2),%ecx
    f378:	8d 79 4b             	lea    0x4b(%rcx),%edi
    f37b:	d3 e0                	shl    %cl,%eax
    f37d:	48 c1 e7 03          	shl    $0x3,%rdi
    f381:	e9 54 fd ff ff       	jmp    f0da <dlfree+0x2da>
    f386:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f38d:	00 00 00 
    f390:	48 8b 42 28          	mov    0x28(%rdx),%rax
    f394:	48 8d 4a 28          	lea    0x28(%rdx),%rcx
    f398:	48 85 c0             	test   %rax,%rax
    f39b:	0f 84 af 03 00 00    	je     f750 <dlfree+0x950>
    f3a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f3a8:	49 89 ca             	mov    %rcx,%r10
    f3ab:	49 89 c0             	mov    %rax,%r8
    f3ae:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f3b2:	48 8b 40 28          	mov    0x28(%rax),%rax
    f3b6:	48 85 c0             	test   %rax,%rax
    f3b9:	75 ed                	jne    f3a8 <dlfree+0x5a8>
    f3bb:	49 8b 40 20          	mov    0x20(%r8),%rax
    f3bf:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f3c3:	48 85 c0             	test   %rax,%rax
    f3c6:	75 e0                	jne    f3a8 <dlfree+0x5a8>
    f3c8:	4d 39 ca             	cmp    %r9,%r10
    f3cb:	0f 82 f7 fc ff ff    	jb     f0c8 <dlfree+0x2c8>
    f3d1:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f3d8:	4d 85 db             	test   %r11,%r11
    f3db:	0f 84 a1 fa ff ff    	je     ee82 <dlfree+0x82>
    f3e1:	8b 42 38             	mov    0x38(%rdx),%eax
    f3e4:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f3e8:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f3ef:	00 
    f3f0:	0f 84 a2 03 00 00    	je     f798 <dlfree+0x998>
    f3f6:	4d 39 cb             	cmp    %r9,%r11
    f3f9:	0f 82 c9 fc ff ff    	jb     f0c8 <dlfree+0x2c8>
    f3ff:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    f403:	0f 84 ac 03 00 00    	je     f7b5 <dlfree+0x9b5>
    f409:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f40d:	e9 29 fe ff ff       	jmp    f23b <dlfree+0x43b>
    f412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f418:	48 8b 47 28          	mov    0x28(%rdi),%rax
    f41c:	48 8d 4f 28          	lea    0x28(%rdi),%rcx
    f420:	48 85 c0             	test   %rax,%rax
    f423:	0f 84 39 03 00 00    	je     f762 <dlfree+0x962>
    f429:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f430:	49 89 ca             	mov    %rcx,%r10
    f433:	49 89 c0             	mov    %rax,%r8
    f436:	48 8d 48 28          	lea    0x28(%rax),%rcx
    f43a:	48 8b 40 28          	mov    0x28(%rax),%rax
    f43e:	48 85 c0             	test   %rax,%rax
    f441:	75 ed                	jne    f430 <dlfree+0x630>
    f443:	49 8b 40 20          	mov    0x20(%r8),%rax
    f447:	49 8d 48 20          	lea    0x20(%r8),%rcx
    f44b:	48 85 c0             	test   %rax,%rax
    f44e:	75 e0                	jne    f430 <dlfree+0x630>
    f450:	4d 39 ca             	cmp    %r9,%r10
    f453:	0f 82 6f fc ff ff    	jb     f0c8 <dlfree+0x2c8>
    f459:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    f460:	48 85 ed             	test   %rbp,%rbp
    f463:	0f 84 ee fb ff ff    	je     f057 <dlfree+0x257>
    f469:	8b 47 38             	mov    0x38(%rdi),%eax
    f46c:	48 8d 48 4a          	lea    0x4a(%rax),%rcx
    f470:	48 39 bc c3 58 02 00 	cmp    %rdi,0x258(%rbx,%rax,8)
    f477:	00 
    f478:	0f 84 24 03 00 00    	je     f7a2 <dlfree+0x9a2>
    f47e:	4c 39 cd             	cmp    %r9,%rbp
    f481:	0f 82 41 fc ff ff    	jb     f0c8 <dlfree+0x2c8>
    f487:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f48b:	0f 84 1b 03 00 00    	je     f7ac <dlfree+0x9ac>
    f491:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    f495:	e9 69 fe ff ff       	jmp    f303 <dlfree+0x503>
    f49a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f4a0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f4a5:	d3 c0                	rol    %cl,%eax
    f4a7:	21 03                	and    %eax,(%rbx)
    f4a9:	e9 d4 f9 ff ff       	jmp    ee82 <dlfree+0x82>
    f4ae:	4c 39 c8             	cmp    %r9,%rax
    f4b1:	0f 82 11 fc ff ff    	jb     f0c8 <dlfree+0x2c8>
    f4b7:	48 39 78 18          	cmp    %rdi,0x18(%rax)
    f4bb:	0f 85 07 fc ff ff    	jne    f0c8 <dlfree+0x2c8>
    f4c1:	4c 39 c0             	cmp    %r8,%rax
    f4c4:	0f 84 f6 01 00 00    	je     f6c0 <dlfree+0x8c0>
    f4ca:	4d 39 c2             	cmp    %r8,%r10
    f4cd:	0f 84 7c fb ff ff    	je     f04f <dlfree+0x24f>
    f4d3:	e9 6c fb ff ff       	jmp    f044 <dlfree+0x244>
    f4d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f4df:	00 
    f4e0:	48 8b 47 08          	mov    0x8(%rdi),%rax
    f4e4:	48 89 c1             	mov    %rax,%rcx
    f4e7:	48 f7 d1             	not    %rcx
    f4ea:	83 e1 03             	and    $0x3,%ecx
    f4ed:	0f 85 8f f9 ff ff    	jne    ee82 <dlfree+0x82>
    f4f3:	48 83 e0 fe          	and    $0xfffffffffffffffe,%rax
    f4f7:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f4fb:	48 89 47 08          	mov    %rax,0x8(%rdi)
    f4ff:	48 89 f0             	mov    %rsi,%rax
    f502:	48 83 c8 01          	or     $0x1,%rax
    f506:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f50a:	48 89 37             	mov    %rsi,(%rdi)
    f50d:	e9 ee f9 ff ff       	jmp    ef00 <dlfree+0x100>
    f512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    f518:	09 c7                	or     %eax,%edi
    f51a:	48 89 f0             	mov    %rsi,%rax
    f51d:	89 3b                	mov    %edi,(%rbx)
    f51f:	e9 cc f9 ff ff       	jmp    eef0 <dlfree+0xf0>
    f524:	0f 1f 40 00          	nopl   0x0(%rax)
    f528:	44 09 c0             	or     %r8d,%eax
    f52b:	48 01 df             	add    %rbx,%rdi
    f52e:	89 43 04             	mov    %eax,0x4(%rbx)
    f531:	48 89 94 cb 58 02 00 	mov    %rdx,0x258(%rbx,%rcx,8)
    f538:	00 
    f539:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f53d:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f541:	e9 3d fc ff ff       	jmp    f183 <dlfree+0x383>
    f546:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    f54d:	00 00 00 
    f550:	48 8d 0c c7          	lea    (%rdi,%rax,8),%rcx
    f554:	4c 39 c9             	cmp    %r9,%rcx
    f557:	0f 82 6b fb ff ff    	jb     f0c8 <dlfree+0x2c8>
    f55d:	48 89 14 c7          	mov    %rdx,(%rdi,%rax,8)
    f561:	48 89 7a 30          	mov    %rdi,0x30(%rdx)
    f565:	0f 11 4a 10          	movups %xmm1,0x10(%rdx)
    f569:	e9 15 fc ff ff       	jmp    f183 <dlfree+0x383>
    f56e:	66 90                	xchg   %ax,%ax
    f570:	48 03 73 10          	add    0x10(%rbx),%rsi
    f574:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    f578:	48 89 f0             	mov    %rsi,%rax
    f57b:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    f57f:	48 83 c8 01          	or     $0x1,%rax
    f583:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f587:	4c 39 da             	cmp    %r11,%rdx
    f58a:	0f 84 3e 01 00 00    	je     f6ce <dlfree+0x8ce>
    f590:	48 39 73 30          	cmp    %rsi,0x30(%rbx)
    f594:	0f 83 66 f9 ff ff    	jae    ef00 <dlfree+0x100>
    f59a:	48 83 3d 5e b8 01 00 	cmpq   $0x0,0x1b85e(%rip)        # 2ae00 <mparams>
    f5a1:	00 
    f5a2:	0f 84 e2 01 00 00    	je     f78a <dlfree+0x98a>
    f5a8:	48 85 d2             	test   %rdx,%rdx
    f5ab:	0f 84 4f f9 ff ff    	je     ef00 <dlfree+0x100>
    f5b1:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f5b5:	48 83 f9 50          	cmp    $0x50,%rcx
    f5b9:	0f 86 a7 00 00 00    	jbe    f666 <dlfree+0x866>
    f5bf:	48 8b 35 4a b8 01 00 	mov    0x1b84a(%rip),%rsi        # 2ae10 <mparams+0x10>
    f5c6:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    f5cd:	0f 1f 00             	nopl   (%rax)
    f5d0:	48 8b 45 00          	mov    0x0(%rbp),%rax
    f5d4:	48 39 c2             	cmp    %rax,%rdx
    f5d7:	72 09                	jb     f5e2 <dlfree+0x7e2>
    f5d9:	48 03 45 08          	add    0x8(%rbp),%rax
    f5dd:	48 39 c2             	cmp    %rax,%rdx
    f5e0:	72 09                	jb     f5eb <dlfree+0x7eb>
    f5e2:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    f5e6:	48 85 ed             	test   %rbp,%rbp
    f5e9:	75 e5                	jne    f5d0 <dlfree+0x7d0>
    f5eb:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    f5ef:	75 75                	jne    f666 <dlfree+0x866>
    f5f1:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    f5f6:	31 d2                	xor    %edx,%edx
    f5f8:	48 f7 f6             	div    %rsi
    f5fb:	48 83 e8 01          	sub    $0x1,%rax
    f5ff:	48 0f af c6          	imul   %rsi,%rax
    f603:	49 89 c4             	mov    %rax,%r12
    f606:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    f60d:	ff ff 7f 
    f610:	4c 39 e0             	cmp    %r12,%rax
    f613:	73 0d                	jae    f622 <dlfree+0x822>
    f615:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    f61c:	00 00 80 
    f61f:	49 29 f4             	sub    %rsi,%r12
    f622:	b8 01 00 00 00       	mov    $0x1,%eax
    f627:	87 05 03 b8 01 00    	xchg   %eax,0x1b803(%rip)        # 2ae30 <malloc_global_mutex>
    f62d:	48 8d 15 fc b7 01 00 	lea    0x1b7fc(%rip),%rdx        # 2ae30 <malloc_global_mutex>
    f634:	b9 01 00 00 00       	mov    $0x1,%ecx
    f639:	85 c0                	test   %eax,%eax
    f63b:	75 40                	jne    f67d <dlfree+0x87d>
    f63d:	31 ff                	xor    %edi,%edi
    f63f:	e8 ec ce ff ff       	call   c530 <sbrk>
    f644:	49 89 c5             	mov    %rax,%r13
    f647:	48 8b 45 08          	mov    0x8(%rbp),%rax
    f64b:	48 03 45 00          	add    0x0(%rbp),%rax
    f64f:	49 39 c5             	cmp    %rax,%r13
    f652:	0f 84 e5 01 00 00    	je     f83d <dlfree+0xa3d>
    f658:	c7 05 ce b7 01 00 00 	movl   $0x0,0x1b7ce(%rip)        # 2ae30 <malloc_global_mutex>
    f65f:	00 00 00 
    f662:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    f666:	48 39 4b 30          	cmp    %rcx,0x30(%rbx)
    f66a:	0f 83 90 f8 ff ff    	jae    ef00 <dlfree+0x100>
    f670:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    f677:	ff 
    f678:	e9 83 f8 ff ff       	jmp    ef00 <dlfree+0x100>
    f67d:	8b 02                	mov    (%rdx),%eax
    f67f:	85 c0                	test   %eax,%eax
    f681:	75 fa                	jne    f67d <dlfree+0x87d>
    f683:	89 c8                	mov    %ecx,%eax
    f685:	87 05 a5 b7 01 00    	xchg   %eax,0x1b7a5(%rip)        # 2ae30 <malloc_global_mutex>
    f68b:	85 c0                	test   %eax,%eax
    f68d:	75 ee                	jne    f67d <dlfree+0x87d>
    f68f:	eb ac                	jmp    f63d <dlfree+0x83d>
    f691:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    f698:	48 03 73 08          	add    0x8(%rbx),%rsi
    f69c:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    f6a0:	48 89 f0             	mov    %rsi,%rax
    f6a3:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    f6a7:	48 83 c8 01          	or     $0x1,%rax
    f6ab:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f6af:	48 89 34 32          	mov    %rsi,(%rdx,%rsi,1)
    f6b3:	e9 48 f8 ff ff       	jmp    ef00 <dlfree+0x100>
    f6b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f6bf:	00 
    f6c0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f6c5:	d3 c0                	rol    %cl,%eax
    f6c7:	21 03                	and    %eax,(%rbx)
    f6c9:	e9 89 f9 ff ff       	jmp    f057 <dlfree+0x257>
    f6ce:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    f6d5:	00 
    f6d6:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    f6dd:	00 
    f6de:	e9 ad fe ff ff       	jmp    f590 <dlfree+0x790>
    f6e3:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f6e8:	4d 85 c0             	test   %r8,%r8
    f6eb:	0f 85 4a fb ff ff    	jne    f23b <dlfree+0x43b>
    f6f1:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f6f6:	d3 c0                	rol    %cl,%eax
    f6f8:	21 43 04             	and    %eax,0x4(%rbx)
    f6fb:	e9 82 f7 ff ff       	jmp    ee82 <dlfree+0x82>
    f700:	4e 89 44 d3 08       	mov    %r8,0x8(%rbx,%r10,8)
    f705:	4d 85 c0             	test   %r8,%r8
    f708:	0f 85 f5 fb ff ff    	jne    f303 <dlfree+0x503>
    f70e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    f713:	d3 c0                	rol    %cl,%eax
    f715:	21 43 04             	and    %eax,0x4(%rbx)
    f718:	e9 3a f9 ff ff       	jmp    f057 <dlfree+0x257>
    f71d:	4c 39 c8             	cmp    %r9,%rax
    f720:	0f 82 a2 f9 ff ff    	jb     f0c8 <dlfree+0x2c8>
    f726:	48 39 50 18          	cmp    %rdx,0x18(%rax)
    f72a:	0f 85 98 f9 ff ff    	jne    f0c8 <dlfree+0x2c8>
    f730:	4c 39 c0             	cmp    %r8,%rax
    f733:	0f 84 67 fd ff ff    	je     f4a0 <dlfree+0x6a0>
    f739:	4d 39 c2             	cmp    %r8,%r10
    f73c:	0f 84 49 f8 ff ff    	je     ef8b <dlfree+0x18b>
    f742:	e9 31 f8 ff ff       	jmp    ef78 <dlfree+0x178>
    f747:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    f74e:	00 00 
    f750:	48 8b 42 20          	mov    0x20(%rdx),%rax
    f754:	48 85 c0             	test   %rax,%rax
    f757:	74 65                	je     f7be <dlfree+0x9be>
    f759:	48 8d 4a 20          	lea    0x20(%rdx),%rcx
    f75d:	e9 46 fc ff ff       	jmp    f3a8 <dlfree+0x5a8>
    f762:	48 8b 47 20          	mov    0x20(%rdi),%rax
    f766:	48 85 c0             	test   %rax,%rax
    f769:	0f 84 8f 00 00 00    	je     f7fe <dlfree+0x9fe>
    f76f:	48 8d 4f 20          	lea    0x20(%rdi),%rcx
    f773:	e9 b8 fc ff ff       	jmp    f430 <dlfree+0x630>
    f778:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f77c:	e9 b1 fa ff ff       	jmp    f232 <dlfree+0x432>
    f781:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f785:	e9 70 fb ff ff       	jmp    f2fa <dlfree+0x4fa>
    f78a:	e8 91 d7 ff ff       	call   cf20 <init_mparams.isra.0>
    f78f:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    f793:	e9 10 fe ff ff       	jmp    f5a8 <dlfree+0x7a8>
    f798:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f79d:	e9 99 fa ff ff       	jmp    f23b <dlfree+0x43b>
    f7a2:	4c 89 44 cb 08       	mov    %r8,0x8(%rbx,%rcx,8)
    f7a7:	e9 57 fb ff ff       	jmp    f303 <dlfree+0x503>
    f7ac:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    f7b0:	e9 4e fb ff ff       	jmp    f303 <dlfree+0x503>
    f7b5:	4d 89 43 20          	mov    %r8,0x20(%r11)
    f7b9:	e9 7d fa ff ff       	jmp    f23b <dlfree+0x43b>
    f7be:	4d 85 db             	test   %r11,%r11
    f7c1:	0f 84 bb f6 ff ff    	je     ee82 <dlfree+0x82>
    f7c7:	8b 42 38             	mov    0x38(%rdx),%eax
    f7ca:	48 89 c1             	mov    %rax,%rcx
    f7cd:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f7d1:	48 39 94 c3 58 02 00 	cmp    %rdx,0x258(%rbx,%rax,8)
    f7d8:	00 
    f7d9:	0f 84 fd 00 00 00    	je     f8dc <dlfree+0xadc>
    f7df:	4d 39 cb             	cmp    %r9,%r11
    f7e2:	0f 82 e0 f8 ff ff    	jb     f0c8 <dlfree+0x2c8>
    f7e8:	49 3b 53 20          	cmp    0x20(%r11),%rdx
    f7ec:	0f 84 02 01 00 00    	je     f8f4 <dlfree+0xaf4>
    f7f2:	45 31 c0             	xor    %r8d,%r8d
    f7f5:	4d 89 43 28          	mov    %r8,0x28(%r11)
    f7f9:	e9 84 f6 ff ff       	jmp    ee82 <dlfree+0x82>
    f7fe:	48 85 ed             	test   %rbp,%rbp
    f801:	0f 84 50 f8 ff ff    	je     f057 <dlfree+0x257>
    f807:	8b 47 38             	mov    0x38(%rdi),%eax
    f80a:	48 89 c1             	mov    %rax,%rcx
    f80d:	4c 8d 40 4a          	lea    0x4a(%rax),%r8
    f811:	48 3b bc c3 58 02 00 	cmp    0x258(%rbx,%rax,8),%rdi
    f818:	00 
    f819:	0f 84 b1 00 00 00    	je     f8d0 <dlfree+0xad0>
    f81f:	4c 39 cd             	cmp    %r9,%rbp
    f822:	0f 82 a0 f8 ff ff    	jb     f0c8 <dlfree+0x2c8>
    f828:	48 39 7d 20          	cmp    %rdi,0x20(%rbp)
    f82c:	0f 84 b7 00 00 00    	je     f8e9 <dlfree+0xae9>
    f832:	31 c0                	xor    %eax,%eax
    f834:	48 89 45 28          	mov    %rax,0x28(%rbp)
    f838:	e9 1a f8 ff ff       	jmp    f057 <dlfree+0x257>
    f83d:	4c 89 e7             	mov    %r12,%rdi
    f840:	48 f7 df             	neg    %rdi
    f843:	e8 e8 cc ff ff       	call   c530 <sbrk>
    f848:	31 ff                	xor    %edi,%edi
    f84a:	49 89 c4             	mov    %rax,%r12
    f84d:	e8 de cc ff ff       	call   c530 <sbrk>
    f852:	49 83 c4 01          	add    $0x1,%r12
    f856:	0f 84 fc fd ff ff    	je     f658 <dlfree+0x858>
    f85c:	4c 39 e8             	cmp    %r13,%rax
    f85f:	0f 83 f3 fd ff ff    	jae    f658 <dlfree+0x858>
    f865:	49 29 c5             	sub    %rax,%r13
    f868:	c7 05 be b5 01 00 00 	movl   $0x0,0x1b5be(%rip)        # 2ae30 <malloc_global_mutex>
    f86f:	00 00 00 
    f872:	48 8b 43 28          	mov    0x28(%rbx),%rax
    f876:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    f87a:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    f87e:	48 89 c6             	mov    %rax,%rsi
    f881:	4c 29 ea             	sub    %r13,%rdx
    f884:	48 8d 48 10          	lea    0x10(%rax),%rcx
    f888:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    f88f:	83 e6 0f             	and    $0xf,%esi
    f892:	74 09                	je     f89d <dlfree+0xa9d>
    f894:	48 f7 d9             	neg    %rcx
    f897:	48 89 ce             	mov    %rcx,%rsi
    f89a:	83 e6 0f             	and    $0xf,%esi
    f89d:	48 89 d1             	mov    %rdx,%rcx
    f8a0:	48 8d 3c 30          	lea    (%rax,%rsi,1),%rdi
    f8a4:	48 29 f1             	sub    %rsi,%rcx
    f8a7:	48 89 7b 28          	mov    %rdi,0x28(%rbx)
    f8ab:	48 89 4b 10          	mov    %rcx,0x10(%rbx)
    f8af:	48 83 c9 01          	or     $0x1,%rcx
    f8b3:	48 89 4f 08          	mov    %rcx,0x8(%rdi)
    f8b7:	48 c7 44 10 08 50 00 	movq   $0x50,0x8(%rax,%rdx,1)
    f8be:	00 00 
    f8c0:	48 8b 05 59 b5 01 00 	mov    0x1b559(%rip),%rax        # 2ae20 <mparams+0x20>
    f8c7:	48 89 43 30          	mov    %rax,0x30(%rbx)
    f8cb:	e9 30 f6 ff ff       	jmp    ef00 <dlfree+0x100>
    f8d0:	31 ff                	xor    %edi,%edi
    f8d2:	4a 89 7c c3 08       	mov    %rdi,0x8(%rbx,%r8,8)
    f8d7:	e9 32 fe ff ff       	jmp    f70e <dlfree+0x90e>
    f8dc:	45 31 db             	xor    %r11d,%r11d
    f8df:	4e 89 5c c3 08       	mov    %r11,0x8(%rbx,%r8,8)
    f8e4:	e9 08 fe ff ff       	jmp    f6f1 <dlfree+0x8f1>
    f8e9:	31 c9                	xor    %ecx,%ecx
    f8eb:	48 89 4d 20          	mov    %rcx,0x20(%rbp)
    f8ef:	e9 63 f7 ff ff       	jmp    f057 <dlfree+0x257>
    f8f4:	45 31 d2             	xor    %r10d,%r10d
    f8f7:	4d 89 53 20          	mov    %r10,0x20(%r11)
    f8fb:	e9 82 f5 ff ff       	jmp    ee82 <dlfree+0x82>

000000000000f900 <calloc>:
    f900:	f3 0f 1e fa          	endbr64 
    f904:	55                   	push   %rbp
    f905:	53                   	push   %rbx
    f906:	48 89 fb             	mov    %rdi,%rbx
    f909:	48 83 ec 08          	sub    $0x8,%rsp
    f90d:	48 85 ff             	test   %rdi,%rdi
    f910:	74 1b                	je     f92d <calloc+0x2d>
    f912:	48 89 f8             	mov    %rdi,%rax
    f915:	48 f7 e6             	mul    %rsi
    f918:	0f 90 c2             	seto   %dl
    f91b:	48 09 fe             	or     %rdi,%rsi
    f91e:	48 89 c3             	mov    %rax,%rbx
    f921:	0f b6 d2             	movzbl %dl,%edx
    f924:	48 81 fe ff ff 00 00 	cmp    $0xffff,%rsi
    f92b:	77 2b                	ja     f958 <calloc+0x58>
    f92d:	48 89 df             	mov    %rbx,%rdi
    f930:	e8 db d6 ff ff       	call   d010 <dlmalloc>
    f935:	48 89 c5             	mov    %rax,%rbp
    f938:	48 85 c0             	test   %rax,%rax
    f93b:	74 0d                	je     f94a <calloc+0x4a>
    f93d:	48 89 da             	mov    %rbx,%rdx
    f940:	31 f6                	xor    %esi,%esi
    f942:	48 89 c7             	mov    %rax,%rdi
    f945:	e8 a6 0e 00 00       	call   107f0 <memset>
    f94a:	48 83 c4 08          	add    $0x8,%rsp
    f94e:	48 89 e8             	mov    %rbp,%rax
    f951:	5b                   	pop    %rbx
    f952:	5d                   	pop    %rbp
    f953:	c3                   	ret    
    f954:	0f 1f 40 00          	nopl   0x0(%rax)
    f958:	48 85 d2             	test   %rdx,%rdx
    f95b:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    f962:	48 0f 45 d8          	cmovne %rax,%rbx
    f966:	eb c5                	jmp    f92d <calloc+0x2d>
    f968:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    f96f:	00 

000000000000f970 <dlrealloc>:
    f970:	f3 0f 1e fa          	endbr64 
    f974:	41 57                	push   %r15
    f976:	41 56                	push   %r14
    f978:	41 55                	push   %r13
    f97a:	41 54                	push   %r12
    f97c:	55                   	push   %rbp
    f97d:	53                   	push   %rbx
    f97e:	48 89 f3             	mov    %rsi,%rbx
    f981:	48 83 ec 08          	sub    $0x8,%rsp
    f985:	48 85 ff             	test   %rdi,%rdi
    f988:	0f 84 f2 01 00 00    	je     fb80 <dlrealloc+0x210>
    f98e:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    f995:	0f 87 05 02 00 00    	ja     fba0 <dlrealloc+0x230>
    f99b:	48 89 fd             	mov    %rdi,%rbp
    f99e:	48 85 f6             	test   %rsi,%rsi
    f9a1:	0f 84 11 02 00 00    	je     fbb8 <dlrealloc+0x248>
    f9a7:	48 8d 46 1f          	lea    0x1f(%rsi),%rax
    f9ab:	ba 20 00 00 00       	mov    $0x20,%edx
    f9b0:	4c 8d 6f f0          	lea    -0x10(%rdi),%r13
    f9b4:	48 8b 0d 45 b4 01 00 	mov    0x1b445(%rip),%rcx        # 2ae00 <mparams>
    f9bb:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    f9bf:	48 83 fe 0e          	cmp    $0xe,%rsi
    f9c3:	48 8b 77 f8          	mov    -0x8(%rdi),%rsi
    f9c7:	48 0f 46 c2          	cmovbe %rdx,%rax
    f9cb:	48 89 f2             	mov    %rsi,%rdx
    f9ce:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    f9d2:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    f9d7:	4c 8b 27             	mov    (%rdi),%r12
    f9da:	49 31 cc             	xor    %rcx,%r12
    f9dd:	49 3b 4c 24 40       	cmp    0x40(%r12),%rcx
    f9e2:	0f 85 90 01 00 00    	jne    fb78 <dlrealloc+0x208>
    f9e8:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    f9ef:	00 02 
    f9f1:	0f 85 89 00 00 00    	jne    fa80 <dlrealloc+0x110>
    f9f7:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    f9fc:	4d 39 c5             	cmp    %r8,%r13
    f9ff:	0f 82 73 01 00 00    	jb     fb78 <dlrealloc+0x208>
    fa05:	48 89 f1             	mov    %rsi,%rcx
    fa08:	83 e1 03             	and    $0x3,%ecx
    fa0b:	48 83 f9 01          	cmp    $0x1,%rcx
    fa0f:	0f 84 63 01 00 00    	je     fb78 <dlrealloc+0x208>
    fa15:	49 39 fd             	cmp    %rdi,%r13
    fa18:	0f 83 5a 01 00 00    	jae    fb78 <dlrealloc+0x208>
    fa1e:	4c 8b 4f 08          	mov    0x8(%rdi),%r9
    fa22:	41 f6 c1 01          	test   $0x1,%r9b
    fa26:	0f 84 4c 01 00 00    	je     fb78 <dlrealloc+0x208>
    fa2c:	48 85 c9             	test   %rcx,%rcx
    fa2f:	0f 84 8b 00 00 00    	je     fac0 <dlrealloc+0x150>
    fa35:	48 39 c2             	cmp    %rax,%rdx
    fa38:	0f 82 82 01 00 00    	jb     fbc0 <dlrealloc+0x250>
    fa3e:	48 29 c2             	sub    %rax,%rdx
    fa41:	49 89 d6             	mov    %rdx,%r14
    fa44:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fa48:	0f 87 fa 02 00 00    	ja     fd48 <dlrealloc+0x3d8>
    fa4e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fa55:	00 
    fa56:	83 e1 02             	and    $0x2,%ecx
    fa59:	0f 85 31 02 00 00    	jne    fc90 <dlrealloc+0x320>
    fa5f:	4d 85 ed             	test   %r13,%r13
    fa62:	0f 84 94 00 00 00    	je     fafc <dlrealloc+0x18c>
    fa68:	49 89 ec             	mov    %rbp,%r12
    fa6b:	48 83 c4 08          	add    $0x8,%rsp
    fa6f:	4c 89 e0             	mov    %r12,%rax
    fa72:	5b                   	pop    %rbx
    fa73:	5d                   	pop    %rbp
    fa74:	41 5c                	pop    %r12
    fa76:	41 5d                	pop    %r13
    fa78:	41 5e                	pop    %r14
    fa7a:	41 5f                	pop    %r15
    fa7c:	c3                   	ret    
    fa7d:	0f 1f 00             	nopl   (%rax)
    fa80:	49 8d 8c 24 74 03 00 	lea    0x374(%r12),%rcx
    fa87:	00 
    fa88:	ba 01 00 00 00       	mov    $0x1,%edx
    fa8d:	87 11                	xchg   %edx,(%rcx)
    fa8f:	85 d2                	test   %edx,%edx
    fa91:	0f 85 b9 00 00 00    	jne    fb50 <dlrealloc+0x1e0>
    fa97:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    fa9b:	4d 8b 44 24 18       	mov    0x18(%r12),%r8
    faa0:	48 89 f2             	mov    %rsi,%rdx
    faa3:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    faa7:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    faac:	4d 39 c5             	cmp    %r8,%r13
    faaf:	0f 83 50 ff ff ff    	jae    fa05 <dlrealloc+0x95>
    fab5:	e9 be 00 00 00       	jmp    fb78 <dlrealloc+0x208>
    faba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fac0:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fac7:	00 
    fac8:	89 ce                	mov    %ecx,%esi
    faca:	83 e6 02             	and    $0x2,%esi
    facd:	48 3d f8 00 00 00    	cmp    $0xf8,%rax
    fad3:	76 1f                	jbe    faf4 <dlrealloc+0x184>
    fad5:	48 8d 78 08          	lea    0x8(%rax),%rdi
    fad9:	48 39 fa             	cmp    %rdi,%rdx
    fadc:	72 16                	jb     faf4 <dlrealloc+0x184>
    fade:	48 29 c2             	sub    %rax,%rdx
    fae1:	48 8b 05 28 b3 01 00 	mov    0x1b328(%rip),%rax        # 2ae10 <mparams+0x10>
    fae8:	48 01 c0             	add    %rax,%rax
    faeb:	48 39 d0             	cmp    %rdx,%rax
    faee:	0f 83 62 ff ff ff    	jae    fa56 <dlrealloc+0xe6>
    faf4:	85 f6                	test   %esi,%esi
    faf6:	0f 85 c4 01 00 00    	jne    fcc0 <dlrealloc+0x350>
    fafc:	48 89 df             	mov    %rbx,%rdi
    faff:	e8 0c d5 ff ff       	call   d010 <dlmalloc>
    fb04:	49 89 c4             	mov    %rax,%r12
    fb07:	48 85 c0             	test   %rax,%rax
    fb0a:	0f 84 5b ff ff ff    	je     fa6b <dlrealloc+0xfb>
    fb10:	4c 8b 6d f8          	mov    -0x8(%rbp),%r13
    fb14:	48 89 ee             	mov    %rbp,%rsi
    fb17:	48 89 c7             	mov    %rax,%rdi
    fb1a:	49 83 e5 f8          	and    $0xfffffffffffffff8,%r13
    fb1e:	49 83 ed 10          	sub    $0x10,%r13
    fb22:	4c 39 eb             	cmp    %r13,%rbx
    fb25:	49 0f 47 dd          	cmova  %r13,%rbx
    fb29:	48 89 da             	mov    %rbx,%rdx
    fb2c:	e8 7f 0a 00 00       	call   105b0 <memcpy>
    fb31:	48 89 ef             	mov    %rbp,%rdi
    fb34:	4c 89 ea             	mov    %r13,%rdx
    fb37:	31 f6                	xor    %esi,%esi
    fb39:	e8 b2 0c 00 00       	call   107f0 <memset>
    fb3e:	48 89 ef             	mov    %rbp,%rdi
    fb41:	e8 ba f2 ff ff       	call   ee00 <dlfree>
    fb46:	e9 20 ff ff ff       	jmp    fa6b <dlrealloc+0xfb>
    fb4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fb50:	be 01 00 00 00       	mov    $0x1,%esi
    fb55:	0f 1f 00             	nopl   (%rax)
    fb58:	41 8b 94 24 74 03 00 	mov    0x374(%r12),%edx
    fb5f:	00 
    fb60:	85 d2                	test   %edx,%edx
    fb62:	75 f4                	jne    fb58 <dlrealloc+0x1e8>
    fb64:	89 f2                	mov    %esi,%edx
    fb66:	87 11                	xchg   %edx,(%rcx)
    fb68:	85 d2                	test   %edx,%edx
    fb6a:	75 ec                	jne    fb58 <dlrealloc+0x1e8>
    fb6c:	e9 26 ff ff ff       	jmp    fa97 <dlrealloc+0x127>
    fb71:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fb78:	e8 ba 27 00 00       	call   12337 <abort>
    fb7d:	0f 1f 00             	nopl   (%rax)
    fb80:	48 83 c4 08          	add    $0x8,%rsp
    fb84:	48 89 f7             	mov    %rsi,%rdi
    fb87:	5b                   	pop    %rbx
    fb88:	5d                   	pop    %rbp
    fb89:	41 5c                	pop    %r12
    fb8b:	41 5d                	pop    %r13
    fb8d:	41 5e                	pop    %r14
    fb8f:	41 5f                	pop    %r15
    fb91:	e9 7a d4 ff ff       	jmp    d010 <dlmalloc>
    fb96:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    fb9d:	00 00 00 
    fba0:	e8 eb 11 00 00       	call   10d90 <__errno_location>
    fba5:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    fbab:	45 31 e4             	xor    %r12d,%r12d
    fbae:	e9 b8 fe ff ff       	jmp    fa6b <dlrealloc+0xfb>
    fbb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    fbb8:	e8 43 f2 ff ff       	call   ee00 <dlfree>
    fbbd:	eb ec                	jmp    fbab <dlrealloc+0x23b>
    fbbf:	90                   	nop
    fbc0:	49 39 7c 24 28       	cmp    %rdi,0x28(%r12)
    fbc5:	0f 84 d5 01 00 00    	je     fda0 <dlrealloc+0x430>
    fbcb:	49 39 7c 24 20       	cmp    %rdi,0x20(%r12)
    fbd0:	0f 84 02 01 00 00    	je     fcd8 <dlrealloc+0x368>
    fbd6:	41 f6 c1 02          	test   $0x2,%r9b
    fbda:	0f 85 c8 00 00 00    	jne    fca8 <dlrealloc+0x338>
    fbe0:	49 83 e1 f8          	and    $0xfffffffffffffff8,%r9
    fbe4:	4e 8d 14 0a          	lea    (%rdx,%r9,1),%r10
    fbe8:	49 39 c2             	cmp    %rax,%r10
    fbeb:	0f 82 b7 00 00 00    	jb     fca8 <dlrealloc+0x338>
    fbf1:	4c 89 d2             	mov    %r10,%rdx
    fbf4:	4c 89 c9             	mov    %r9,%rcx
    fbf7:	48 29 c2             	sub    %rax,%rdx
    fbfa:	48 c1 e9 03          	shr    $0x3,%rcx
    fbfe:	49 81 f9 f8 00 00 00 	cmp    $0xf8,%r9
    fc05:	0f 87 f2 01 00 00    	ja     fdfd <dlrealloc+0x48d>
    fc0b:	44 8d 74 09 09       	lea    0x9(%rcx,%rcx,1),%r14d
    fc10:	4c 8b 4f 10          	mov    0x10(%rdi),%r9
    fc14:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    fc18:	4f 8d 34 f4          	lea    (%r12,%r14,8),%r14
    fc1c:	4d 39 f1             	cmp    %r14,%r9
    fc1f:	0f 85 c6 03 00 00    	jne    ffeb <dlrealloc+0x67b>
    fc25:	4d 39 cb             	cmp    %r9,%r11
    fc28:	0f 84 7c 03 00 00    	je     ffaa <dlrealloc+0x63a>
    fc2e:	4d 39 c3             	cmp    %r8,%r11
    fc31:	0f 82 41 ff ff ff    	jb     fb78 <dlrealloc+0x208>
    fc37:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    fc3b:	0f 85 37 ff ff ff    	jne    fb78 <dlrealloc+0x208>
    fc41:	4d 89 59 18          	mov    %r11,0x18(%r9)
    fc45:	4d 89 4b 10          	mov    %r9,0x10(%r11)
    fc49:	48 8b 3d b0 b1 01 00 	mov    0x1b1b0(%rip),%rdi        # 2ae00 <mparams>
    fc50:	83 e6 01             	and    $0x1,%esi
    fc53:	4b 8d 4c 15 00       	lea    0x0(%r13,%r10,1),%rcx
    fc58:	4c 31 e7             	xor    %r12,%rdi
    fc5b:	48 83 fa 1f          	cmp    $0x1f,%rdx
    fc5f:	0f 87 88 02 00 00    	ja     feed <dlrealloc+0x57d>
    fc65:	4c 89 d2             	mov    %r10,%rdx
    fc68:	48 09 f2             	or     %rsi,%rdx
    fc6b:	48 83 ca 02          	or     $0x2,%rdx
    fc6f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fc73:	48 89 39             	mov    %rdi,(%rcx)
    fc76:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    fc7b:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fc82:	00 
    fc83:	e9 ce fd ff ff       	jmp    fa56 <dlrealloc+0xe6>
    fc88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    fc8f:	00 
    fc90:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fc97:	00 00 00 00 00 
    fc9c:	e9 be fd ff ff       	jmp    fa5f <dlrealloc+0xef>
    fca1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fca8:	41 f6 84 24 70 03 00 	testb  $0x2,0x370(%r12)
    fcaf:	00 02 
    fcb1:	0f 84 45 fe ff ff    	je     fafc <dlrealloc+0x18c>
    fcb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    fcbe:	00 00 
    fcc0:	41 c7 84 24 74 03 00 	movl   $0x0,0x374(%r12)
    fcc7:	00 00 00 00 00 
    fccc:	e9 2b fe ff ff       	jmp    fafc <dlrealloc+0x18c>
    fcd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    fcd8:	49 03 54 24 08       	add    0x8(%r12),%rdx
    fcdd:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fce4:	00 
    fce5:	48 39 c2             	cmp    %rax,%rdx
    fce8:	0f 82 01 01 00 00    	jb     fdef <dlrealloc+0x47f>
    fcee:	4c 8b 05 0b b1 01 00 	mov    0x1b10b(%rip),%r8        # 2ae00 <mparams>
    fcf5:	49 89 d1             	mov    %rdx,%r9
    fcf8:	49 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%rdi
    fcfd:	83 e6 01             	and    $0x1,%esi
    fd00:	49 29 c1             	sub    %rax,%r9
    fd03:	4d 31 e0             	xor    %r12,%r8
    fd06:	49 83 f9 1f          	cmp    $0x1f,%r9
    fd0a:	0f 86 b3 01 00 00    	jbe    fec3 <dlrealloc+0x553>
    fd10:	49 8d 54 05 00       	lea    0x0(%r13,%rax,1),%rdx
    fd15:	48 09 c6             	or     %rax,%rsi
    fd18:	4c 89 c8             	mov    %r9,%rax
    fd1b:	48 83 ce 02          	or     $0x2,%rsi
    fd1f:	48 83 c8 01          	or     $0x1,%rax
    fd23:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fd27:	4c 89 02             	mov    %r8,(%rdx)
    fd2a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    fd2e:	4c 89 0f             	mov    %r9,(%rdi)
    fd31:	48 83 67 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdi)
    fd36:	4d 89 4c 24 08       	mov    %r9,0x8(%r12)
    fd3b:	49 89 54 24 20       	mov    %rdx,0x20(%r12)
    fd40:	e9 11 fd ff ff       	jmp    fa56 <dlrealloc+0xe6>
    fd45:	0f 1f 00             	nopl   (%rax)
    fd48:	83 e6 01             	and    $0x1,%esi
    fd4b:	4d 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%r15
    fd50:	48 83 ca 03          	or     $0x3,%rdx
    fd54:	48 09 c6             	or     %rax,%rsi
    fd57:	48 8b 05 a2 b0 01 00 	mov    0x1b0a2(%rip),%rax        # 2ae00 <mparams>
    fd5e:	48 83 ce 02          	or     $0x2,%rsi
    fd62:	4c 31 e0             	xor    %r12,%rax
    fd65:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fd69:	31 f6                	xor    %esi,%esi
    fd6b:	49 89 57 08          	mov    %rdx,0x8(%r15)
    fd6f:	49 8d 56 f0          	lea    -0x10(%r14),%rdx
    fd73:	49 89 07             	mov    %rax,(%r15)
    fd76:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fd7b:	48 89 07             	mov    %rax,(%rdi)
    fd7e:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    fd82:	e8 69 0a 00 00       	call   107f0 <memset>
    fd87:	4c 89 f2             	mov    %r14,%rdx
    fd8a:	4c 89 fe             	mov    %r15,%rsi
    fd8d:	4c 89 e7             	mov    %r12,%rdi
    fd90:	e8 5b c9 ff ff       	call   c6f0 <dispose_chunk>
    fd95:	e9 b4 fc ff ff       	jmp    fa4e <dlrealloc+0xde>
    fd9a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    fda0:	49 03 54 24 10       	add    0x10(%r12),%rdx
    fda5:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    fdac:	00 
    fdad:	48 39 d0             	cmp    %rdx,%rax
    fdb0:	73 3d                	jae    fdef <dlrealloc+0x47f>
    fdb2:	83 e6 01             	and    $0x1,%esi
    fdb5:	49 8d 7c 05 00       	lea    0x0(%r13,%rax,1),%rdi
    fdba:	48 29 c2             	sub    %rax,%rdx
    fdbd:	48 09 c6             	or     %rax,%rsi
    fdc0:	48 8b 05 39 b0 01 00 	mov    0x1b039(%rip),%rax        # 2ae00 <mparams>
    fdc7:	48 83 ce 02          	or     $0x2,%rsi
    fdcb:	4c 31 e0             	xor    %r12,%rax
    fdce:	48 89 75 f8          	mov    %rsi,-0x8(%rbp)
    fdd2:	48 89 07             	mov    %rax,(%rdi)
    fdd5:	48 89 d0             	mov    %rdx,%rax
    fdd8:	48 83 c8 01          	or     $0x1,%rax
    fddc:	48 89 47 08          	mov    %rax,0x8(%rdi)
    fde0:	49 89 7c 24 28       	mov    %rdi,0x28(%r12)
    fde5:	49 89 54 24 10       	mov    %rdx,0x10(%r12)
    fdea:	e9 67 fc ff ff       	jmp    fa56 <dlrealloc+0xe6>
    fdef:	83 e1 02             	and    $0x2,%ecx
    fdf2:	0f 84 04 fd ff ff    	je     fafc <dlrealloc+0x18c>
    fdf8:	e9 c3 fe ff ff       	jmp    fcc0 <dlrealloc+0x350>
    fdfd:	4c 8b 5f 18          	mov    0x18(%rdi),%r11
    fe01:	4c 8b 7f 30          	mov    0x30(%rdi),%r15
    fe05:	49 39 fb             	cmp    %rdi,%r11
    fe08:	0f 84 1d 01 00 00    	je     ff2b <dlrealloc+0x5bb>
    fe0e:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    fe12:	4c 39 c1             	cmp    %r8,%rcx
    fe15:	0f 82 5d fd ff ff    	jb     fb78 <dlrealloc+0x208>
    fe1b:	48 39 79 18          	cmp    %rdi,0x18(%rcx)
    fe1f:	0f 85 53 fd ff ff    	jne    fb78 <dlrealloc+0x208>
    fe25:	49 39 7b 10          	cmp    %rdi,0x10(%r11)
    fe29:	0f 85 49 fd ff ff    	jne    fb78 <dlrealloc+0x208>
    fe2f:	4c 89 59 18          	mov    %r11,0x18(%rcx)
    fe33:	49 89 4b 10          	mov    %rcx,0x10(%r11)
    fe37:	4d 85 ff             	test   %r15,%r15
    fe3a:	0f 84 09 fe ff ff    	je     fc49 <dlrealloc+0x2d9>
    fe40:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
    fe44:	4c 89 c9             	mov    %r9,%rcx
    fe47:	4d 8d 71 4a          	lea    0x4a(%r9),%r14
    fe4b:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
    fe52:	00 
    fe53:	0f 84 61 01 00 00    	je     ffba <dlrealloc+0x64a>
    fe59:	4d 39 c7             	cmp    %r8,%r15
    fe5c:	0f 82 16 fd ff ff    	jb     fb78 <dlrealloc+0x208>
    fe62:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    fe66:	0f 84 a5 01 00 00    	je     10011 <dlrealloc+0x6a1>
    fe6c:	4d 89 5f 28          	mov    %r11,0x28(%r15)
    fe70:	4d 85 db             	test   %r11,%r11
    fe73:	0f 84 d0 fd ff ff    	je     fc49 <dlrealloc+0x2d9>
    fe79:	4d 39 c3             	cmp    %r8,%r11
    fe7c:	0f 82 f6 fc ff ff    	jb     fb78 <dlrealloc+0x208>
    fe82:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    fe86:	4d 89 7b 30          	mov    %r15,0x30(%r11)
    fe8a:	48 85 c9             	test   %rcx,%rcx
    fe8d:	74 11                	je     fea0 <dlrealloc+0x530>
    fe8f:	4c 39 c1             	cmp    %r8,%rcx
    fe92:	0f 82 e0 fc ff ff    	jb     fb78 <dlrealloc+0x208>
    fe98:	49 89 4b 20          	mov    %rcx,0x20(%r11)
    fe9c:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    fea0:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    fea4:	48 85 c9             	test   %rcx,%rcx
    fea7:	0f 84 9c fd ff ff    	je     fc49 <dlrealloc+0x2d9>
    fead:	4c 39 c1             	cmp    %r8,%rcx
    feb0:	0f 82 c2 fc ff ff    	jb     fb78 <dlrealloc+0x208>
    feb6:	49 89 4b 28          	mov    %rcx,0x28(%r11)
    feba:	4c 89 59 30          	mov    %r11,0x30(%rcx)
    febe:	e9 86 fd ff ff       	jmp    fc49 <dlrealloc+0x2d9>
    fec3:	48 09 f2             	or     %rsi,%rdx
    fec6:	48 83 ca 02          	or     $0x2,%rdx
    feca:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    fece:	4c 89 07             	mov    %r8,(%rdi)
    fed1:	48 83 4f 08 01       	orq    $0x1,0x8(%rdi)
    fed6:	49 c7 44 24 08 00 00 	movq   $0x0,0x8(%r12)
    fedd:	00 00 
    fedf:	49 c7 44 24 20 00 00 	movq   $0x0,0x20(%r12)
    fee6:	00 00 
    fee8:	e9 69 fb ff ff       	jmp    fa56 <dlrealloc+0xe6>
    feed:	4d 8d 44 05 00       	lea    0x0(%r13,%rax,1),%r8
    fef2:	48 09 f0             	or     %rsi,%rax
    fef5:	48 83 c8 02          	or     $0x2,%rax
    fef9:	4c 89 c6             	mov    %r8,%rsi
    fefc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ff00:	48 89 d0             	mov    %rdx,%rax
    ff03:	48 83 c8 03          	or     $0x3,%rax
    ff07:	49 89 38             	mov    %rdi,(%r8)
    ff0a:	49 89 40 08          	mov    %rax,0x8(%r8)
    ff0e:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    ff13:	48 89 39             	mov    %rdi,(%rcx)
    ff16:	4c 89 e7             	mov    %r12,%rdi
    ff19:	e8 d2 c7 ff ff       	call   c6f0 <dispose_chunk>
    ff1e:	41 8b 8c 24 70 03 00 	mov    0x370(%r12),%ecx
    ff25:	00 
    ff26:	e9 2b fb ff ff       	jmp    fa56 <dlrealloc+0xe6>
    ff2b:	48 8b 4f 28          	mov    0x28(%rdi),%rcx
    ff2f:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
    ff33:	48 85 c9             	test   %rcx,%rcx
    ff36:	0f 84 9d 00 00 00    	je     ffd9 <dlrealloc+0x669>
    ff3c:	0f 1f 40 00          	nopl   0x0(%rax)
    ff40:	4d 89 ce             	mov    %r9,%r14
    ff43:	49 89 cb             	mov    %rcx,%r11
    ff46:	4c 8d 49 28          	lea    0x28(%rcx),%r9
    ff4a:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    ff4e:	48 85 c9             	test   %rcx,%rcx
    ff51:	75 ed                	jne    ff40 <dlrealloc+0x5d0>
    ff53:	49 8b 4b 20          	mov    0x20(%r11),%rcx
    ff57:	4d 8d 4b 20          	lea    0x20(%r11),%r9
    ff5b:	48 85 c9             	test   %rcx,%rcx
    ff5e:	75 e0                	jne    ff40 <dlrealloc+0x5d0>
    ff60:	4d 39 c6             	cmp    %r8,%r14
    ff63:	0f 82 0f fc ff ff    	jb     fb78 <dlrealloc+0x208>
    ff69:	49 c7 06 00 00 00 00 	movq   $0x0,(%r14)
    ff70:	4d 85 ff             	test   %r15,%r15
    ff73:	0f 84 d0 fc ff ff    	je     fc49 <dlrealloc+0x2d9>
    ff79:	8b 4f 38             	mov    0x38(%rdi),%ecx
    ff7c:	4c 8d 49 4a          	lea    0x4a(%rcx),%r9
    ff80:	49 3b bc cc 58 02 00 	cmp    0x258(%r12,%rcx,8),%rdi
    ff87:	00 
    ff88:	0f 84 8c 00 00 00    	je     1001a <dlrealloc+0x6aa>
    ff8e:	4d 39 c7             	cmp    %r8,%r15
    ff91:	0f 82 e1 fb ff ff    	jb     fb78 <dlrealloc+0x208>
    ff97:	49 3b 7f 20          	cmp    0x20(%r15),%rdi
    ff9b:	0f 84 bb 00 00 00    	je     1005c <dlrealloc+0x6ec>
    ffa1:	4d 89 5f 28          	mov    %r11,0x28(%r15)
    ffa5:	e9 cf fe ff ff       	jmp    fe79 <dlrealloc+0x509>
    ffaa:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    ffaf:	d3 c7                	rol    %cl,%edi
    ffb1:	41 21 3c 24          	and    %edi,(%r12)
    ffb5:	e9 8f fc ff ff       	jmp    fc49 <dlrealloc+0x2d9>
    ffba:	4f 89 5c f4 08       	mov    %r11,0x8(%r12,%r14,8)
    ffbf:	4d 85 db             	test   %r11,%r11
    ffc2:	0f 85 b1 fe ff ff    	jne    fe79 <dlrealloc+0x509>
    ffc8:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    ffcd:	d3 c7                	rol    %cl,%edi
    ffcf:	41 21 7c 24 04       	and    %edi,0x4(%r12)
    ffd4:	e9 70 fc ff ff       	jmp    fc49 <dlrealloc+0x2d9>
    ffd9:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    ffdd:	48 85 c9             	test   %rcx,%rcx
    ffe0:	74 42                	je     10024 <dlrealloc+0x6b4>
    ffe2:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    ffe6:	e9 55 ff ff ff       	jmp    ff40 <dlrealloc+0x5d0>
    ffeb:	4d 39 c1             	cmp    %r8,%r9
    ffee:	0f 82 84 fb ff ff    	jb     fb78 <dlrealloc+0x208>
    fff4:	49 39 79 18          	cmp    %rdi,0x18(%r9)
    fff8:	0f 85 7a fb ff ff    	jne    fb78 <dlrealloc+0x208>
    fffe:	4d 39 d9             	cmp    %r11,%r9
   10001:	74 a7                	je     ffaa <dlrealloc+0x63a>
   10003:	4d 39 f3             	cmp    %r14,%r11
   10006:	0f 84 35 fc ff ff    	je     fc41 <dlrealloc+0x2d1>
   1000c:	e9 1d fc ff ff       	jmp    fc2e <dlrealloc+0x2be>
   10011:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10015:	e9 56 fe ff ff       	jmp    fe70 <dlrealloc+0x500>
   1001a:	4f 89 5c cc 08       	mov    %r11,0x8(%r12,%r9,8)
   1001f:	e9 55 fe ff ff       	jmp    fe79 <dlrealloc+0x509>
   10024:	4d 85 ff             	test   %r15,%r15
   10027:	0f 84 1c fc ff ff    	je     fc49 <dlrealloc+0x2d9>
   1002d:	44 8b 4f 38          	mov    0x38(%rdi),%r9d
   10031:	4c 89 c9             	mov    %r9,%rcx
   10034:	4d 8d 59 4a          	lea    0x4a(%r9),%r11
   10038:	4b 3b bc cc 58 02 00 	cmp    0x258(%r12,%r9,8),%rdi
   1003f:	00 
   10040:	74 2e                	je     10070 <dlrealloc+0x700>
   10042:	4d 39 c7             	cmp    %r8,%r15
   10045:	0f 82 2d fb ff ff    	jb     fb78 <dlrealloc+0x208>
   1004b:	49 39 7f 20          	cmp    %rdi,0x20(%r15)
   1004f:	74 14                	je     10065 <dlrealloc+0x6f5>
   10051:	31 c9                	xor    %ecx,%ecx
   10053:	49 89 4f 28          	mov    %rcx,0x28(%r15)
   10057:	e9 ed fb ff ff       	jmp    fc49 <dlrealloc+0x2d9>
   1005c:	4d 89 5f 20          	mov    %r11,0x20(%r15)
   10060:	e9 14 fe ff ff       	jmp    fe79 <dlrealloc+0x509>
   10065:	31 ff                	xor    %edi,%edi
   10067:	49 89 7f 20          	mov    %rdi,0x20(%r15)
   1006b:	e9 d9 fb ff ff       	jmp    fc49 <dlrealloc+0x2d9>
   10070:	45 31 c0             	xor    %r8d,%r8d
   10073:	4f 89 44 dc 08       	mov    %r8,0x8(%r12,%r11,8)
   10078:	e9 4b ff ff ff       	jmp    ffc8 <dlrealloc+0x658>
   1007d:	0f 1f 00             	nopl   (%rax)

0000000000010080 <dlmemalign>:
   10080:	f3 0f 1e fa          	endbr64 
   10084:	48 83 ff 10          	cmp    $0x10,%rdi
   10088:	76 06                	jbe    10090 <dlmemalign+0x10>
   1008a:	e9 d1 ea ff ff       	jmp    eb60 <internal_memalign.constprop.0>
   1008f:	90                   	nop
   10090:	48 89 f7             	mov    %rsi,%rdi
   10093:	e9 78 cf ff ff       	jmp    d010 <dlmalloc>
   10098:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1009f:	00 

00000000000100a0 <dlposix_memalign>:
   100a0:	f3 0f 1e fa          	endbr64 
   100a4:	53                   	push   %rbx
   100a5:	48 89 fb             	mov    %rdi,%rbx
   100a8:	48 89 f7             	mov    %rsi,%rdi
   100ab:	48 89 d6             	mov    %rdx,%rsi
   100ae:	48 83 ff 10          	cmp    $0x10,%rdi
   100b2:	74 6c                	je     10120 <dlposix_memalign+0x80>
   100b4:	48 89 f9             	mov    %rdi,%rcx
   100b7:	49 89 f8             	mov    %rdi,%r8
   100ba:	ba 16 00 00 00       	mov    $0x16,%edx
   100bf:	48 c1 e9 03          	shr    $0x3,%rcx
   100c3:	41 83 e0 07          	and    $0x7,%r8d
   100c7:	48 83 ff 07          	cmp    $0x7,%rdi
   100cb:	76 36                	jbe    10103 <dlposix_memalign+0x63>
   100cd:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   100d1:	48 21 c8             	and    %rcx,%rax
   100d4:	4c 09 c0             	or     %r8,%rax
   100d7:	75 2a                	jne    10103 <dlposix_memalign+0x63>
   100d9:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
   100e0:	48 29 f8             	sub    %rdi,%rax
   100e3:	48 39 f0             	cmp    %rsi,%rax
   100e6:	72 28                	jb     10110 <dlposix_memalign+0x70>
   100e8:	b8 20 00 00 00       	mov    $0x20,%eax
   100ed:	48 39 c7             	cmp    %rax,%rdi
   100f0:	48 0f 42 f8          	cmovb  %rax,%rdi
   100f4:	e8 67 ea ff ff       	call   eb60 <internal_memalign.constprop.0>
   100f9:	48 85 c0             	test   %rax,%rax
   100fc:	74 12                	je     10110 <dlposix_memalign+0x70>
   100fe:	48 89 03             	mov    %rax,(%rbx)
   10101:	31 d2                	xor    %edx,%edx
   10103:	89 d0                	mov    %edx,%eax
   10105:	5b                   	pop    %rbx
   10106:	c3                   	ret    
   10107:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1010e:	00 00 
   10110:	ba 0c 00 00 00       	mov    $0xc,%edx
   10115:	5b                   	pop    %rbx
   10116:	89 d0                	mov    %edx,%eax
   10118:	c3                   	ret    
   10119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10120:	48 89 d7             	mov    %rdx,%rdi
   10123:	e8 e8 ce ff ff       	call   d010 <dlmalloc>
   10128:	eb cf                	jmp    100f9 <dlposix_memalign+0x59>
   1012a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010130 <dlmallinfo>:
   10130:	f3 0f 1e fa          	endbr64 
   10134:	41 55                	push   %r13
   10136:	41 54                	push   %r12
   10138:	55                   	push   %rbp
   10139:	53                   	push   %rbx
   1013a:	48 89 fb             	mov    %rdi,%rbx
   1013d:	48 83 ec 08          	sub    $0x8,%rsp
   10141:	48 83 3d b7 ac 01 00 	cmpq   $0x0,0x1acb7(%rip)        # 2ae00 <mparams>
   10148:	00 
   10149:	0f 84 89 01 00 00    	je     102d8 <dlmallinfo+0x1a8>
   1014f:	44 8b 1d 5a ac 01 00 	mov    0x1ac5a(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10156:	41 83 e3 02          	and    $0x2,%r11d
   1015a:	0f 85 16 01 00 00    	jne    10276 <dlmallinfo+0x146>
   10160:	48 8b 3d 01 a9 01 00 	mov    0x1a901(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10167:	48 85 ff             	test   %rdi,%rdi
   1016a:	0f 84 f4 00 00 00    	je     10264 <dlmallinfo+0x134>
   10170:	48 8b 2d d9 a8 01 00 	mov    0x1a8d9(%rip),%rbp        # 2aa50 <_gm_+0x10>
   10177:	41 b9 01 00 00 00    	mov    $0x1,%r9d
   1017d:	4c 8d 15 34 ac 01 00 	lea    0x1ac34(%rip),%r10        # 2adb8 <_gm_+0x378>
   10184:	4c 8d 45 50          	lea    0x50(%rbp),%r8
   10188:	4c 89 c1             	mov    %r8,%rcx
   1018b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10190:	49 8b 32             	mov    (%r10),%rsi
   10193:	48 8d 46 10          	lea    0x10(%rsi),%rax
   10197:	40 f6 c6 0f          	test   $0xf,%sil
   1019b:	0f 84 af 00 00 00    	je     10250 <dlmallinfo+0x120>
   101a1:	48 f7 d8             	neg    %rax
   101a4:	83 e0 0f             	and    $0xf,%eax
   101a7:	48 01 f0             	add    %rsi,%rax
   101aa:	72 4a                	jb     101f6 <dlmallinfo+0xc6>
   101ac:	4d 8b 6a 08          	mov    0x8(%r10),%r13
   101b0:	49 01 f5             	add    %rsi,%r13
   101b3:	4c 39 e8             	cmp    %r13,%rax
   101b6:	72 39                	jb     101f1 <dlmallinfo+0xc1>
   101b8:	eb 3c                	jmp    101f6 <dlmallinfo+0xc6>
   101ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   101c0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   101c4:	48 83 fa 0b          	cmp    $0xb,%rdx
   101c8:	74 2c                	je     101f6 <dlmallinfo+0xc6>
   101ca:	49 89 d4             	mov    %rdx,%r12
   101cd:	83 e2 03             	and    $0x3,%edx
   101d0:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
   101d4:	4c 01 e1             	add    %r12,%rcx
   101d7:	48 83 fa 01          	cmp    $0x1,%rdx
   101db:	75 07                	jne    101e4 <dlmallinfo+0xb4>
   101dd:	4d 01 e0             	add    %r12,%r8
   101e0:	49 83 c1 01          	add    $0x1,%r9
   101e4:	4c 01 e0             	add    %r12,%rax
   101e7:	48 39 f0             	cmp    %rsi,%rax
   101ea:	72 0a                	jb     101f6 <dlmallinfo+0xc6>
   101ec:	4c 39 e8             	cmp    %r13,%rax
   101ef:	73 05                	jae    101f6 <dlmallinfo+0xc6>
   101f1:	48 39 f8             	cmp    %rdi,%rax
   101f4:	75 ca                	jne    101c0 <dlmallinfo+0x90>
   101f6:	4d 8b 52 10          	mov    0x10(%r10),%r10
   101fa:	4d 85 d2             	test   %r10,%r10
   101fd:	75 91                	jne    10190 <dlmallinfo+0x60>
   101ff:	48 8b 05 92 ab 01 00 	mov    0x1ab92(%rip),%rax        # 2ad98 <_gm_+0x358>
   10206:	89 ca                	mov    %ecx,%edx
   10208:	89 c6                	mov    %eax,%esi
   1020a:	44 29 c0             	sub    %r8d,%eax
   1020d:	29 ce                	sub    %ecx,%esi
   1020f:	8b 0d 8b ab 01 00    	mov    0x1ab8b(%rip),%ecx        # 2ada0 <_gm_+0x360>
   10215:	45 85 db             	test   %r11d,%r11d
   10218:	75 3e                	jne    10258 <dlmallinfo+0x128>
   1021a:	89 43 1c             	mov    %eax,0x1c(%rbx)
   1021d:	48 89 d8             	mov    %rbx,%rax
   10220:	89 13                	mov    %edx,(%rbx)
   10222:	44 89 4b 04          	mov    %r9d,0x4(%rbx)
   10226:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
   1022d:	00 
   1022e:	89 73 10             	mov    %esi,0x10(%rbx)
   10231:	89 4b 14             	mov    %ecx,0x14(%rbx)
   10234:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%rbx)
   1023b:	44 89 43 20          	mov    %r8d,0x20(%rbx)
   1023f:	89 6b 24             	mov    %ebp,0x24(%rbx)
   10242:	48 83 c4 08          	add    $0x8,%rsp
   10246:	5b                   	pop    %rbx
   10247:	5d                   	pop    %rbp
   10248:	41 5c                	pop    %r12
   1024a:	41 5d                	pop    %r13
   1024c:	c3                   	ret    
   1024d:	0f 1f 00             	nopl   (%rax)
   10250:	48 89 f0             	mov    %rsi,%rax
   10253:	e9 54 ff ff ff       	jmp    101ac <dlmallinfo+0x7c>
   10258:	c7 05 52 ab 01 00 00 	movl   $0x0,0x1ab52(%rip)        # 2adb4 <_gm_+0x374>
   1025f:	00 00 00 
   10262:	eb b6                	jmp    1021a <dlmallinfo+0xea>
   10264:	31 ed                	xor    %ebp,%ebp
   10266:	45 31 c0             	xor    %r8d,%r8d
   10269:	31 c0                	xor    %eax,%eax
   1026b:	31 c9                	xor    %ecx,%ecx
   1026d:	31 f6                	xor    %esi,%esi
   1026f:	45 31 c9             	xor    %r9d,%r9d
   10272:	31 d2                	xor    %edx,%edx
   10274:	eb a4                	jmp    1021a <dlmallinfo+0xea>
   10276:	b8 01 00 00 00       	mov    $0x1,%eax
   1027b:	87 05 33 ab 01 00    	xchg   %eax,0x1ab33(%rip)        # 2adb4 <_gm_+0x374>
   10281:	ba 01 00 00 00       	mov    $0x1,%edx
   10286:	85 c0                	test   %eax,%eax
   10288:	75 36                	jne    102c0 <dlmallinfo+0x190>
   1028a:	44 8b 1d 1f ab 01 00 	mov    0x1ab1f(%rip),%r11d        # 2adb0 <_gm_+0x370>
   10291:	48 8b 3d d0 a7 01 00 	mov    0x1a7d0(%rip),%rdi        # 2aa68 <_gm_+0x28>
   10298:	41 83 e3 02          	and    $0x2,%r11d
   1029c:	48 85 ff             	test   %rdi,%rdi
   1029f:	0f 85 cb fe ff ff    	jne    10170 <dlmallinfo+0x40>
   102a5:	31 ed                	xor    %ebp,%ebp
   102a7:	45 31 c0             	xor    %r8d,%r8d
   102aa:	31 c0                	xor    %eax,%eax
   102ac:	31 c9                	xor    %ecx,%ecx
   102ae:	31 f6                	xor    %esi,%esi
   102b0:	45 31 c9             	xor    %r9d,%r9d
   102b3:	31 d2                	xor    %edx,%edx
   102b5:	e9 5b ff ff ff       	jmp    10215 <dlmallinfo+0xe5>
   102ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   102c0:	8b 05 ee aa 01 00    	mov    0x1aaee(%rip),%eax        # 2adb4 <_gm_+0x374>
   102c6:	85 c0                	test   %eax,%eax
   102c8:	75 f6                	jne    102c0 <dlmallinfo+0x190>
   102ca:	89 d0                	mov    %edx,%eax
   102cc:	87 05 e2 aa 01 00    	xchg   %eax,0x1aae2(%rip)        # 2adb4 <_gm_+0x374>
   102d2:	85 c0                	test   %eax,%eax
   102d4:	75 ea                	jne    102c0 <dlmallinfo+0x190>
   102d6:	eb b2                	jmp    1028a <dlmallinfo+0x15a>
   102d8:	e8 43 cc ff ff       	call   cf20 <init_mparams.isra.0>
   102dd:	e9 6d fe ff ff       	jmp    1014f <dlmallinfo+0x1f>
   102e2:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   102e9:	00 00 00 
   102ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000102f0 <__memcpy.part.0>:
   102f0:	48 89 f0             	mov    %rsi,%rax
   102f3:	48 89 f1             	mov    %rsi,%rcx
   102f6:	48 09 f8             	or     %rdi,%rax
   102f9:	a8 07                	test   $0x7,%al
   102fb:	74 43                	je     10340 <__memcpy.part.0+0x50>
   102fd:	48 89 f0             	mov    %rsi,%rax
   10300:	48 31 f8             	xor    %rdi,%rax
   10303:	a8 07                	test   $0x7,%al
   10305:	75 0a                	jne    10311 <__memcpy.part.0+0x21>
   10307:	48 83 fa 07          	cmp    $0x7,%rdx
   1030b:	0f 87 87 00 00 00    	ja     10398 <__memcpy.part.0+0xa8>
   10311:	45 31 c9             	xor    %r9d,%r9d
   10314:	45 31 c0             	xor    %r8d,%r8d
   10317:	45 31 d2             	xor    %r10d,%r10d
   1031a:	31 c0                	xor    %eax,%eax
   1031c:	0f 1f 40 00          	nopl   0x0(%rax)
   10320:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
   10324:	40 88 34 07          	mov    %sil,(%rdi,%rax,1)
   10328:	48 83 c0 01          	add    $0x1,%rax
   1032c:	48 39 c2             	cmp    %rax,%rdx
   1032f:	75 ef                	jne    10320 <__memcpy.part.0+0x30>
   10331:	48 01 d1             	add    %rdx,%rcx
   10334:	48 01 d7             	add    %rdx,%rdi
   10337:	4c 89 d2             	mov    %r10,%rdx
   1033a:	eb 12                	jmp    1034e <__memcpy.part.0+0x5e>
   1033c:	0f 1f 40 00          	nopl   0x0(%rax)
   10340:	49 89 d0             	mov    %rdx,%r8
   10343:	49 89 d1             	mov    %rdx,%r9
   10346:	49 c1 e8 03          	shr    $0x3,%r8
   1034a:	41 83 e1 07          	and    $0x7,%r9d
   1034e:	48 83 fa 07          	cmp    $0x7,%rdx
   10352:	76 23                	jbe    10377 <__memcpy.part.0+0x87>
   10354:	4a 8d 34 c5 00 00 00 	lea    0x0(,%r8,8),%rsi
   1035b:	00 
   1035c:	31 c0                	xor    %eax,%eax
   1035e:	66 90                	xchg   %ax,%ax
   10360:	48 8b 14 01          	mov    (%rcx,%rax,1),%rdx
   10364:	48 89 14 07          	mov    %rdx,(%rdi,%rax,1)
   10368:	48 83 c0 08          	add    $0x8,%rax
   1036c:	48 39 f0             	cmp    %rsi,%rax
   1036f:	75 ef                	jne    10360 <__memcpy.part.0+0x70>
   10371:	48 01 c1             	add    %rax,%rcx
   10374:	48 01 c7             	add    %rax,%rdi
   10377:	4d 85 c9             	test   %r9,%r9
   1037a:	74 14                	je     10390 <__memcpy.part.0+0xa0>
   1037c:	31 c0                	xor    %eax,%eax
   1037e:	66 90                	xchg   %ax,%ax
   10380:	0f b6 14 01          	movzbl (%rcx,%rax,1),%edx
   10384:	88 14 07             	mov    %dl,(%rdi,%rax,1)
   10387:	48 83 c0 01          	add    $0x1,%rax
   1038b:	49 39 c1             	cmp    %rax,%r9
   1038e:	75 f0                	jne    10380 <__memcpy.part.0+0x90>
   10390:	c3                   	ret    
   10391:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10398:	48 89 f0             	mov    %rsi,%rax
   1039b:	83 e0 07             	and    $0x7,%eax
   1039e:	4c 8d 54 10 f8       	lea    -0x8(%rax,%rdx,1),%r10
   103a3:	ba 08 00 00 00       	mov    $0x8,%edx
   103a8:	4d 89 d0             	mov    %r10,%r8
   103ab:	4d 89 d1             	mov    %r10,%r9
   103ae:	48 29 c2             	sub    %rax,%rdx
   103b1:	49 c1 e8 03          	shr    $0x3,%r8
   103b5:	41 83 e1 07          	and    $0x7,%r9d
   103b9:	e9 5c ff ff ff       	jmp    1031a <__memcpy.part.0+0x2a>
   103be:	66 90                	xchg   %ax,%ax

00000000000103c0 <__memcpy>:
   103c0:	f3 0f 1e fa          	endbr64 
   103c4:	49 89 fb             	mov    %rdi,%r11
   103c7:	48 85 d2             	test   %rdx,%rdx
   103ca:	74 0a                	je     103d6 <__memcpy+0x16>
   103cc:	48 39 f7             	cmp    %rsi,%rdi
   103cf:	74 05                	je     103d6 <__memcpy+0x16>
   103d1:	e8 1a ff ff ff       	call   102f0 <__memcpy.part.0>
   103d6:	4c 89 d8             	mov    %r11,%rax
   103d9:	c3                   	ret    
   103da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000103e0 <memcpy_verw>:
   103e0:	f3 0f 1e fa          	endbr64 
   103e4:	41 56                	push   %r14
   103e6:	41 55                	push   %r13
   103e8:	49 89 fd             	mov    %rdi,%r13
   103eb:	41 54                	push   %r12
   103ed:	55                   	push   %rbp
   103ee:	53                   	push   %rbx
   103ef:	48 85 d2             	test   %rdx,%rdx
   103f2:	0f 84 8f 00 00 00    	je     10487 <memcpy_verw+0xa7>
   103f8:	48 89 f3             	mov    %rsi,%rbx
   103fb:	48 39 f7             	cmp    %rsi,%rdi
   103fe:	0f 84 83 00 00 00    	je     10487 <memcpy_verw+0xa7>
   10404:	49 89 d4             	mov    %rdx,%r12
   10407:	48 89 fd             	mov    %rdi,%rbp
   1040a:	48 83 fa 07          	cmp    $0x7,%rdx
   1040e:	77 25                	ja     10435 <memcpy_verw+0x55>
   10410:	eb 5b                	jmp    1046d <memcpy_verw+0x8d>
   10412:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10418:	48 89 de             	mov    %rbx,%rsi
   1041b:	48 89 ef             	mov    %rbp,%rdi
   1041e:	49 83 ec 01          	sub    $0x1,%r12
   10422:	48 83 c3 01          	add    $0x1,%rbx
   10426:	e8 75 09 00 00       	call   10da0 <__memcpy_verw>
   1042b:	48 83 c5 01          	add    $0x1,%rbp
   1042f:	49 83 fc 07          	cmp    $0x7,%r12
   10433:	76 33                	jbe    10468 <memcpy_verw+0x88>
   10435:	48 89 e8             	mov    %rbp,%rax
   10438:	48 09 d8             	or     %rbx,%rax
   1043b:	a8 07                	test   $0x7,%al
   1043d:	75 d9                	jne    10418 <memcpy_verw+0x38>
   1043f:	4d 89 e3             	mov    %r12,%r11
   10442:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10446:	48 39 dd             	cmp    %rbx,%rbp
   10449:	74 0e                	je     10459 <memcpy_verw+0x79>
   1044b:	4c 89 da             	mov    %r11,%rdx
   1044e:	48 89 de             	mov    %rbx,%rsi
   10451:	48 89 ef             	mov    %rbp,%rdi
   10454:	e8 97 fe ff ff       	call   102f0 <__memcpy.part.0>
   10459:	4d 29 dc             	sub    %r11,%r12
   1045c:	4c 01 db             	add    %r11,%rbx
   1045f:	4c 01 dd             	add    %r11,%rbp
   10462:	49 83 fc 07          	cmp    $0x7,%r12
   10466:	77 cd                	ja     10435 <memcpy_verw+0x55>
   10468:	4d 85 e4             	test   %r12,%r12
   1046b:	74 1a                	je     10487 <memcpy_verw+0xa7>
   1046d:	45 31 f6             	xor    %r14d,%r14d
   10470:	4a 8d 34 33          	lea    (%rbx,%r14,1),%rsi
   10474:	4a 8d 7c 35 00       	lea    0x0(%rbp,%r14,1),%rdi
   10479:	49 83 c6 01          	add    $0x1,%r14
   1047d:	e8 1e 09 00 00       	call   10da0 <__memcpy_verw>
   10482:	4d 39 e6             	cmp    %r12,%r14
   10485:	72 e9                	jb     10470 <memcpy_verw+0x90>
   10487:	5b                   	pop    %rbx
   10488:	4c 89 e8             	mov    %r13,%rax
   1048b:	5d                   	pop    %rbp
   1048c:	41 5c                	pop    %r12
   1048e:	41 5d                	pop    %r13
   10490:	41 5e                	pop    %r14
   10492:	c3                   	ret    
   10493:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1049a:	00 00 00 
   1049d:	0f 1f 00             	nopl   (%rax)

00000000000104a0 <copy_external_memory>:
   104a0:	41 57                	push   %r15
   104a2:	66 0f ef c0          	pxor   %xmm0,%xmm0
   104a6:	41 56                	push   %r14
   104a8:	41 55                	push   %r13
   104aa:	41 54                	push   %r12
   104ac:	55                   	push   %rbp
   104ad:	53                   	push   %rbx
   104ae:	48 83 ec 38          	sub    $0x38,%rsp
   104b2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   104b9:	00 00 
   104bb:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
   104c0:	31 c0                	xor    %eax,%eax
   104c2:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
   104c7:	48 85 d2             	test   %rdx,%rdx
   104ca:	74 2d                	je     104f9 <copy_external_memory+0x59>
   104cc:	41 89 f6             	mov    %esi,%r14d
   104cf:	49 89 fd             	mov    %rdi,%r13
   104d2:	48 89 f3             	mov    %rsi,%rbx
   104d5:	41 89 cc             	mov    %ecx,%r12d
   104d8:	41 83 e6 07          	and    $0x7,%r14d
   104dc:	75 52                	jne    10530 <copy_external_memory+0x90>
   104de:	48 83 fa 08          	cmp    $0x8,%rdx
   104e2:	75 4c                	jne    10530 <copy_external_memory+0x90>
   104e4:	45 84 e4             	test   %r12b,%r12b
   104e7:	75 37                	jne    10520 <copy_external_memory+0x80>
   104e9:	4c 39 eb             	cmp    %r13,%rbx
   104ec:	74 0b                	je     104f9 <copy_external_memory+0x59>
   104ee:	48 89 de             	mov    %rbx,%rsi
   104f1:	4c 89 ef             	mov    %r13,%rdi
   104f4:	e8 f7 fd ff ff       	call   102f0 <__memcpy.part.0>
   104f9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
   104fe:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   10505:	00 00 
   10507:	75 7f                	jne    10588 <copy_external_memory+0xe8>
   10509:	48 83 c4 38          	add    $0x38,%rsp
   1050d:	5b                   	pop    %rbx
   1050e:	5d                   	pop    %rbp
   1050f:	41 5c                	pop    %r12
   10511:	41 5d                	pop    %r13
   10513:	41 5e                	pop    %r14
   10515:	41 5f                	pop    %r15
   10517:	c3                   	ret    
   10518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1051f:	00 
   10520:	48 89 de             	mov    %rbx,%rsi
   10523:	4c 89 ef             	mov    %r13,%rdi
   10526:	e8 b5 fe ff ff       	call   103e0 <memcpy_verw>
   1052b:	eb cc                	jmp    104f9 <copy_external_memory+0x59>
   1052d:	0f 1f 00             	nopl   (%rax)
   10530:	45 89 f7             	mov    %r14d,%r15d
   10533:	48 89 de             	mov    %rbx,%rsi
   10536:	48 8d 6c 24 10       	lea    0x10(%rsp),%rbp
   1053b:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
   10540:	4c 29 fe             	sub    %r15,%rsi
   10543:	48 89 ef             	mov    %rbp,%rdi
   10546:	e8 75 08 00 00       	call   10dc0 <__memcpy_8a>
   1054b:	45 85 f6             	test   %r14d,%r14d
   1054e:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10553:	74 0a                	je     1055f <copy_external_memory+0xbf>
   10555:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
   10559:	48 83 f8 08          	cmp    $0x8,%rax
   1055d:	77 11                	ja     10570 <copy_external_memory+0xd0>
   1055f:	4a 8d 5c 3d 00       	lea    0x0(%rbp,%r15,1),%rbx
   10564:	45 84 e4             	test   %r12b,%r12b
   10567:	74 80                	je     104e9 <copy_external_memory+0x49>
   10569:	eb b5                	jmp    10520 <copy_external_memory+0x80>
   1056b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10570:	4c 29 fb             	sub    %r15,%rbx
   10573:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
   10578:	48 8d 73 08          	lea    0x8(%rbx),%rsi
   1057c:	e8 3f 08 00 00       	call   10dc0 <__memcpy_8a>
   10581:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
   10586:	eb d7                	jmp    1055f <copy_external_memory+0xbf>
   10588:	e8 33 03 00 00       	call   108c0 <__stack_chk_fail>
   1058d:	0f 1f 00             	nopl   (%rax)

0000000000010590 <memcpy_nochecks>:
   10590:	f3 0f 1e fa          	endbr64 
   10594:	49 89 fb             	mov    %rdi,%r11
   10597:	48 85 d2             	test   %rdx,%rdx
   1059a:	74 0a                	je     105a6 <memcpy_nochecks+0x16>
   1059c:	48 39 f7             	cmp    %rsi,%rdi
   1059f:	74 05                	je     105a6 <memcpy_nochecks+0x16>
   105a1:	e8 4a fd ff ff       	call   102f0 <__memcpy.part.0>
   105a6:	4c 89 d8             	mov    %r11,%rax
   105a9:	c3                   	ret    
   105aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000105b0 <memcpy>:
   105b0:	f3 0f 1e fa          	endbr64 
   105b4:	41 57                	push   %r15
   105b6:	41 56                	push   %r14
   105b8:	41 55                	push   %r13
   105ba:	49 89 fd             	mov    %rdi,%r13
   105bd:	41 54                	push   %r12
   105bf:	55                   	push   %rbp
   105c0:	53                   	push   %rbx
   105c1:	48 83 ec 18          	sub    $0x18,%rsp
   105c5:	48 85 d2             	test   %rdx,%rdx
   105c8:	0f 84 d4 00 00 00    	je     106a2 <memcpy+0xf2>
   105ce:	48 89 f3             	mov    %rsi,%rbx
   105d1:	48 39 f7             	cmp    %rsi,%rdi
   105d4:	0f 84 c8 00 00 00    	je     106a2 <memcpy+0xf2>
   105da:	48 89 d6             	mov    %rdx,%rsi
   105dd:	48 89 df             	mov    %rbx,%rdi
   105e0:	48 89 d5             	mov    %rdx,%rbp
   105e3:	e8 58 54 ff ff       	call   5a40 <sgx_is_within_enclave>
   105e8:	48 89 ee             	mov    %rbp,%rsi
   105eb:	4c 89 ef             	mov    %r13,%rdi
   105ee:	41 89 c4             	mov    %eax,%r12d
   105f1:	e8 4a 54 ff ff       	call   5a40 <sgx_is_within_enclave>
   105f6:	45 85 e4             	test   %r12d,%r12d
   105f9:	0f 85 b9 00 00 00    	jne    106b8 <memcpy+0x108>
   105ff:	85 c0                	test   %eax,%eax
   10601:	4d 89 ec             	mov    %r13,%r12
   10604:	0f 94 c0             	sete   %al
   10607:	0f b6 c0             	movzbl %al,%eax
   1060a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
   1060e:	48 83 fd 07          	cmp    $0x7,%rbp
   10612:	77 38                	ja     1064c <memcpy+0x9c>
   10614:	eb 7a                	jmp    10690 <memcpy+0xe0>
   10616:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1061d:	00 00 00 
   10620:	41 be 08 00 00 00    	mov    $0x8,%r14d
   10626:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   1062a:	48 89 de             	mov    %rbx,%rsi
   1062d:	4c 89 e7             	mov    %r12,%rdi
   10630:	4d 29 fe             	sub    %r15,%r14
   10633:	49 8d 6c 2f f8       	lea    -0x8(%r15,%rbp,1),%rbp
   10638:	4c 89 f2             	mov    %r14,%rdx
   1063b:	4c 01 f3             	add    %r14,%rbx
   1063e:	4d 01 f4             	add    %r14,%r12
   10641:	e8 5a fe ff ff       	call   104a0 <copy_external_memory>
   10646:	48 83 fd 07          	cmp    $0x7,%rbp
   1064a:	76 44                	jbe    10690 <memcpy+0xe0>
   1064c:	48 89 d8             	mov    %rbx,%rax
   1064f:	4d 89 e7             	mov    %r12,%r15
   10652:	4c 09 e0             	or     %r12,%rax
   10655:	41 83 e7 07          	and    $0x7,%r15d
   10659:	a8 07                	test   $0x7,%al
   1065b:	75 c3                	jne    10620 <memcpy+0x70>
   1065d:	49 89 eb             	mov    %rbp,%r11
   10660:	49 83 e3 f8          	and    $0xfffffffffffffff8,%r11
   10664:	4c 39 e3             	cmp    %r12,%rbx
   10667:	74 0e                	je     10677 <memcpy+0xc7>
   10669:	4c 89 da             	mov    %r11,%rdx
   1066c:	48 89 de             	mov    %rbx,%rsi
   1066f:	4c 89 e7             	mov    %r12,%rdi
   10672:	e8 79 fc ff ff       	call   102f0 <__memcpy.part.0>
   10677:	4c 29 dd             	sub    %r11,%rbp
   1067a:	4c 01 db             	add    %r11,%rbx
   1067d:	4d 01 dc             	add    %r11,%r12
   10680:	48 83 fd 07          	cmp    $0x7,%rbp
   10684:	77 c6                	ja     1064c <memcpy+0x9c>
   10686:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1068d:	00 00 00 
   10690:	8b 4c 24 0c          	mov    0xc(%rsp),%ecx
   10694:	48 89 ea             	mov    %rbp,%rdx
   10697:	48 89 de             	mov    %rbx,%rsi
   1069a:	4c 89 e7             	mov    %r12,%rdi
   1069d:	e8 fe fd ff ff       	call   104a0 <copy_external_memory>
   106a2:	48 83 c4 18          	add    $0x18,%rsp
   106a6:	4c 89 e8             	mov    %r13,%rax
   106a9:	5b                   	pop    %rbx
   106aa:	5d                   	pop    %rbp
   106ab:	41 5c                	pop    %r12
   106ad:	41 5d                	pop    %r13
   106af:	41 5e                	pop    %r14
   106b1:	41 5f                	pop    %r15
   106b3:	c3                   	ret    
   106b4:	0f 1f 40 00          	nopl   0x0(%rax)
   106b8:	48 89 ea             	mov    %rbp,%rdx
   106bb:	48 89 de             	mov    %rbx,%rsi
   106be:	4c 89 ef             	mov    %r13,%rdi
   106c1:	85 c0                	test   %eax,%eax
   106c3:	75 1b                	jne    106e0 <memcpy+0x130>
   106c5:	48 83 c4 18          	add    $0x18,%rsp
   106c9:	5b                   	pop    %rbx
   106ca:	5d                   	pop    %rbp
   106cb:	41 5c                	pop    %r12
   106cd:	41 5d                	pop    %r13
   106cf:	41 5e                	pop    %r14
   106d1:	41 5f                	pop    %r15
   106d3:	e9 08 fd ff ff       	jmp    103e0 <memcpy_verw>
   106d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   106df:	00 
   106e0:	e8 0b fc ff ff       	call   102f0 <__memcpy.part.0>
   106e5:	eb bb                	jmp    106a2 <memcpy+0xf2>
   106e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   106ee:	00 00 

00000000000106f0 <memset_verw>:
   106f0:	f3 0f 1e fa          	endbr64 
   106f4:	41 56                	push   %r14
   106f6:	41 55                	push   %r13
   106f8:	41 54                	push   %r12
   106fa:	49 89 fc             	mov    %rdi,%r12
   106fd:	55                   	push   %rbp
   106fe:	53                   	push   %rbx
   106ff:	48 83 ec 20          	sub    $0x20,%rsp
   10703:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   1070a:	00 00 
   1070c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
   10711:	31 c0                	xor    %eax,%eax
   10713:	48 85 d2             	test   %rdx,%rdx
   10716:	0f 84 a0 00 00 00    	je     107bc <memset_verw+0xcc>
   1071c:	48 85 ff             	test   %rdi,%rdi
   1071f:	0f 84 97 00 00 00    	je     107bc <memset_verw+0xcc>
   10725:	4c 8d 6c 24 10       	lea    0x10(%rsp),%r13
   1072a:	48 89 d5             	mov    %rdx,%rbp
   1072d:	ba 08 00 00 00       	mov    $0x8,%edx
   10732:	4c 89 e3             	mov    %r12,%rbx
   10735:	4c 89 ef             	mov    %r13,%rdi
   10738:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
   1073d:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
   10744:	00 00 
   10746:	e8 85 06 00 00       	call   10dd0 <__memset>
   1074b:	48 83 fd 07          	cmp    $0x7,%rbp
   1074f:	76 4b                	jbe    1079c <memset_verw+0xac>
   10751:	4c 8d 74 24 0f       	lea    0xf(%rsp),%r14
   10756:	eb 21                	jmp    10779 <memset_verw+0x89>
   10758:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1075f:	00 
   10760:	48 89 df             	mov    %rbx,%rdi
   10763:	4c 89 ee             	mov    %r13,%rsi
   10766:	48 83 ed 08          	sub    $0x8,%rbp
   1076a:	48 83 c3 08          	add    $0x8,%rbx
   1076e:	e8 4d 06 00 00       	call   10dc0 <__memcpy_8a>
   10773:	48 83 fd 07          	cmp    $0x7,%rbp
   10777:	76 1e                	jbe    10797 <memset_verw+0xa7>
   10779:	f6 c3 07             	test   $0x7,%bl
   1077c:	74 e2                	je     10760 <memset_verw+0x70>
   1077e:	48 89 df             	mov    %rbx,%rdi
   10781:	4c 89 f6             	mov    %r14,%rsi
   10784:	48 83 ed 01          	sub    $0x1,%rbp
   10788:	48 83 c3 01          	add    $0x1,%rbx
   1078c:	e8 0f 06 00 00       	call   10da0 <__memcpy_verw>
   10791:	48 83 fd 07          	cmp    $0x7,%rbp
   10795:	77 e2                	ja     10779 <memset_verw+0x89>
   10797:	48 85 ed             	test   %rbp,%rbp
   1079a:	74 20                	je     107bc <memset_verw+0xcc>
   1079c:	48 01 dd             	add    %rbx,%rbp
   1079f:	4c 8d 6c 24 0f       	lea    0xf(%rsp),%r13
   107a4:	0f 1f 40 00          	nopl   0x0(%rax)
   107a8:	48 89 df             	mov    %rbx,%rdi
   107ab:	4c 89 ee             	mov    %r13,%rsi
   107ae:	48 83 c3 01          	add    $0x1,%rbx
   107b2:	e8 e9 05 00 00       	call   10da0 <__memcpy_verw>
   107b7:	48 39 eb             	cmp    %rbp,%rbx
   107ba:	75 ec                	jne    107a8 <memset_verw+0xb8>
   107bc:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
   107c1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
   107c8:	00 00 
   107ca:	75 10                	jne    107dc <memset_verw+0xec>
   107cc:	48 83 c4 20          	add    $0x20,%rsp
   107d0:	4c 89 e0             	mov    %r12,%rax
   107d3:	5b                   	pop    %rbx
   107d4:	5d                   	pop    %rbp
   107d5:	41 5c                	pop    %r12
   107d7:	41 5d                	pop    %r13
   107d9:	41 5e                	pop    %r14
   107db:	c3                   	ret    
   107dc:	e8 df 00 00 00       	call   108c0 <__stack_chk_fail>
   107e1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   107e8:	00 00 00 
   107eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000107f0 <memset>:
   107f0:	f3 0f 1e fa          	endbr64 
   107f4:	e9 d7 05 00 00       	jmp    10dd0 <__memset>
   107f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010800 <memset_s>:
   10800:	f3 0f 1e fa          	endbr64 
   10804:	53                   	push   %rbx
   10805:	48 85 ff             	test   %rdi,%rdi
   10808:	74 3e                	je     10848 <memset_s+0x48>
   1080a:	48 89 f0             	mov    %rsi,%rax
   1080d:	89 d6                	mov    %edx,%esi
   1080f:	48 39 c8             	cmp    %rcx,%rax
   10812:	73 1c                	jae    10830 <memset_s+0x30>
   10814:	48 8b 0d 3d 76 00 00 	mov    0x763d(%rip),%rcx        # 17e58 <__memset_vp>
   1081b:	48 89 c2             	mov    %rax,%rdx
   1081e:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   10823:	ff d1                	call   *%rcx
   10825:	e8 66 05 00 00       	call   10d90 <__errno_location>
   1082a:	89 18                	mov    %ebx,(%rax)
   1082c:	89 d8                	mov    %ebx,%eax
   1082e:	5b                   	pop    %rbx
   1082f:	c3                   	ret    
   10830:	31 db                	xor    %ebx,%ebx
   10832:	48 8b 05 1f 76 00 00 	mov    0x761f(%rip),%rax        # 17e58 <__memset_vp>
   10839:	48 89 ca             	mov    %rcx,%rdx
   1083c:	ff d0                	call   *%rax
   1083e:	89 d8                	mov    %ebx,%eax
   10840:	5b                   	pop    %rbx
   10841:	c3                   	ret    
   10842:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10848:	bb 16 00 00 00       	mov    $0x16,%ebx
   1084d:	eb d6                	jmp    10825 <memset_s+0x25>
   1084f:	90                   	nop

0000000000010850 <memset_verw_s>:
   10850:	f3 0f 1e fa          	endbr64 
   10854:	53                   	push   %rbx
   10855:	48 85 ff             	test   %rdi,%rdi
   10858:	74 36                	je     10890 <memset_verw_s+0x40>
   1085a:	48 89 f0             	mov    %rsi,%rax
   1085d:	89 d6                	mov    %edx,%esi
   1085f:	48 39 c8             	cmp    %rcx,%rax
   10862:	73 1c                	jae    10880 <memset_verw_s+0x30>
   10864:	48 89 c2             	mov    %rax,%rdx
   10867:	bb 4b 00 00 00       	mov    $0x4b,%ebx
   1086c:	e8 7f fe ff ff       	call   106f0 <memset_verw>
   10871:	e8 1a 05 00 00       	call   10d90 <__errno_location>
   10876:	89 18                	mov    %ebx,(%rax)
   10878:	89 d8                	mov    %ebx,%eax
   1087a:	5b                   	pop    %rbx
   1087b:	c3                   	ret    
   1087c:	0f 1f 40 00          	nopl   0x0(%rax)
   10880:	31 db                	xor    %ebx,%ebx
   10882:	48 89 ca             	mov    %rcx,%rdx
   10885:	e8 66 fe ff ff       	call   106f0 <memset_verw>
   1088a:	89 d8                	mov    %ebx,%eax
   1088c:	5b                   	pop    %rbx
   1088d:	c3                   	ret    
   1088e:	66 90                	xchg   %ax,%ax
   10890:	bb 16 00 00 00       	mov    $0x16,%ebx
   10895:	eb da                	jmp    10871 <memset_verw_s+0x21>
   10897:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1089e:	00 00 

00000000000108a0 <sgx_init_string_lib>:
   108a0:	f3 0f 1e fa          	endbr64 
   108a4:	31 c0                	xor    %eax,%eax
   108a6:	c3                   	ret    
   108a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   108ae:	00 00 

00000000000108b0 <strlen>:
   108b0:	f3 0f 1e fa          	endbr64 
   108b4:	e9 77 05 00 00       	jmp    10e30 <_strlen>
   108b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000108c0 <__stack_chk_fail>:
   108c0:	f3 0f 1e fa          	endbr64 
   108c4:	50                   	push   %rax
   108c5:	58                   	pop    %rax
   108c6:	48 83 ec 08          	sub    $0x8,%rsp
   108ca:	e8 68 1a 00 00       	call   12337 <abort>
   108cf:	90                   	nop

00000000000108d0 <__stack_chk_fail_local>:
   108d0:	f3 0f 1e fa          	endbr64 
   108d4:	50                   	push   %rax
   108d5:	58                   	pop    %rax
   108d6:	48 83 ec 08          	sub    $0x8,%rsp
   108da:	e8 58 1a 00 00       	call   12337 <abort>
   108df:	90                   	nop

00000000000108e0 <__intel_security_check_cookie>:
   108e0:	f3 0f 1e fa          	endbr64 
   108e4:	48 39 3d 1d 75 00 00 	cmp    %rdi,0x751d(%rip)        # 17e08 <__intel_security_cookie>
   108eb:	75 01                	jne    108ee <__intel_security_check_cookie+0xe>
   108ed:	c3                   	ret    
   108ee:	50                   	push   %rax
   108ef:	e8 43 1a 00 00       	call   12337 <abort>
   108f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   108fb:	00 00 00 
   108fe:	66 90                	xchg   %ax,%ax

0000000000010900 <sgx_thread_spin_init>:
   10900:	f3 0f 1e fa          	endbr64 
   10904:	48 85 ff             	test   %rdi,%rdi
   10907:	74 37                	je     10940 <sgx_thread_spin_init+0x40>
   10909:	53                   	push   %rbx
   1090a:	be 18 00 00 00       	mov    $0x18,%esi
   1090f:	48 89 fb             	mov    %rdi,%rbx
   10912:	e8 29 51 ff ff       	call   5a40 <sgx_is_within_enclave>
   10917:	85 c0                	test   %eax,%eax
   10919:	74 1d                	je     10938 <sgx_thread_spin_init+0x38>
   1091b:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10922:	31 c0                	xor    %eax,%eax
   10924:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   1092b:	00 
   1092c:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%rbx)
   10933:	5b                   	pop    %rbx
   10934:	c3                   	ret    
   10935:	0f 1f 00             	nopl   (%rax)
   10938:	b8 16 00 00 00       	mov    $0x16,%eax
   1093d:	5b                   	pop    %rbx
   1093e:	c3                   	ret    
   1093f:	90                   	nop
   10940:	b8 16 00 00 00       	mov    $0x16,%eax
   10945:	c3                   	ret    
   10946:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   1094d:	00 00 00 

0000000000010950 <sgx_thread_spin_destroy>:
   10950:	f3 0f 1e fa          	endbr64 
   10954:	48 85 ff             	test   %rdi,%rdi
   10957:	74 6f                	je     109c8 <sgx_thread_spin_destroy+0x78>
   10959:	55                   	push   %rbp
   1095a:	be 18 00 00 00       	mov    $0x18,%esi
   1095f:	53                   	push   %rbx
   10960:	48 89 fb             	mov    %rdi,%rbx
   10963:	48 83 ec 08          	sub    $0x8,%rsp
   10967:	e8 d4 50 ff ff       	call   5a40 <sgx_is_within_enclave>
   1096c:	85 c0                	test   %eax,%eax
   1096e:	74 30                	je     109a0 <sgx_thread_spin_destroy+0x50>
   10970:	48 8d 6b 08          	lea    0x8(%rbx),%rbp
   10974:	48 89 ef             	mov    %rbp,%rdi
   10977:	e8 d4 bc ff ff       	call   c650 <sgx_spin_lock>
   1097c:	48 83 7b 10 00       	cmpq   $0x0,0x10(%rbx)
   10981:	75 2d                	jne    109b0 <sgx_thread_spin_destroy+0x60>
   10983:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   1098a:	48 89 ef             	mov    %rbp,%rdi
   1098d:	e8 4e bd ff ff       	call   c6e0 <sgx_spin_unlock>
   10992:	48 83 c4 08          	add    $0x8,%rsp
   10996:	31 c0                	xor    %eax,%eax
   10998:	5b                   	pop    %rbx
   10999:	5d                   	pop    %rbp
   1099a:	c3                   	ret    
   1099b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   109a0:	48 83 c4 08          	add    $0x8,%rsp
   109a4:	b8 16 00 00 00       	mov    $0x16,%eax
   109a9:	5b                   	pop    %rbx
   109aa:	5d                   	pop    %rbp
   109ab:	c3                   	ret    
   109ac:	0f 1f 40 00          	nopl   0x0(%rax)
   109b0:	48 89 ef             	mov    %rbp,%rdi
   109b3:	e8 28 bd ff ff       	call   c6e0 <sgx_spin_unlock>
   109b8:	48 83 c4 08          	add    $0x8,%rsp
   109bc:	b8 10 00 00 00       	mov    $0x10,%eax
   109c1:	5b                   	pop    %rbx
   109c2:	5d                   	pop    %rbp
   109c3:	c3                   	ret    
   109c4:	0f 1f 40 00          	nopl   0x0(%rax)
   109c8:	b8 16 00 00 00       	mov    $0x16,%eax
   109cd:	c3                   	ret    
   109ce:	66 90                	xchg   %ax,%ax

00000000000109d0 <sgx_thread_spin_trylock>:
   109d0:	f3 0f 1e fa          	endbr64 
   109d4:	48 85 ff             	test   %rdi,%rdi
   109d7:	74 7f                	je     10a58 <sgx_thread_spin_trylock+0x88>
   109d9:	41 54                	push   %r12
   109db:	be 18 00 00 00       	mov    $0x18,%esi
   109e0:	55                   	push   %rbp
   109e1:	53                   	push   %rbx
   109e2:	48 89 fb             	mov    %rdi,%rbx
   109e5:	e8 56 50 ff ff       	call   5a40 <sgx_is_within_enclave>
   109ea:	85 c0                	test   %eax,%eax
   109ec:	74 42                	je     10a30 <sgx_thread_spin_trylock+0x60>
   109ee:	e8 50 15 00 00       	call   11f43 <get_thread_data>
   109f3:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   109f7:	4c 89 e7             	mov    %r12,%rdi
   109fa:	48 89 c5             	mov    %rax,%rbp
   109fd:	e8 4e bc ff ff       	call   c650 <sgx_spin_lock>
   10a02:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10a06:	48 39 e8             	cmp    %rbp,%rax
   10a09:	74 09                	je     10a14 <sgx_thread_spin_trylock+0x44>
   10a0b:	48 85 c0             	test   %rax,%rax
   10a0e:	75 30                	jne    10a40 <sgx_thread_spin_trylock+0x70>
   10a10:	48 89 6b 10          	mov    %rbp,0x10(%rbx)
   10a14:	48 83 03 01          	addq   $0x1,(%rbx)
   10a18:	4c 89 e7             	mov    %r12,%rdi
   10a1b:	e8 c0 bc ff ff       	call   c6e0 <sgx_spin_unlock>
   10a20:	5b                   	pop    %rbx
   10a21:	31 c0                	xor    %eax,%eax
   10a23:	5d                   	pop    %rbp
   10a24:	41 5c                	pop    %r12
   10a26:	c3                   	ret    
   10a27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   10a2e:	00 00 
   10a30:	5b                   	pop    %rbx
   10a31:	b8 16 00 00 00       	mov    $0x16,%eax
   10a36:	5d                   	pop    %rbp
   10a37:	41 5c                	pop    %r12
   10a39:	c3                   	ret    
   10a3a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a40:	4c 89 e7             	mov    %r12,%rdi
   10a43:	e8 98 bc ff ff       	call   c6e0 <sgx_spin_unlock>
   10a48:	5b                   	pop    %rbx
   10a49:	b8 10 00 00 00       	mov    $0x10,%eax
   10a4e:	5d                   	pop    %rbp
   10a4f:	41 5c                	pop    %r12
   10a51:	c3                   	ret    
   10a52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10a58:	b8 16 00 00 00       	mov    $0x16,%eax
   10a5d:	c3                   	ret    
   10a5e:	66 90                	xchg   %ax,%ax

0000000000010a60 <sgx_thread_spin_unlock>:
   10a60:	f3 0f 1e fa          	endbr64 
   10a64:	48 85 ff             	test   %rdi,%rdi
   10a67:	0f 84 8b 00 00 00    	je     10af8 <sgx_thread_spin_unlock+0x98>
   10a6d:	41 54                	push   %r12
   10a6f:	be 18 00 00 00       	mov    $0x18,%esi
   10a74:	55                   	push   %rbp
   10a75:	53                   	push   %rbx
   10a76:	48 89 fb             	mov    %rdi,%rbx
   10a79:	e8 c2 4f ff ff       	call   5a40 <sgx_is_within_enclave>
   10a7e:	85 c0                	test   %eax,%eax
   10a80:	74 56                	je     10ad8 <sgx_thread_spin_unlock+0x78>
   10a82:	e8 bc 14 00 00       	call   11f43 <get_thread_data>
   10a87:	4c 8d 63 08          	lea    0x8(%rbx),%r12
   10a8b:	4c 89 e7             	mov    %r12,%rdi
   10a8e:	48 89 c5             	mov    %rax,%rbp
   10a91:	e8 ba bb ff ff       	call   c650 <sgx_spin_lock>
   10a96:	48 8b 43 10          	mov    0x10(%rbx),%rax
   10a9a:	48 85 c0             	test   %rax,%rax
   10a9d:	74 21                	je     10ac0 <sgx_thread_spin_unlock+0x60>
   10a9f:	48 39 e8             	cmp    %rbp,%rax
   10aa2:	75 1c                	jne    10ac0 <sgx_thread_spin_unlock+0x60>
   10aa4:	48 83 2b 01          	subq   $0x1,(%rbx)
   10aa8:	74 3e                	je     10ae8 <sgx_thread_spin_unlock+0x88>
   10aaa:	4c 89 e7             	mov    %r12,%rdi
   10aad:	e8 2e bc ff ff       	call   c6e0 <sgx_spin_unlock>
   10ab2:	5b                   	pop    %rbx
   10ab3:	31 c0                	xor    %eax,%eax
   10ab5:	5d                   	pop    %rbp
   10ab6:	41 5c                	pop    %r12
   10ab8:	c3                   	ret    
   10ab9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10ac0:	4c 89 e7             	mov    %r12,%rdi
   10ac3:	e8 18 bc ff ff       	call   c6e0 <sgx_spin_unlock>
   10ac8:	5b                   	pop    %rbx
   10ac9:	b8 01 00 00 00       	mov    $0x1,%eax
   10ace:	5d                   	pop    %rbp
   10acf:	41 5c                	pop    %r12
   10ad1:	c3                   	ret    
   10ad2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10ad8:	5b                   	pop    %rbx
   10ad9:	b8 16 00 00 00       	mov    $0x16,%eax
   10ade:	5d                   	pop    %rbp
   10adf:	41 5c                	pop    %r12
   10ae1:	c3                   	ret    
   10ae2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10ae8:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
   10aef:	00 
   10af0:	eb b8                	jmp    10aaa <sgx_thread_spin_unlock+0x4a>
   10af2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   10af8:	b8 16 00 00 00       	mov    $0x16,%eax
   10afd:	c3                   	ret    
   10afe:	66 90                	xchg   %ax,%ax

0000000000010b00 <memcpy_s>:
   10b00:	f3 0f 1e fa          	endbr64 
   10b04:	48 85 c9             	test   %rcx,%rcx
   10b07:	74 4f                	je     10b58 <memcpy_s+0x58>
   10b09:	53                   	push   %rbx
   10b0a:	48 85 ff             	test   %rdi,%rdi
   10b0d:	74 51                	je     10b60 <memcpy_s+0x60>
   10b0f:	48 89 d3             	mov    %rdx,%rbx
   10b12:	48 85 d2             	test   %rdx,%rdx
   10b15:	74 19                	je     10b30 <memcpy_s+0x30>
   10b17:	48 39 ce             	cmp    %rcx,%rsi
   10b1a:	72 14                	jb     10b30 <memcpy_s+0x30>
   10b1c:	48 89 de             	mov    %rbx,%rsi
   10b1f:	48 89 ca             	mov    %rcx,%rdx
   10b22:	e8 89 fa ff ff       	call   105b0 <memcpy>
   10b27:	31 c0                	xor    %eax,%eax
   10b29:	5b                   	pop    %rbx
   10b2a:	c3                   	ret    
   10b2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b30:	48 89 f2             	mov    %rsi,%rdx
   10b33:	31 f6                	xor    %esi,%esi
   10b35:	e8 b6 fc ff ff       	call   107f0 <memset>
   10b3a:	48 85 db             	test   %rbx,%rbx
   10b3d:	74 21                	je     10b60 <memcpy_s+0x60>
   10b3f:	e8 4c 02 00 00       	call   10d90 <__errno_location>
   10b44:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10b4a:	b8 22 00 00 00       	mov    $0x22,%eax
   10b4f:	5b                   	pop    %rbx
   10b50:	c3                   	ret    
   10b51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10b58:	31 c0                	xor    %eax,%eax
   10b5a:	c3                   	ret    
   10b5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10b60:	e8 2b 02 00 00       	call   10d90 <__errno_location>
   10b65:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10b6b:	b8 16 00 00 00       	mov    $0x16,%eax
   10b70:	5b                   	pop    %rbx
   10b71:	c3                   	ret    
   10b72:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10b79:	00 00 00 
   10b7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000010b80 <memcpy_verw_s>:
   10b80:	f3 0f 1e fa          	endbr64 
   10b84:	48 85 c9             	test   %rcx,%rcx
   10b87:	74 4f                	je     10bd8 <memcpy_verw_s+0x58>
   10b89:	53                   	push   %rbx
   10b8a:	48 85 ff             	test   %rdi,%rdi
   10b8d:	74 51                	je     10be0 <memcpy_verw_s+0x60>
   10b8f:	48 89 d3             	mov    %rdx,%rbx
   10b92:	48 85 d2             	test   %rdx,%rdx
   10b95:	74 19                	je     10bb0 <memcpy_verw_s+0x30>
   10b97:	48 39 ce             	cmp    %rcx,%rsi
   10b9a:	72 14                	jb     10bb0 <memcpy_verw_s+0x30>
   10b9c:	48 89 de             	mov    %rbx,%rsi
   10b9f:	48 89 ca             	mov    %rcx,%rdx
   10ba2:	e8 39 f8 ff ff       	call   103e0 <memcpy_verw>
   10ba7:	31 c0                	xor    %eax,%eax
   10ba9:	5b                   	pop    %rbx
   10baa:	c3                   	ret    
   10bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10bb0:	48 89 f2             	mov    %rsi,%rdx
   10bb3:	31 f6                	xor    %esi,%esi
   10bb5:	e8 36 fb ff ff       	call   106f0 <memset_verw>
   10bba:	48 85 db             	test   %rbx,%rbx
   10bbd:	74 21                	je     10be0 <memcpy_verw_s+0x60>
   10bbf:	e8 cc 01 00 00       	call   10d90 <__errno_location>
   10bc4:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
   10bca:	b8 22 00 00 00       	mov    $0x22,%eax
   10bcf:	5b                   	pop    %rbx
   10bd0:	c3                   	ret    
   10bd1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10bd8:	31 c0                	xor    %eax,%eax
   10bda:	c3                   	ret    
   10bdb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10be0:	e8 ab 01 00 00       	call   10d90 <__errno_location>
   10be5:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
   10beb:	b8 16 00 00 00       	mov    $0x16,%eax
   10bf0:	5b                   	pop    %rbx
   10bf1:	c3                   	ret    

0000000000010bf2 <setjmp>:
   10bf2:	f3 0f 1e fa          	endbr64 
   10bf6:	50                   	push   %rax
   10bf7:	53                   	push   %rbx
   10bf8:	51                   	push   %rcx
   10bf9:	52                   	push   %rdx
   10bfa:	56                   	push   %rsi
   10bfb:	57                   	push   %rdi
   10bfc:	41 50                	push   %r8
   10bfe:	41 51                	push   %r9
   10c00:	41 52                	push   %r10
   10c02:	41 53                	push   %r11
   10c04:	41 54                	push   %r12
   10c06:	41 55                	push   %r13
   10c08:	41 56                	push   %r14
   10c0a:	41 57                	push   %r15
   10c0c:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10c13:	e8 28 4e ff ff       	call   5a40 <sgx_is_within_enclave>
   10c18:	83 f8 00             	cmp    $0x0,%eax
   10c1b:	74 60                	je     10c7d <.crash>
   10c1d:	41 5f                	pop    %r15
   10c1f:	41 5e                	pop    %r14
   10c21:	41 5d                	pop    %r13
   10c23:	41 5c                	pop    %r12
   10c25:	41 5b                	pop    %r11
   10c27:	41 5a                	pop    %r10
   10c29:	41 59                	pop    %r9
   10c2b:	41 58                	pop    %r8
   10c2d:	5f                   	pop    %rdi
   10c2e:	5e                   	pop    %rsi
   10c2f:	5a                   	pop    %rdx
   10c30:	59                   	pop    %rcx
   10c31:	5b                   	pop    %rbx
   10c32:	58                   	pop    %rax
   10c33:	4c 8b 1c 24          	mov    (%rsp),%r11
   10c37:	48 89 1f             	mov    %rbx,(%rdi)
   10c3a:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
   10c3e:	4c 89 67 10          	mov    %r12,0x10(%rdi)
   10c42:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
   10c46:	4c 89 77 20          	mov    %r14,0x20(%rdi)
   10c4a:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
   10c4e:	48 89 67 30          	mov    %rsp,0x30(%rdi)
   10c52:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
   10c56:	e8 f6 12 00 00       	call   11f51 <get_stack_guard>
   10c5b:	48 31 07             	xor    %rax,(%rdi)
   10c5e:	48 31 47 08          	xor    %rax,0x8(%rdi)
   10c62:	48 31 47 10          	xor    %rax,0x10(%rdi)
   10c66:	48 31 47 18          	xor    %rax,0x18(%rdi)
   10c6a:	48 31 47 20          	xor    %rax,0x20(%rdi)
   10c6e:	48 31 47 28          	xor    %rax,0x28(%rdi)
   10c72:	48 31 47 30          	xor    %rax,0x30(%rdi)
   10c76:	48 31 47 38          	xor    %rax,0x38(%rdi)
   10c7a:	31 c0                	xor    %eax,%eax
   10c7c:	c3                   	ret    

0000000000010c7d <.crash>:
   10c7d:	0f 0b                	ud2    

0000000000010c7f <longjmp>:
   10c7f:	f3 0f 1e fa          	endbr64 
   10c83:	50                   	push   %rax
   10c84:	53                   	push   %rbx
   10c85:	51                   	push   %rcx
   10c86:	52                   	push   %rdx
   10c87:	56                   	push   %rsi
   10c88:	57                   	push   %rdi
   10c89:	41 50                	push   %r8
   10c8b:	41 51                	push   %r9
   10c8d:	41 52                	push   %r10
   10c8f:	41 53                	push   %r11
   10c91:	41 54                	push   %r12
   10c93:	41 55                	push   %r13
   10c95:	41 56                	push   %r14
   10c97:	41 57                	push   %r15
   10c99:	57                   	push   %rdi
   10c9a:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
   10ca1:	e8 9a 4d ff ff       	call   5a40 <sgx_is_within_enclave>
   10ca6:	83 f8 00             	cmp    $0x0,%eax
   10ca9:	74 d2                	je     10c7d <.crash>
   10cab:	5f                   	pop    %rdi
   10cac:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10cb0:	e8 9c 12 00 00       	call   11f51 <get_stack_guard>
   10cb5:	48 31 c2             	xor    %rax,%rdx
   10cb8:	52                   	push   %rdx
   10cb9:	5f                   	pop    %rdi
   10cba:	e8 b1 68 ff ff       	call   7570 <is_valid_sp>
   10cbf:	83 f8 00             	cmp    $0x0,%eax
   10cc2:	74 b9                	je     10c7d <.crash>
   10cc4:	41 5f                	pop    %r15
   10cc6:	41 5e                	pop    %r14
   10cc8:	41 5d                	pop    %r13
   10cca:	41 5c                	pop    %r12
   10ccc:	41 5b                	pop    %r11
   10cce:	41 5a                	pop    %r10
   10cd0:	41 59                	pop    %r9
   10cd2:	41 58                	pop    %r8
   10cd4:	5f                   	pop    %rdi
   10cd5:	5e                   	pop    %rsi
   10cd6:	5a                   	pop    %rdx
   10cd7:	59                   	pop    %rcx
   10cd8:	5b                   	pop    %rbx
   10cd9:	58                   	pop    %rax
   10cda:	89 f0                	mov    %esi,%eax
   10cdc:	48 8b 1f             	mov    (%rdi),%rbx
   10cdf:	48 8b 77 08          	mov    0x8(%rdi),%rsi
   10ce3:	4c 8b 67 10          	mov    0x10(%rdi),%r12
   10ce7:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
   10ceb:	4c 8b 77 20          	mov    0x20(%rdi),%r14
   10cef:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
   10cf3:	48 8b 57 30          	mov    0x30(%rdi),%rdx
   10cf7:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
   10cfb:	50                   	push   %rax
   10cfc:	e8 50 12 00 00       	call   11f51 <get_stack_guard>
   10d01:	48 31 c3             	xor    %rax,%rbx
   10d04:	48 31 c6             	xor    %rax,%rsi
   10d07:	49 31 c4             	xor    %rax,%r12
   10d0a:	49 31 c5             	xor    %rax,%r13
   10d0d:	49 31 c6             	xor    %rax,%r14
   10d10:	49 31 c7             	xor    %rax,%r15
   10d13:	48 31 c2             	xor    %rax,%rdx
   10d16:	48 31 c1             	xor    %rax,%rcx
   10d19:	58                   	pop    %rax
   10d1a:	48 89 f5             	mov    %rsi,%rbp
   10d1d:	48 89 0a             	mov    %rcx,(%rdx)
   10d20:	48 89 d4             	mov    %rdx,%rsp
   10d23:	85 c0                	test   %eax,%eax
   10d25:	75 02                	jne    10d29 <longjmp+0xaa>
   10d27:	ff c0                	inc    %eax
   10d29:	c3                   	ret    
   10d2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010d30 <rsrv_mem_init>:
   10d30:	f3 0f 1e fa          	endbr64 
   10d34:	48 85 ff             	test   %rdi,%rdi
   10d37:	74 47                	je     10d80 <rsrv_mem_init+0x50>
   10d39:	48 89 f0             	mov    %rsi,%rax
   10d3c:	b9 01 00 00 00       	mov    $0x1,%ecx
   10d41:	48 09 d0             	or     %rdx,%rax
   10d44:	48 09 f8             	or     %rdi,%rax
   10d47:	a9 ff 0f 00 00       	test   $0xfff,%eax
   10d4c:	74 0a                	je     10d58 <rsrv_mem_init+0x28>
   10d4e:	89 c8                	mov    %ecx,%eax
   10d50:	c3                   	ret    
   10d51:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   10d58:	48 89 f0             	mov    %rsi,%rax
   10d5b:	48 03 05 0e 71 00 00 	add    0x710e(%rip),%rax        # 17e70 <rsrv_mem_base>
   10d62:	72 ea                	jb     10d4e <rsrv_mem_init+0x1e>
   10d64:	31 c9                	xor    %ecx,%ecx
   10d66:	48 89 3d 03 71 00 00 	mov    %rdi,0x7103(%rip)        # 17e70 <rsrv_mem_base>
   10d6d:	48 89 35 f4 70 00 00 	mov    %rsi,0x70f4(%rip)        # 17e68 <rsrv_mem_size>
   10d74:	89 c8                	mov    %ecx,%eax
   10d76:	48 89 15 e3 70 00 00 	mov    %rdx,0x70e3(%rip)        # 17e60 <rsrv_mem_min_size>
   10d7d:	c3                   	ret    
   10d7e:	66 90                	xchg   %ax,%ax
   10d80:	b9 01 00 00 00       	mov    $0x1,%ecx
   10d85:	89 c8                	mov    %ecx,%eax
   10d87:	c3                   	ret    
   10d88:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   10d8f:	00 

0000000000010d90 <__errno_location>:
   10d90:	f3 0f 1e fa          	endbr64 
   10d94:	e9 27 67 ff ff       	jmp    74c0 <get_errno_addr>
   10d99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010da0 <__memcpy_verw>:
   10da0:	8a 06                	mov    (%rsi),%al
   10da2:	48 83 ec 08          	sub    $0x8,%rsp
   10da6:	8c 1c 24             	mov    %ds,(%rsp)
   10da9:	0f 00 2c 24          	verw   (%rsp)
   10dad:	88 07                	mov    %al,(%rdi)
   10daf:	0f ae f0             	mfence 
   10db2:	0f ae e8             	lfence 
   10db5:	48 83 c4 08          	add    $0x8,%rsp
   10db9:	48 89 f8             	mov    %rdi,%rax
   10dbc:	c3                   	ret    
   10dbd:	cc                   	int3   
   10dbe:	cc                   	int3   
   10dbf:	cc                   	int3   

0000000000010dc0 <__memcpy_8a>:
   10dc0:	48 8b 06             	mov    (%rsi),%rax
   10dc3:	48 89 07             	mov    %rax,(%rdi)
   10dc6:	48 89 f8             	mov    %rdi,%rax
   10dc9:	c3                   	ret    
   10dca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000010dd0 <__memset>:
   10dd0:	48 89 f0             	mov    %rsi,%rax
   10dd3:	48 25 ff 00 00 00    	and    $0xff,%rax
   10dd9:	48 89 d1             	mov    %rdx,%rcx
   10ddc:	49 89 fb             	mov    %rdi,%r11
   10ddf:	fc                   	cld    
   10de0:	48 83 f9 0f          	cmp    $0xf,%rcx
   10de4:	7e 38                	jle    10e1e <L1>
   10de6:	88 c4                	mov    %al,%ah
   10de8:	89 c2                	mov    %eax,%edx
   10dea:	c1 e0 10             	shl    $0x10,%eax
   10ded:	09 d0                	or     %edx,%eax
   10def:	89 c2                	mov    %eax,%edx
   10df1:	48 c1 e0 20          	shl    $0x20,%rax
   10df5:	48 09 d0             	or     %rdx,%rax
   10df8:	48 89 fa             	mov    %rdi,%rdx
   10dfb:	48 f7 da             	neg    %rdx
   10dfe:	48 83 e2 07          	and    $0x7,%rdx
   10e02:	49 89 c8             	mov    %rcx,%r8
   10e05:	49 29 d0             	sub    %rdx,%r8
   10e08:	48 89 d1             	mov    %rdx,%rcx
   10e0b:	f3 aa                	rep stos %al,%es:(%rdi)
   10e0d:	4c 89 c1             	mov    %r8,%rcx
   10e10:	48 c1 e9 03          	shr    $0x3,%rcx
   10e14:	f3 48 ab             	rep stos %rax,%es:(%rdi)
   10e17:	4c 89 c1             	mov    %r8,%rcx
   10e1a:	48 83 e1 07          	and    $0x7,%rcx

0000000000010e1e <L1>:
   10e1e:	f3 aa                	rep stos %al,%es:(%rdi)
   10e20:	4c 89 d8             	mov    %r11,%rax
   10e23:	c3                   	ret    
   10e24:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   10e2b:	00 00 00 
   10e2e:	66 90                	xchg   %ax,%ax

0000000000010e30 <_strlen>:
   10e30:	49 b8 01 01 01 01 01 	movabs $0x101010101010101,%r8
   10e37:	01 01 01 
   10e3a:	40 f6 c7 07          	test   $0x7,%dil
   10e3e:	48 89 f8             	mov    %rdi,%rax
   10e41:	49 b9 80 80 80 80 80 	movabs $0x8080808080808080,%r9
   10e48:	80 80 80 
   10e4b:	75 33                	jne    10e80 <_strlen+0x50>
   10e4d:	0f 1f 00             	nopl   (%rax)
   10e50:	48 8b 10             	mov    (%rax),%rdx
   10e53:	48 83 c0 08          	add    $0x8,%rax
   10e57:	48 89 d1             	mov    %rdx,%rcx
   10e5a:	4c 29 c2             	sub    %r8,%rdx
   10e5d:	48 f7 d1             	not    %rcx
   10e60:	4c 21 ca             	and    %r9,%rdx
   10e63:	74 eb                	je     10e50 <_strlen+0x20>
   10e65:	48 21 ca             	and    %rcx,%rdx
   10e68:	74 e6                	je     10e50 <_strlen+0x20>
   10e6a:	48 29 f8             	sub    %rdi,%rax
   10e6d:	48 0f bc d2          	bsf    %rdx,%rdx
   10e71:	48 c1 ea 03          	shr    $0x3,%rdx
   10e75:	48 8d 44 10 f8       	lea    -0x8(%rax,%rdx,1),%rax
   10e7a:	c3                   	ret    
   10e7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   10e80:	88 c1                	mov    %al,%cl
   10e82:	48 c7 c6 01 00 00 00 	mov    $0x1,%rsi
   10e89:	80 e1 07             	and    $0x7,%cl
   10e8c:	24 f8                	and    $0xf8,%al
   10e8e:	c0 e1 03             	shl    $0x3,%cl
   10e91:	48 8b 10             	mov    (%rax),%rdx
   10e94:	48 d3 e6             	shl    %cl,%rsi
   10e97:	48 ff ce             	dec    %rsi
   10e9a:	48 09 f2             	or     %rsi,%rdx
   10e9d:	eb b4                	jmp    10e53 <_strlen+0x23>
   10e9f:	90                   	nop

0000000000010ea0 <sgx_init_crypto_lib>:
   10ea0:	f3 0f 1e fa          	endbr64 
   10ea4:	e9 07 00 00 00       	jmp    10eb0 <init_ipp_cpuid>
   10ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000010eb0 <init_ipp_cpuid>:
   10eb0:	f3 0f 1e fa          	endbr64 
   10eb4:	48 83 3d 34 71 00 00 	cmpq   $0x0,0x7134(%rip)        # 17ff0 <ippcpSetCpuFeatures>
   10ebb:	00 
   10ebc:	0f 84 2e 02 00 00    	je     110f0 <init_ipp_cpuid+0x240>
   10ec2:	48 89 f8             	mov    %rdi,%rax
   10ec5:	ba 02 00 00 00       	mov    $0x2,%edx
   10eca:	f6 c4 02             	test   $0x2,%ah
   10ecd:	0f 84 1f 02 00 00    	je     110f2 <init_ipp_cpuid+0x242>
   10ed3:	48 89 fa             	mov    %rdi,%rdx
   10ed6:	48 83 ec 08          	sub    $0x8,%rsp
   10eda:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
   10ee1:	00 00 00 
   10ee4:	81 e2 00 08 00 00    	and    $0x800,%edx
   10eea:	48 83 fa 01          	cmp    $0x1,%rdx
   10eee:	48 19 ff             	sbb    %rdi,%rdi
   10ef1:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
   10ef5:	48 83 c7 7f          	add    $0x7f,%rdi
   10ef9:	48 89 fa             	mov    %rdi,%rdx
   10efc:	80 ca 80             	or     $0x80,%dl
   10eff:	f6 c4 04             	test   $0x4,%ah
   10f02:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f06:	48 89 fa             	mov    %rdi,%rdx
   10f09:	80 ce 03             	or     $0x3,%dh
   10f0c:	a9 00 00 01 00       	test   $0x10000,%eax
   10f11:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f15:	48 89 fa             	mov    %rdi,%rdx
   10f18:	80 ce 04             	or     $0x4,%dh
   10f1b:	f6 c4 40             	test   $0x40,%ah
   10f1e:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f22:	48 89 fa             	mov    %rdi,%rdx
   10f25:	80 ce 08             	or     $0x8,%dh
   10f28:	f6 c4 20             	test   $0x20,%ah
   10f2b:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f2f:	48 89 fa             	mov    %rdi,%rdx
   10f32:	80 ce 20             	or     $0x20,%dh
   10f35:	a9 00 00 02 00       	test   $0x20000,%eax
   10f3a:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f3e:	48 89 fa             	mov    %rdi,%rdx
   10f41:	80 ce 40             	or     $0x40,%dh
   10f44:	f6 c4 80             	test   $0x80,%ah
   10f47:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f4b:	48 89 fa             	mov    %rdi,%rdx
   10f4e:	80 ce 80             	or     $0x80,%dh
   10f51:	a9 00 00 80 00       	test   $0x800000,%eax
   10f56:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f5a:	48 89 fa             	mov    %rdi,%rdx
   10f5d:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
   10f64:	a9 00 00 00 10       	test   $0x10000000,%eax
   10f69:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f6d:	48 89 fa             	mov    %rdi,%rdx
   10f70:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
   10f77:	a9 00 00 00 20       	test   $0x20000000,%eax
   10f7c:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f80:	48 89 fa             	mov    %rdi,%rdx
   10f83:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
   10f8a:	48 85 c8             	test   %rcx,%rax
   10f8d:	48 0f 45 fa          	cmovne %rdx,%rdi
   10f91:	a9 00 00 00 08       	test   $0x8000000,%eax
   10f96:	74 0d                	je     10fa5 <init_ipp_cpuid+0xf5>
   10f98:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
   10f9f:	00 00 00 
   10fa2:	48 09 d7             	or     %rdx,%rdi
   10fa5:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
   10fac:	00 00 00 
   10faf:	48 89 fa             	mov    %rdi,%rdx
   10fb2:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
   10fb9:	48 85 c8             	test   %rcx,%rax
   10fbc:	48 b9 00 00 00 00 01 	movabs $0x100000000,%rcx
   10fc3:	00 00 00 
   10fc6:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fca:	48 89 fa             	mov    %rdi,%rdx
   10fcd:	48 81 ca 00 00 40 00 	or     $0x400000,%rdx
   10fd4:	48 85 c8             	test   %rcx,%rax
   10fd7:	48 b9 00 00 00 00 04 	movabs $0x400000000,%rcx
   10fde:	00 00 00 
   10fe1:	48 0f 45 fa          	cmovne %rdx,%rdi
   10fe5:	48 89 fa             	mov    %rdi,%rdx
   10fe8:	48 81 ca 00 00 20 00 	or     $0x200000,%rdx
   10fef:	48 85 c8             	test   %rcx,%rax
   10ff2:	48 b9 00 00 00 00 20 	movabs $0x2000000000,%rcx
   10ff9:	00 00 00 
   10ffc:	48 0f 45 fa          	cmovne %rdx,%rdi
   11000:	48 89 fa             	mov    %rdi,%rdx
   11003:	48 81 ca 00 00 00 02 	or     $0x2000000,%rdx
   1100a:	a9 00 00 00 01       	test   $0x1000000,%eax
   1100f:	48 0f 45 fa          	cmovne %rdx,%rdi
   11013:	48 89 fa             	mov    %rdi,%rdx
   11016:	48 81 ca 00 00 00 01 	or     $0x1000000,%rdx
   1101d:	48 85 c8             	test   %rcx,%rax
   11020:	48 b9 00 00 00 00 40 	movabs $0x4000000000,%rcx
   11027:	00 00 00 
   1102a:	48 0f 45 fa          	cmovne %rdx,%rdi
   1102e:	48 89 fa             	mov    %rdi,%rdx
   11031:	48 81 ca 00 00 00 04 	or     $0x4000000,%rdx
   11038:	48 85 c8             	test   %rcx,%rax
   1103b:	48 b9 00 00 00 00 80 	movabs $0x8000000000,%rcx
   11042:	00 00 00 
   11045:	48 0f 45 fa          	cmovne %rdx,%rdi
   11049:	48 89 fa             	mov    %rdi,%rdx
   1104c:	48 81 ca 00 00 00 08 	or     $0x8000000,%rdx
   11053:	48 85 c8             	test   %rcx,%rax
   11056:	48 b9 00 00 00 00 00 	movabs $0x20000000000,%rcx
   1105d:	02 00 00 
   11060:	48 0f 45 fa          	cmovne %rdx,%rdi
   11064:	48 89 fa             	mov    %rdi,%rdx
   11067:	48 81 ca 00 00 00 40 	or     $0x40000000,%rdx
   1106e:	48 85 c8             	test   %rcx,%rax
   11071:	48 b9 00 00 00 00 00 	movabs $0x10000000000,%rcx
   11078:	01 00 00 
   1107b:	48 0f 45 fa          	cmovne %rdx,%rdi
   1107f:	48 89 fa             	mov    %rdi,%rdx
   11082:	48 81 ca 00 00 00 20 	or     $0x20000000,%rdx
   11089:	48 85 c8             	test   %rcx,%rax
   1108c:	48 0f 45 fa          	cmovne %rdx,%rdi
   11090:	48 0f ba e0 2e       	bt     $0x2e,%rax
   11095:	73 05                	jae    1109c <init_ipp_cpuid+0x1ec>
   11097:	48 0f ba ef 23       	bts    $0x23,%rdi
   1109c:	a9 00 00 00 40       	test   $0x40000000,%eax
   110a1:	74 05                	je     110a8 <init_ipp_cpuid+0x1f8>
   110a3:	48 0f ba ef 20       	bts    $0x20,%rdi
   110a8:	48 0f ba e0 2d       	bt     $0x2d,%rax
   110ad:	73 05                	jae    110b4 <init_ipp_cpuid+0x204>
   110af:	48 0f ba ef 22       	bts    $0x22,%rdi
   110b4:	48 0f ba e0 2c       	bt     $0x2c,%rax
   110b9:	73 05                	jae    110c0 <init_ipp_cpuid+0x210>
   110bb:	48 0f ba ef 25       	bts    $0x25,%rdi
   110c0:	48 0f ba e0 2f       	bt     $0x2f,%rax
   110c5:	73 05                	jae    110cc <init_ipp_cpuid+0x21c>
   110c7:	48 0f ba ef 24       	bts    $0x24,%rdi
   110cc:	48 0f ba ef 3f       	bts    $0x3f,%rdi
   110d1:	e8 42 ff fe ff       	call   1018 <ippcpSetCpuFeatures@plt>
   110d6:	31 d2                	xor    %edx,%edx
   110d8:	85 c0                	test   %eax,%eax
   110da:	0f 95 c2             	setne  %dl
   110dd:	48 83 c4 08          	add    $0x8,%rsp
   110e1:	01 d2                	add    %edx,%edx
   110e3:	89 d0                	mov    %edx,%eax
   110e5:	c3                   	ret    
   110e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   110ed:	00 00 00 
   110f0:	31 d2                	xor    %edx,%edx
   110f2:	89 d0                	mov    %edx,%eax
   110f4:	c3                   	ret    
   110f5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   110fc:	00 00 00 
   110ff:	90                   	nop

0000000000011100 <sgx_create_report>:
   11100:	f3 0f 1e fa          	endbr64 
   11104:	55                   	push   %rbp
   11105:	48 89 e5             	mov    %rsp,%rbp
   11108:	41 57                	push   %r15
   1110a:	49 89 f7             	mov    %rsi,%r15
   1110d:	31 f6                	xor    %esi,%esi
   1110f:	41 56                	push   %r14
   11111:	41 55                	push   %r13
   11113:	49 89 fd             	mov    %rdi,%r13
   11116:	41 54                	push   %r12
   11118:	53                   	push   %rbx
   11119:	48 89 d3             	mov    %rdx,%rbx
   1111c:	ba 40 00 00 00       	mov    $0x40,%edx
   11121:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
   11128:	48 81 ec 00 08 00 00 	sub    $0x800,%rsp
   1112f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11136:	00 00 
   11138:	48 89 84 24 f8 07 00 	mov    %rax,0x7f8(%rsp)
   1113f:	00 
   11140:	31 c0                	xor    %eax,%eax
   11142:	48 8d 84 24 80 01 00 	lea    0x180(%rsp),%rax
   11149:	00 
   1114a:	4c 8d b4 24 00 04 00 	lea    0x400(%rsp),%r14
   11151:	00 
   11152:	48 89 c7             	mov    %rax,%rdi
   11155:	48 89 84 24 78 01 00 	mov    %rax,0x178(%rsp)
   1115c:	00 
   1115d:	4c 8d a4 24 00 02 00 	lea    0x200(%rsp),%r12
   11164:	00 
   11165:	e8 66 fc ff ff       	call   10dd0 <__memset>
   1116a:	31 f6                	xor    %esi,%esi
   1116c:	ba 00 02 00 00       	mov    $0x200,%edx
   11171:	4c 89 f7             	mov    %r14,%rdi
   11174:	e8 57 fc ff ff       	call   10dd0 <__memset>
   11179:	31 f6                	xor    %esi,%esi
   1117b:	ba b0 01 00 00       	mov    $0x1b0,%edx
   11180:	4c 89 e7             	mov    %r12,%rdi
   11183:	e8 48 fc ff ff       	call   10dd0 <__memset>
   11188:	4d 85 ed             	test   %r13,%r13
   1118b:	74 23                	je     111b0 <sgx_create_report+0xb0>
   1118d:	be 00 02 00 00       	mov    $0x200,%esi
   11192:	4c 89 ef             	mov    %r13,%rdi
   11195:	e8 a6 48 ff ff       	call   5a40 <sgx_is_within_enclave>
   1119a:	85 c0                	test   %eax,%eax
   1119c:	0f 84 be 00 00 00    	je     11260 <sgx_create_report+0x160>
   111a2:	b9 40 00 00 00       	mov    $0x40,%ecx
   111a7:	4c 89 f7             	mov    %r14,%rdi
   111aa:	4c 89 ee             	mov    %r13,%rsi
   111ad:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
   111b0:	4d 85 ff             	test   %r15,%r15
   111b3:	74 4c                	je     11201 <sgx_create_report+0x101>
   111b5:	be 40 00 00 00       	mov    $0x40,%esi
   111ba:	4c 89 ff             	mov    %r15,%rdi
   111bd:	e8 7e 48 ff ff       	call   5a40 <sgx_is_within_enclave>
   111c2:	85 c0                	test   %eax,%eax
   111c4:	0f 84 96 00 00 00    	je     11260 <sgx_create_report+0x160>
   111ca:	f3 41 0f 6f 0f       	movdqu (%r15),%xmm1
   111cf:	f3 41 0f 6f 57 10    	movdqu 0x10(%r15),%xmm2
   111d5:	f3 41 0f 6f 5f 20    	movdqu 0x20(%r15),%xmm3
   111db:	f3 41 0f 6f 67 30    	movdqu 0x30(%r15),%xmm4
   111e1:	0f 29 8c 24 80 01 00 	movaps %xmm1,0x180(%rsp)
   111e8:	00 
   111e9:	0f 29 94 24 90 01 00 	movaps %xmm2,0x190(%rsp)
   111f0:	00 
   111f1:	0f 29 9c 24 a0 01 00 	movaps %xmm3,0x1a0(%rsp)
   111f8:	00 
   111f9:	0f 29 a4 24 b0 01 00 	movaps %xmm4,0x1b0(%rsp)
   11200:	00 
   11201:	48 85 db             	test   %rbx,%rbx
   11204:	74 5a                	je     11260 <sgx_create_report+0x160>
   11206:	be b0 01 00 00       	mov    $0x1b0,%esi
   1120b:	48 89 df             	mov    %rbx,%rdi
   1120e:	e8 2d 48 ff ff       	call   5a40 <sgx_is_within_enclave>
   11213:	85 c0                	test   %eax,%eax
   11215:	74 49                	je     11260 <sgx_create_report+0x160>
   11217:	48 8b b4 24 78 01 00 	mov    0x178(%rsp),%rsi
   1121e:	00 
   1121f:	4c 89 e2             	mov    %r12,%rdx
   11222:	4c 89 f7             	mov    %r14,%rdi
   11225:	e8 56 10 00 00       	call   12280 <do_ereport>
   1122a:	89 c2                	mov    %eax,%edx
   1122c:	b8 01 00 00 00       	mov    $0x1,%eax
   11231:	85 d2                	test   %edx,%edx
   11233:	75 30                	jne    11265 <sgx_create_report+0x165>
   11235:	31 c0                	xor    %eax,%eax
   11237:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1123e:	00 00 
   11240:	66 41 0f 6f 04 04    	movdqa (%r12,%rax,1),%xmm0
   11246:	0f 11 04 03          	movups %xmm0,(%rbx,%rax,1)
   1124a:	48 83 c0 10          	add    $0x10,%rax
   1124e:	48 3d b0 01 00 00    	cmp    $0x1b0,%rax
   11254:	75 ea                	jne    11240 <sgx_create_report+0x140>
   11256:	31 c0                	xor    %eax,%eax
   11258:	eb 0b                	jmp    11265 <sgx_create_report+0x165>
   1125a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11260:	b8 02 00 00 00       	mov    $0x2,%eax
   11265:	48 8b 94 24 f8 07 00 	mov    0x7f8(%rsp),%rdx
   1126c:	00 
   1126d:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   11274:	00 00 
   11276:	75 0f                	jne    11287 <sgx_create_report+0x187>
   11278:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
   1127c:	5b                   	pop    %rbx
   1127d:	41 5c                	pop    %r12
   1127f:	41 5d                	pop    %r13
   11281:	41 5e                	pop    %r14
   11283:	41 5f                	pop    %r15
   11285:	5d                   	pop    %rbp
   11286:	c3                   	ret    
   11287:	e8 34 f6 ff ff       	call   108c0 <__stack_chk_fail>
   1128c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011290 <sgx_self_report>:
   11290:	f3 0f 1e fa          	endbr64 
   11294:	55                   	push   %rbp
   11295:	53                   	push   %rbx
   11296:	48 8d 1d c3 9b 01 00 	lea    0x19bc3(%rip),%rbx        # 2ae60 <_ZZ15sgx_self_reportE7_report>
   1129d:	48 83 ec 08          	sub    $0x8,%rsp
   112a1:	48 83 3d e7 9b 01 00 	cmpq   $0x0,0x19be7(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   112a8:	00 
   112a9:	74 0d                	je     112b8 <sgx_self_report+0x28>
   112ab:	48 83 c4 08          	add    $0x8,%rsp
   112af:	48 89 d8             	mov    %rbx,%rax
   112b2:	5b                   	pop    %rbx
   112b3:	5d                   	pop    %rbp
   112b4:	c3                   	ret    
   112b5:	0f 1f 00             	nopl   (%rax)
   112b8:	48 8d 2d 81 9b 01 00 	lea    0x19b81(%rip),%rbp        # 2ae40 <_ZZ15sgx_self_reportE11report_lock>
   112bf:	48 89 ef             	mov    %rbp,%rdi
   112c2:	e8 89 b3 ff ff       	call   c650 <sgx_spin_lock>
   112c7:	48 83 3d c1 9b 01 00 	cmpq   $0x0,0x19bc1(%rip)        # 2ae90 <_ZZ15sgx_self_reportE7_report+0x30>
   112ce:	00 
   112cf:	74 17                	je     112e8 <sgx_self_report+0x58>
   112d1:	48 89 ef             	mov    %rbp,%rdi
   112d4:	e8 07 b4 ff ff       	call   c6e0 <sgx_spin_unlock>
   112d9:	48 83 c4 08          	add    $0x8,%rsp
   112dd:	48 89 d8             	mov    %rbx,%rax
   112e0:	5b                   	pop    %rbx
   112e1:	5d                   	pop    %rbp
   112e2:	c3                   	ret    
   112e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   112e8:	48 89 da             	mov    %rbx,%rdx
   112eb:	31 f6                	xor    %esi,%esi
   112ed:	31 ff                	xor    %edi,%edi
   112ef:	e8 0c fe ff ff       	call   11100 <sgx_create_report>
   112f4:	eb db                	jmp    112d1 <sgx_self_report+0x41>

Disassembly of section .nipx:

0000000000011400 <init_enclave>:
   11400:	f3 0f 1e fa          	endbr64 
   11404:	41 54                	push   %r12
   11406:	55                   	push   %rbp
   11407:	53                   	push   %rbx
   11408:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
   1140f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
   11416:	00 00 
   11418:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
   1141f:	00 
   11420:	31 c0                	xor    %eax,%eax
   11422:	48 85 ff             	test   %rdi,%rdi
   11425:	0f 84 f5 02 00 00    	je     11720 <init_enclave+0x320>
   1142b:	48 89 f3             	mov    %rsi,%rbx
   1142e:	48 85 f6             	test   %rsi,%rsi
   11431:	0f 84 e9 02 00 00    	je     11720 <init_enclave+0x320>
   11437:	48 83 3d 91 6b 00 00 	cmpq   $0x0,0x6b91(%rip)        # 17fd0 <_Z9pcl_entryPvS_>
   1143e:	00 
   1143f:	48 89 fd             	mov    %rdi,%rbp
   11442:	74 10                	je     11454 <init_enclave+0x54>
   11444:	0f ae e8             	lfence 
   11447:	e8 c4 fb fe ff       	call   1010 <_Z9pcl_entryPvS_@plt>
   1144c:	85 c0                	test   %eax,%eax
   1144e:	0f 85 cc 02 00 00    	jne    11720 <init_enclave+0x320>
   11454:	48 89 ef             	mov    %rbp,%rdi
   11457:	e8 54 6e ff ff       	call   82b0 <relocate_enclave>
   1145c:	89 c5                	mov    %eax,%ebp
   1145e:	85 c0                	test   %eax,%eax
   11460:	0f 85 ba 02 00 00    	jne    11720 <init_enclave+0x320>
   11466:	e8 8d 0a 00 00       	call   11ef8 <get_enclave_base>
   1146b:	48 8d 15 0e 1d 00 00 	lea    0x1d0e(%rip),%rdx        # 13180 <g_global_data>
   11472:	48 89 05 a7 69 00 00 	mov    %rax,0x69a7(%rip)        # 17e20 <g_enclave_base>
   11479:	48 8b 8a d0 06 00 00 	mov    0x6d0(%rdx),%rcx
   11480:	48 89 0d 91 69 00 00 	mov    %rcx,0x6991(%rip)        # 17e18 <g_enclave_size>
   11487:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1148e:	48 85 c9             	test   %rcx,%rcx
   11491:	74 1e                	je     114b1 <init_enclave+0xb1>
   11493:	48 8b 8a c0 06 00 00 	mov    0x6c0(%rdx),%rcx
   1149a:	48 39 c8             	cmp    %rcx,%rax
   1149d:	0f 85 84 02 00 00    	jne    11727 <init_enclave+0x327>
   114a3:	48 8b 82 c8 06 00 00 	mov    0x6c8(%rdx),%rax
   114aa:	48 89 05 6f 69 00 00 	mov    %rax,0x696f(%rip)        # 17e20 <g_enclave_base>
   114b1:	be b0 00 00 00       	mov    $0xb0,%esi
   114b6:	48 89 df             	mov    %rbx,%rdi
   114b9:	e8 e2 45 ff ff       	call   5aa0 <sgx_is_outside_enclave>
   114be:	85 c0                	test   %eax,%eax
   114c0:	0f 84 5a 02 00 00    	je     11720 <init_enclave+0x320>
   114c6:	0f ae e8             	lfence 
   114c9:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
   114cd:	f3 0f 6f 4b 10       	movdqu 0x10(%rbx),%xmm1
   114d2:	f3 0f 6f 53 20       	movdqu 0x20(%rbx),%xmm2
   114d7:	f3 0f 6f 5b 30       	movdqu 0x30(%rbx),%xmm3
   114dc:	f3 0f 6f 63 40       	movdqu 0x40(%rbx),%xmm4
   114e1:	0f 29 04 24          	movaps %xmm0,(%rsp)
   114e5:	f3 0f 6f 6b 50       	movdqu 0x50(%rbx),%xmm5
   114ea:	f3 0f 6f 73 60       	movdqu 0x60(%rbx),%xmm6
   114ef:	0f 29 4c 24 10       	movaps %xmm1,0x10(%rsp)
   114f4:	f3 0f 6f 7b 70       	movdqu 0x70(%rbx),%xmm7
   114f9:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
   11500:	00 
   11501:	0f 29 54 24 20       	movaps %xmm2,0x20(%rsp)
   11506:	f3 0f 6f 8b 90 00 00 	movdqu 0x90(%rbx),%xmm1
   1150d:	00 
   1150e:	f3 0f 6f 93 a0 00 00 	movdqu 0xa0(%rbx),%xmm2
   11515:	00 
   11516:	0f 29 5c 24 30       	movaps %xmm3,0x30(%rsp)
   1151b:	0f 29 64 24 40       	movaps %xmm4,0x40(%rsp)
   11520:	0f 29 6c 24 50       	movaps %xmm5,0x50(%rsp)
   11525:	0f 29 74 24 60       	movaps %xmm6,0x60(%rsp)
   1152a:	0f 29 7c 24 70       	movaps %xmm7,0x70(%rsp)
   1152f:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
   11536:	00 
   11537:	0f 29 8c 24 90 00 00 	movaps %xmm1,0x90(%rsp)
   1153e:	00 
   1153f:	0f 29 94 24 a0 00 00 	movaps %xmm2,0xa0(%rsp)
   11546:	00 
   11547:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   1154c:	0f 85 8e 01 00 00    	jne    116e0 <init_enclave+0x2e0>
   11552:	b9 14 00 00 00       	mov    $0x14,%ecx
   11557:	b8 9c 00 00 00       	mov    $0x9c,%eax
   1155c:	48 8d 14 04          	lea    (%rsp,%rax,1),%rdx
   11560:	48 8d 41 ff          	lea    -0x1(%rcx),%rax
   11564:	83 e0 01             	and    $0x1,%eax
   11567:	c6 02 00             	movb   $0x0,(%rdx)
   1156a:	48 89 c6             	mov    %rax,%rsi
   1156d:	b8 01 00 00 00       	mov    $0x1,%eax
   11572:	48 39 c8             	cmp    %rcx,%rax
   11575:	73 2b                	jae    115a2 <init_enclave+0x1a2>
   11577:	48 85 f6             	test   %rsi,%rsi
   1157a:	74 14                	je     11590 <init_enclave+0x190>
   1157c:	b8 02 00 00 00       	mov    $0x2,%eax
   11581:	c6 42 01 00          	movb   $0x0,0x1(%rdx)
   11585:	48 39 c8             	cmp    %rcx,%rax
   11588:	73 18                	jae    115a2 <init_enclave+0x1a2>
   1158a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11590:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)
   11594:	48 83 c0 02          	add    $0x2,%rax
   11598:	c6 44 10 ff 00       	movb   $0x0,-0x1(%rax,%rdx,1)
   1159d:	48 39 c8             	cmp    %rcx,%rax
   115a0:	72 ee                	jb     11590 <init_enclave+0x190>
   115a2:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
   115a9:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   115ae:	89 05 5c 68 00 00    	mov    %eax,0x685c(%rip)        # 17e10 <g_cpu_core_num>
   115b4:	8b 44 24 08          	mov    0x8(%rsp),%eax
   115b8:	89 05 6a 68 00 00    	mov    %eax,0x686a(%rip)        # 17e28 <g_sdk_version>
   115be:	85 c0                	test   %eax,%eax
   115c0:	74 1a                	je     115dc <init_enclave+0x1dc>
   115c2:	83 f8 04             	cmp    $0x4,%eax
   115c5:	0f 8e 55 01 00 00    	jle    11720 <init_enclave+0x320>
   115cb:	48 8d 5c 24 0c       	lea    0xc(%rsp),%rbx
   115d0:	31 f6                	xor    %esi,%esi
   115d2:	48 89 df             	mov    %rbx,%rdi
   115d5:	e8 06 5f ff ff       	call   74e0 <feature_supported>
   115da:	89 c5                	mov    %eax,%ebp
   115dc:	48 89 df             	mov    %rbx,%rdi
   115df:	be 01 00 00 00       	mov    $0x1,%esi
   115e4:	89 2d 42 68 00 00    	mov    %ebp,0x6842(%rip)        # 17e2c <EDMM_supported>
   115ea:	e8 f1 5e ff ff       	call   74e0 <feature_supported>
   115ef:	44 8b 25 36 68 00 00 	mov    0x6836(%rip),%r12d        # 17e2c <EDMM_supported>
   115f6:	89 05 18 68 00 00    	mov    %eax,0x6818(%rip)        # 17e14 <g_aexnotify_supported>
   115fc:	e8 ef 5c ff ff       	call   72f0 <get_heap_min_size>
   11601:	48 89 c5             	mov    %rax,%rbp
   11604:	e8 77 5c ff ff       	call   7280 <get_heap_size>
   11609:	48 89 c3             	mov    %rax,%rbx
   1160c:	e8 4f 5c ff ff       	call   7260 <get_heap_base>
   11611:	44 89 e1             	mov    %r12d,%ecx
   11614:	48 89 ea             	mov    %rbp,%rdx
   11617:	48 89 de             	mov    %rbx,%rsi
   1161a:	48 89 c7             	mov    %rax,%rdi
   1161d:	e8 9e ae ff ff       	call   c4c0 <heap_init>
   11622:	85 c0                	test   %eax,%eax
   11624:	0f 85 f6 00 00 00    	jne    11720 <init_enclave+0x320>
   1162a:	e8 01 6a ff ff       	call   8030 <get_xfeature_state>
   1162f:	48 8b 3c 24          	mov    (%rsp),%rdi
   11633:	48 89 c2             	mov    %rax,%rdx
   11636:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
   1163d:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
   11642:	74 08                	je     1164c <init_enclave+0x24c>
   11644:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
   1164b:	00 
   1164c:	83 3d d5 67 00 00 01 	cmpl   $0x1,0x67d5(%rip)        # 17e28 <g_sdk_version>
   11653:	7f 0f                	jg     11664 <init_enclave+0x264>
   11655:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
   1165c:	00 00 
   1165e:	0f 84 a4 00 00 00    	je     11708 <init_enclave+0x308>
   11664:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
   11669:	e8 b2 42 ff ff       	call   5920 <init_optimized_libs>
   1166e:	85 c0                	test   %eax,%eax
   11670:	0f 85 aa 00 00 00    	jne    11720 <init_enclave+0x320>
   11676:	e8 75 5d ff ff       	call   73f0 <get_rsrv_size>
   1167b:	48 85 c0             	test   %rax,%rax
   1167e:	74 27                	je     116a7 <init_enclave+0x2a7>
   11680:	e8 db 5d ff ff       	call   7460 <get_rsrv_min_size>
   11685:	48 89 c5             	mov    %rax,%rbp
   11688:	e8 63 5d ff ff       	call   73f0 <get_rsrv_size>
   1168d:	48 89 c3             	mov    %rax,%rbx
   11690:	e8 bb 5c ff ff       	call   7350 <get_rsrv_base>
   11695:	48 89 ea             	mov    %rbp,%rdx
   11698:	48 89 de             	mov    %rbx,%rsi
   1169b:	48 89 c7             	mov    %rax,%rdi
   1169e:	e8 8d f6 ff ff       	call   10d30 <rsrv_mem_init>
   116a3:	85 c0                	test   %eax,%eax
   116a5:	75 79                	jne    11720 <init_enclave+0x320>
   116a7:	be 08 00 00 00       	mov    $0x8,%esi
   116ac:	48 8d 3d 55 67 00 00 	lea    0x6755(%rip),%rdi        # 17e08 <__intel_security_cookie>
   116b3:	e8 88 45 ff ff       	call   5c40 <sgx_read_rand>
   116b8:	f7 d8                	neg    %eax
   116ba:	19 c0                	sbb    %eax,%eax
   116bc:	48 8b 94 24 b8 00 00 	mov    0xb8(%rsp),%rdx
   116c3:	00 
   116c4:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
   116cb:	00 00 
   116cd:	75 5d                	jne    1172c <init_enclave+0x32c>
   116cf:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
   116d6:	5b                   	pop    %rbx
   116d7:	5d                   	pop    %rbp
   116d8:	41 5c                	pop    %r12
   116da:	c3                   	ret    
   116db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   116e0:	48 8b 84 24 9c 00 00 	mov    0x9c(%rsp),%rax
   116e7:	00 
   116e8:	b9 b0 00 00 00       	mov    $0xb0,%ecx
   116ed:	48 29 c1             	sub    %rax,%rcx
   116f0:	48 3d af 00 00 00    	cmp    $0xaf,%rax
   116f6:	0f 86 60 fe ff ff    	jbe    1155c <init_enclave+0x15c>
   116fc:	e9 a1 fe ff ff       	jmp    115a2 <init_enclave+0x1a2>
   11701:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11708:	31 f6                	xor    %esi,%esi
   1170a:	e8 11 42 ff ff       	call   5920 <init_optimized_libs>
   1170f:	85 c0                	test   %eax,%eax
   11711:	0f 84 5f ff ff ff    	je     11676 <init_enclave+0x276>
   11717:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   1171e:	00 00 
   11720:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11725:	eb 95                	jmp    116bc <init_enclave+0x2bc>
   11727:	e8 0b 0c 00 00       	call   12337 <abort>
   1172c:	e8 8f f1 ff ff       	call   108c0 <__stack_chk_fail>
   11731:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11738:	00 00 00 00 
   1173c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011740 <do_init_enclave>:
   11740:	f3 0f 1e fa          	endbr64 
   11744:	41 54                	push   %r12
   11746:	49 89 f4             	mov    %rsi,%r12
   11749:	55                   	push   %rbp
   1174a:	48 89 fd             	mov    %rdi,%rbp
   1174d:	53                   	push   %rbx
   1174e:	e8 a5 07 00 00       	call   11ef8 <get_enclave_base>
   11753:	48 89 c3             	mov    %rax,%rbx
   11756:	e8 c8 07 00 00       	call   11f23 <lock_enclave>
   1175b:	85 c0                	test   %eax,%eax
   1175d:	74 11                	je     11770 <do_init_enclave+0x30>
   1175f:	bd 01 00 00 00       	mov    $0x1,%ebp
   11764:	89 e8                	mov    %ebp,%eax
   11766:	5b                   	pop    %rbx
   11767:	5d                   	pop    %rbp
   11768:	41 5c                	pop    %r12
   1176a:	c3                   	ret    
   1176b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11770:	48 89 ee             	mov    %rbp,%rsi
   11773:	48 89 df             	mov    %rbx,%rdi
   11776:	e8 85 fc ff ff       	call   11400 <init_enclave>
   1177b:	85 c0                	test   %eax,%eax
   1177d:	75 e0                	jne    1175f <do_init_enclave+0x1f>
   1177f:	be 01 00 00 00       	mov    $0x1,%esi
   11784:	4c 89 e7             	mov    %r12,%rdi
   11787:	e8 e4 52 ff ff       	call   6a70 <do_init_thread>
   1178c:	89 c5                	mov    %eax,%ebp
   1178e:	85 c0                	test   %eax,%eax
   11790:	75 cd                	jne    1175f <do_init_enclave+0x1f>
   11792:	8b 15 94 66 00 00    	mov    0x6694(%rip),%edx        # 17e2c <EDMM_supported>
   11798:	85 d2                	test   %edx,%edx
   1179a:	0f 84 f0 00 00 00    	je     11890 <do_init_enclave+0x150>
   117a0:	e8 4b 5b ff ff       	call   72f0 <get_heap_min_size>
   117a5:	4c 8d 25 d4 19 00 00 	lea    0x19d4(%rip),%r12        # 13180 <g_global_data>
   117ac:	31 d2                	xor    %edx,%edx
   117ae:	48 89 c6             	mov    %rax,%rsi
   117b1:	48 89 c1             	mov    %rax,%rcx
   117b4:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   117b9:	48 01 df             	add    %rbx,%rdi
   117bc:	e8 3f f0 ff ff       	call   10800 <memset_s>
   117c1:	48 8d 05 98 66 00 00 	lea    0x6698(%rip),%rax        # 17e60 <rsrv_mem_min_size>
   117c8:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   117cd:	31 d2                	xor    %edx,%edx
   117cf:	48 8b 30             	mov    (%rax),%rsi
   117d2:	48 01 df             	add    %rbx,%rdi
   117d5:	48 89 f1             	mov    %rsi,%rcx
   117d8:	e8 23 f0 ff ff       	call   10800 <memset_s>
   117dd:	bf 02 00 00 00       	mov    $0x2,%edi
   117e2:	e8 2e 07 00 00       	call   11f15 <set_enclave_state>
   117e7:	8b 05 3f 66 00 00    	mov    0x663f(%rip),%eax        # 17e2c <EDMM_supported>
   117ed:	85 c0                	test   %eax,%eax
   117ef:	0f 84 6f ff ff ff    	je     11764 <do_init_enclave+0x24>
   117f5:	41 8b 84 24 58 01 00 	mov    0x158(%r12),%eax
   117fc:	00 
   117fd:	49 8d ac 24 60 01 00 	lea    0x160(%r12),%rbp
   11804:	00 
   11805:	48 c1 e0 05          	shl    $0x5,%rax
   11809:	48 01 e8             	add    %rbp,%rax
   1180c:	48 39 c5             	cmp    %rax,%rbp
   1180f:	72 10                	jb     11821 <do_init_enclave+0xe1>
   11811:	eb 15                	jmp    11828 <do_init_enclave+0xe8>
   11813:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
   11818:	48 83 c5 20          	add    $0x20,%rbp
   1181c:	48 39 c5             	cmp    %rax,%rbp
   1181f:	73 07                	jae    11828 <do_init_enclave+0xe8>
   11821:	66 83 7d 00 17       	cmpw   $0x17,0x0(%rbp)
   11826:	75 f0                	jne    11818 <do_init_enclave+0xd8>
   11828:	48 39 e8             	cmp    %rbp,%rax
   1182b:	0f 84 9f 00 00 00    	je     118d0 <do_init_enclave+0x190>
   11831:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
   11835:	8b 75 04             	mov    0x4(%rbp),%esi
   11838:	48 01 df             	add    %rbx,%rdi
   1183b:	48 c1 e6 0c          	shl    $0xc,%rsi
   1183f:	48 01 fe             	add    %rdi,%rsi
   11842:	0f 82 17 ff ff ff    	jb     1175f <do_init_enclave+0x1f>
   11848:	e8 f3 ab ff ff       	call   c440 <sgx_mm_init>
   1184d:	85 c0                	test   %eax,%eax
   1184f:	0f 85 0a ff ff ff    	jne    1175f <do_init_enclave+0x1f>
   11855:	49 8b bc 24 d8 06 00 	mov    0x6d8(%r12),%rdi
   1185c:	00 
   1185d:	e8 5e 9a ff ff       	call   b2c0 <emalloc_init_with_reserved_mem>
   11862:	85 c0                	test   %eax,%eax
   11864:	0f 85 f5 fe ff ff    	jne    1175f <do_init_enclave+0x1f>
   1186a:	48 89 ea             	mov    %rbp,%rdx
   1186d:	49 8d b4 24 60 01 00 	lea    0x160(%r12),%rsi
   11874:	00 
   11875:	48 89 df             	mov    %rbx,%rdi
   11878:	31 ed                	xor    %ebp,%ebp
   1187a:	e8 21 3e ff ff       	call   56a0 <init_rts_emas>
   1187f:	85 c0                	test   %eax,%eax
   11881:	40 0f 95 c5          	setne  %bpl
   11885:	e9 da fe ff ff       	jmp    11764 <do_init_enclave+0x24>
   1188a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
   11890:	4c 8d 25 e9 18 00 00 	lea    0x18e9(%rip),%r12        # 13180 <g_global_data>
   11897:	31 d2                	xor    %edx,%edx
   11899:	49 8b 4c 24 18       	mov    0x18(%r12),%rcx
   1189e:	49 8b 74 24 18       	mov    0x18(%r12),%rsi
   118a3:	49 8b 7c 24 10       	mov    0x10(%r12),%rdi
   118a8:	48 01 df             	add    %rbx,%rdi
   118ab:	e8 50 ef ff ff       	call   10800 <memset_s>
   118b0:	49 8b 4c 24 28       	mov    0x28(%r12),%rcx
   118b5:	49 8b 74 24 28       	mov    0x28(%r12),%rsi
   118ba:	31 d2                	xor    %edx,%edx
   118bc:	49 8b 7c 24 20       	mov    0x20(%r12),%rdi
   118c1:	48 01 df             	add    %rbx,%rdi
   118c4:	e8 37 ef ff ff       	call   10800 <memset_s>
   118c9:	e9 0f ff ff ff       	jmp    117dd <do_init_enclave+0x9d>
   118ce:	66 90                	xchg   %ax,%ax
   118d0:	31 f6                	xor    %esi,%esi
   118d2:	31 ff                	xor    %edi,%edi
   118d4:	e9 6f ff ff ff       	jmp    11848 <do_init_enclave+0x108>
   118d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000118e0 <sgx_is_enclave_crashed>:
   118e0:	f3 0f 1e fa          	endbr64 
   118e4:	48 83 ec 08          	sub    $0x8,%rsp
   118e8:	e8 17 06 00 00       	call   11f04 <get_enclave_state>
   118ed:	83 f8 03             	cmp    $0x3,%eax
   118f0:	0f 94 c0             	sete   %al
   118f3:	48 83 c4 08          	add    $0x8,%rsp
   118f7:	0f b6 c0             	movzbl %al,%eax
   118fa:	c3                   	ret    
   118fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000011900 <enter_enclave>:
   11900:	f3 0f 1e fa          	endbr64 
   11904:	41 55                	push   %r13
   11906:	49 89 d5             	mov    %rdx,%r13
   11909:	41 54                	push   %r12
   1190b:	49 89 f4             	mov    %rsi,%r12
   1190e:	55                   	push   %rbp
   1190f:	89 cd                	mov    %ecx,%ebp
   11911:	53                   	push   %rbx
   11912:	89 fb                	mov    %edi,%ebx
   11914:	48 83 ec 18          	sub    $0x18,%rsp
   11918:	e8 c3 ff ff ff       	call   118e0 <sgx_is_enclave_crashed>
   1191d:	85 c0                	test   %eax,%eax
   1191f:	75 67                	jne    11988 <enter_enclave+0x88>
   11921:	83 fb ff             	cmp    $0xffffffff,%ebx
   11924:	75 2a                	jne    11950 <enter_enclave+0x50>
   11926:	85 ed                	test   %ebp,%ebp
   11928:	75 34                	jne    1195e <enter_enclave+0x5e>
   1192a:	4c 89 ee             	mov    %r13,%rsi
   1192d:	4c 89 e7             	mov    %r12,%rdi
   11930:	e8 0b fe ff ff       	call   11740 <do_init_enclave>
   11935:	89 c3                	mov    %eax,%ebx
   11937:	89 d8                	mov    %ebx,%eax
   11939:	83 fb 01             	cmp    $0x1,%ebx
   1193c:	74 29                	je     11967 <enter_enclave+0x67>
   1193e:	48 83 c4 18          	add    $0x18,%rsp
   11942:	5b                   	pop    %rbx
   11943:	5d                   	pop    %rbp
   11944:	41 5c                	pop    %r12
   11946:	41 5d                	pop    %r13
   11948:	c3                   	ret    
   11949:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11950:	e8 af 05 00 00       	call   11f04 <get_enclave_state>
   11955:	83 f8 02             	cmp    $0x2,%eax
   11958:	75 0d                	jne    11967 <enter_enclave+0x67>
   1195a:	85 ed                	test   %ebp,%ebp
   1195c:	74 42                	je     119a0 <enter_enclave+0xa0>
   1195e:	83 fd 01             	cmp    $0x1,%ebp
   11961:	0f 84 e9 00 00 00    	je     11a50 <enter_enclave+0x150>
   11967:	bf 03 00 00 00       	mov    $0x3,%edi
   1196c:	e8 a4 05 00 00       	call   11f15 <set_enclave_state>
   11971:	b8 01 00 00 00       	mov    $0x1,%eax
   11976:	48 83 c4 18          	add    $0x18,%rsp
   1197a:	5b                   	pop    %rbx
   1197b:	5d                   	pop    %rbp
   1197c:	41 5c                	pop    %r12
   1197e:	41 5d                	pop    %r13
   11980:	c3                   	ret    
   11981:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
   11988:	48 83 c4 18          	add    $0x18,%rsp
   1198c:	b8 06 10 00 00       	mov    $0x1006,%eax
   11991:	5b                   	pop    %rbx
   11992:	5d                   	pop    %rbp
   11993:	41 5c                	pop    %r12
   11995:	41 5d                	pop    %r13
   11997:	c3                   	ret    
   11998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   1199f:	00 
   119a0:	85 db                	test   %ebx,%ebx
   119a2:	79 2c                	jns    119d0 <enter_enclave+0xd0>
   119a4:	83 fb fa             	cmp    $0xfffffffa,%ebx
   119a7:	74 27                	je     119d0 <enter_enclave+0xd0>
   119a9:	83 fb fe             	cmp    $0xfffffffe,%ebx
   119ac:	0f 84 ce 00 00 00    	je     11a80 <enter_enclave+0x180>
   119b2:	83 fb fc             	cmp    $0xfffffffc,%ebx
   119b5:	0f 84 d5 00 00 00    	je     11a90 <enter_enclave+0x190>
   119bb:	83 fb fb             	cmp    $0xfffffffb,%ebx
   119be:	75 a7                	jne    11967 <enter_enclave+0x67>
   119c0:	4c 89 ef             	mov    %r13,%rdi
   119c3:	e8 48 56 ff ff       	call   7010 <do_uninit_enclave>
   119c8:	89 c3                	mov    %eax,%ebx
   119ca:	e9 68 ff ff ff       	jmp    11937 <enter_enclave+0x37>
   119cf:	90                   	nop
   119d0:	e8 6e 05 00 00       	call   11f43 <get_thread_data>
   119d5:	48 85 c0             	test   %rax,%rax
   119d8:	0f 84 c2 00 00 00    	je     11aa0 <enter_enclave+0x1a0>
   119de:	48 8b 48 08          	mov    0x8(%rax),%rcx
   119e2:	48 39 48 10          	cmp    %rcx,0x10(%rax)
   119e6:	75 40                	jne    11a28 <enter_enclave+0x128>
   119e8:	48 8d 05 91 17 00 00 	lea    0x1791(%rip),%rax        # 13180 <g_global_data>
   119ef:	48 8b 50 38          	mov    0x38(%rax),%rdx
   119f3:	48 85 d2             	test   %rdx,%rdx
   119f6:	74 30                	je     11a28 <enter_enclave+0x128>
   119f8:	48 8b 68 50          	mov    0x50(%rax),%rbp
   119fc:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
   11a01:	be 08 00 00 00       	mov    $0x8,%esi
   11a06:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
   11a0d:	00 00 
   11a0f:	4c 01 ed             	add    %r13,%rbp
   11a12:	e8 29 42 ff ff       	call   5c40 <sgx_read_rand>
   11a17:	85 c0                	test   %eax,%eax
   11a19:	0f 85 8d 00 00 00    	jne    11aac <enter_enclave+0x1ac>
   11a1f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
   11a24:	48 89 45 28          	mov    %rax,0x28(%rbp)
   11a28:	89 df                	mov    %ebx,%edi
   11a2a:	4c 89 ea             	mov    %r13,%rdx
   11a2d:	4c 89 e6             	mov    %r12,%rsi
   11a30:	e8 9b 52 ff ff       	call   6cd0 <do_ecall>
   11a35:	89 c3                	mov    %eax,%ebx
   11a37:	89 d8                	mov    %ebx,%eax
   11a39:	83 fb 01             	cmp    $0x1,%ebx
   11a3c:	0f 85 fc fe ff ff    	jne    1193e <enter_enclave+0x3e>
   11a42:	e9 20 ff ff ff       	jmp    11967 <enter_enclave+0x67>
   11a47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11a4e:	00 00 
   11a50:	4c 89 ef             	mov    %r13,%rdi
   11a53:	e8 28 62 ff ff       	call   7c80 <trts_handle_exception>
   11a58:	4c 89 ef             	mov    %r13,%rdi
   11a5b:	89 c3                	mov    %eax,%ebx
   11a5d:	e8 0e 43 ff ff       	call   5d70 <check_static_stack_canary>
   11a62:	89 c2                	mov    %eax,%edx
   11a64:	b8 09 10 00 00       	mov    $0x1009,%eax
   11a69:	85 d2                	test   %edx,%edx
   11a6b:	0f 85 05 ff ff ff    	jne    11976 <enter_enclave+0x76>
   11a71:	e9 c1 fe ff ff       	jmp    11937 <enter_enclave+0x37>
   11a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11a7d:	00 00 00 
   11a80:	4c 89 e7             	mov    %r12,%rdi
   11a83:	e8 d8 56 ff ff       	call   7160 <do_oret>
   11a88:	89 c3                	mov    %eax,%ebx
   11a8a:	e9 a8 fe ff ff       	jmp    11937 <enter_enclave+0x37>
   11a8f:	90                   	nop
   11a90:	4c 89 e7             	mov    %r12,%rdi
   11a93:	e8 98 54 ff ff       	call   6f30 <do_ecall_add_thread>
   11a98:	89 c3                	mov    %eax,%ebx
   11a9a:	e9 98 fe ff ff       	jmp    11937 <enter_enclave+0x37>
   11a9f:	90                   	nop
   11aa0:	48 8d 05 d9 16 00 00 	lea    0x16d9(%rip),%rax        # 13180 <g_global_data>
   11aa7:	e9 4c ff ff ff       	jmp    119f8 <enter_enclave+0xf8>
   11aac:	e8 86 08 00 00       	call   12337 <abort>

0000000000011ab1 <restore_xregs>:
   11ab1:	f3 0f 1e fa          	endbr64 
   11ab5:	48 89 f9             	mov    %rdi,%rcx
   11ab8:	48 8d 05 85 86 00 00 	lea    0x8685(%rip),%rax        # 1a144 <g_xsave_enabled>
   11abf:	8b 00                	mov    (%rax),%eax
   11ac1:	83 f8 00             	cmp    $0x0,%eax
   11ac4:	74 16                	je     11adc <restore_xregs+0x2b>
   11ac6:	48 31 c0             	xor    %rax,%rax
   11ac9:	48 31 d2             	xor    %rdx,%rdx
   11acc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11ad1:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11ad6:	48 0f ae 29          	xrstor64 (%rcx)
   11ada:	eb 04                	jmp    11ae0 <restore_xregs+0x2f>
   11adc:	48 0f ae 09          	fxrstor64 (%rcx)
   11ae0:	c3                   	ret    

0000000000011ae1 <save_xregs>:
   11ae1:	f3 0f 1e fa          	endbr64 
   11ae5:	48 89 f9             	mov    %rdi,%rcx
   11ae8:	48 8d 05 55 86 00 00 	lea    0x8655(%rip),%rax        # 1a144 <g_xsave_enabled>
   11aef:	9b                   	fwait
   11af0:	8b 00                	mov    (%rax),%eax
   11af2:	83 f8 00             	cmp    $0x0,%eax
   11af5:	74 16                	je     11b0d <save_xregs+0x2c>
   11af7:	48 31 c0             	xor    %rax,%rax
   11afa:	48 31 d2             	xor    %rdx,%rdx
   11afd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
   11b02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
   11b07:	48 0f c7 21          	xsavec64 (%rcx)
   11b0b:	eb 04                	jmp    11b11 <save_xregs+0x30>
   11b0d:	48 0f ae 01          	fxsave64 (%rcx)
   11b11:	c3                   	ret    

0000000000011b12 <__x86_return_thunk>:
   11b12:	c3                   	ret    

0000000000011b13 <__x86_indirect_thunk_rax>:
   11b13:	ff e0                	jmp    *%rax

0000000000011b15 <__x86_indirect_thunk_rbx>:
   11b15:	ff e3                	jmp    *%rbx

0000000000011b17 <__x86_indirect_thunk_rcx>:
   11b17:	ff e1                	jmp    *%rcx

0000000000011b19 <__x86_indirect_thunk_rdx>:
   11b19:	ff e2                	jmp    *%rdx

0000000000011b1b <__x86_indirect_thunk_rbp>:
   11b1b:	ff e5                	jmp    *%rbp

0000000000011b1d <__x86_indirect_thunk_rsi>:
   11b1d:	ff e6                	jmp    *%rsi

0000000000011b1f <__x86_indirect_thunk_rdi>:
   11b1f:	ff e7                	jmp    *%rdi

0000000000011b21 <__x86_indirect_thunk_r8>:
   11b21:	41 ff e0             	jmp    *%r8

0000000000011b24 <__x86_indirect_thunk_r9>:
   11b24:	41 ff e1             	jmp    *%r9

0000000000011b27 <__x86_indirect_thunk_r10>:
   11b27:	41 ff e2             	jmp    *%r10

0000000000011b2a <__x86_indirect_thunk_r11>:
   11b2a:	41 ff e3             	jmp    *%r11

0000000000011b2d <__x86_indirect_thunk_r12>:
   11b2d:	41 ff e4             	jmp    *%r12

0000000000011b30 <__x86_indirect_thunk_r13>:
   11b30:	41 ff e5             	jmp    *%r13

0000000000011b33 <__x86_indirect_thunk_r14>:
   11b33:	41 ff e6             	jmp    *%r14

0000000000011b36 <__x86_indirect_thunk_r15>:
   11b36:	41 ff e7             	jmp    *%r15
   11b39:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b40:	00 00 00 
   11b43:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b4a:	00 00 00 
   11b4d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b54:	00 00 00 
   11b57:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b5e:	00 00 00 
   11b61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b68:	00 00 00 
   11b6b:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b72:	00 00 00 
   11b75:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b7c:	00 00 00 
   11b7f:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b86:	00 00 00 
   11b89:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b90:	00 00 00 
   11b93:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11b9a:	00 00 00 
   11b9d:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11ba4:	00 00 00 
   11ba7:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bae:	00 00 00 
   11bb1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bb8:	00 00 00 
   11bbb:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bc2:	00 00 00 
   11bc5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bcc:	00 00 00 
   11bcf:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bd6:	00 00 00 
   11bd9:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11be0:	00 00 00 
   11be3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bea:	00 00 00 
   11bed:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
   11bf4:	00 00 00 
   11bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
   11bfe:	00 00 

0000000000011c00 <constant_time_apply_sgxstep_mitigation_and_continue_execution>:
   11c00:	f3 0f 1e fa          	endbr64 
   11c04:	48 8b 67 20          	mov    0x20(%rdi),%rsp
   11c08:	48 8b 87 88 00 00 00 	mov    0x88(%rdi),%rax
   11c0f:	49 89 c2             	mov    %rax,%r10
   11c12:	80 38 c3             	cmpb   $0xc3,(%rax)
   11c15:	48 0f 44 04 24       	cmove  (%rsp),%rax
   11c1a:	48 89 e5             	mov    %rsp,%rbp
   11c1d:	48 8d 5c 24 08       	lea    0x8(%rsp),%rbx
   11c22:	48 0f 44 eb          	cmove  %rbx,%rbp
   11c26:	48 8d 1d c3 02 00 00 	lea    0x2c3(%rip),%rbx        # 11ef0 <__ct_mitigation_end>
   11c2d:	48 29 c3             	sub    %rax,%rbx
   11c30:	48 81 fb e6 00 00 00 	cmp    $0xe6,%rbx
   11c37:	48 0f 42 e5          	cmovb  %rbp,%rsp
   11c3b:	48 89 67 20          	mov    %rsp,0x20(%rdi)
   11c3f:	4c 0f 42 94 24 78 ff 	cmovb  -0x88(%rsp),%r10
   11c46:	ff ff 
   11c48:	4c 89 94 24 78 ff ff 	mov    %r10,-0x88(%rsp)
   11c4f:	ff 
   11c50:	48 8b 87 80 00 00 00 	mov    0x80(%rdi),%rax
   11c57:	48 89 84 24 38 ff ff 	mov    %rax,-0xc8(%rsp)
   11c5e:	ff 
   11c5f:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
   11c64:	48 0f 42 84 24 30 ff 	cmovb  -0xd0(%rsp),%rax
   11c6b:	ff ff 
   11c6d:	48 89 84 24 30 ff ff 	mov    %rax,-0xd0(%rsp)
   11c74:	ff 
   11c75:	48 89 b4 24 28 ff ff 	mov    %rsi,-0xd8(%rsp)
   11c7c:	ff 
   11c7d:	48 0f 42 94 24 20 ff 	cmovb  -0xe0(%rsp),%rdx
   11c84:	ff ff 
   11c86:	48 0f 42 8c 24 18 ff 	cmovb  -0xe8(%rsp),%rcx
   11c8d:	ff ff 
   11c8f:	4c 0f 42 84 24 10 ff 	cmovb  -0xf0(%rsp),%r8
   11c96:	ff ff 
   11c98:	4c 0f 42 8c 24 08 ff 	cmovb  -0xf8(%rsp),%r9
   11c9f:	ff ff 
   11ca1:	48 89 94 24 20 ff ff 	mov    %rdx,-0xe0(%rsp)
   11ca8:	ff 
   11ca9:	48 89 8c 24 18 ff ff 	mov    %rcx,-0xe8(%rsp)
   11cb0:	ff 
   11cb1:	4c 89 84 24 10 ff ff 	mov    %r8,-0xf0(%rsp)
   11cb8:	ff 
   11cb9:	4c 89 8c 24 08 ff ff 	mov    %r9,-0xf8(%rsp)
   11cc0:	ff 
   11cc1:	4c 8b 47 40          	mov    0x40(%rdi),%r8
   11cc5:	4c 8b 4f 48          	mov    0x48(%rdi),%r9
   11cc9:	4c 8b 57 50          	mov    0x50(%rdi),%r10
   11ccd:	4c 8b 5f 58          	mov    0x58(%rdi),%r11
   11cd1:	4c 8b 67 60          	mov    0x60(%rdi),%r12
   11cd5:	4c 8b 6f 68          	mov    0x68(%rdi),%r13
   11cd9:	4c 8b 77 70          	mov    0x70(%rdi),%r14
   11cdd:	4c 8b 7f 78          	mov    0x78(%rdi),%r15
   11ce1:	48 8b 07             	mov    (%rdi),%rax
   11ce4:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
   11ce8:	48 8b 57 10          	mov    0x10(%rdi),%rdx
   11cec:	48 8b 5f 18          	mov    0x18(%rdi),%rbx
   11cf0:	48 8b 6f 28          	mov    0x28(%rdi),%rbp
   11cf4:	48 8b 77 30          	mov    0x30(%rdi),%rsi
   11cf8:	48 8b 7f 38          	mov    0x38(%rdi),%rdi
   11cfc:	48 0f 42 84 24 70 ff 	cmovb  -0x90(%rsp),%rax
   11d03:	ff ff 
   11d05:	48 0f 42 8c 24 68 ff 	cmovb  -0x98(%rsp),%rcx
   11d0c:	ff ff 
   11d0e:	48 0f 42 94 24 60 ff 	cmovb  -0xa0(%rsp),%rdx
   11d15:	ff ff 
   11d17:	48 0f 42 9c 24 58 ff 	cmovb  -0xa8(%rsp),%rbx
   11d1e:	ff ff 
   11d20:	48 0f 42 ac 24 50 ff 	cmovb  -0xb0(%rsp),%rbp
   11d27:	ff ff 
   11d29:	48 0f 42 b4 24 48 ff 	cmovb  -0xb8(%rsp),%rsi
   11d30:	ff ff 
   11d32:	48 0f 42 bc 24 40 ff 	cmovb  -0xc0(%rsp),%rdi
   11d39:	ff ff 
   11d3b:	48 89 84 24 70 ff ff 	mov    %rax,-0x90(%rsp)
   11d42:	ff 
   11d43:	48 89 8c 24 68 ff ff 	mov    %rcx,-0x98(%rsp)
   11d4a:	ff 
   11d4b:	48 89 94 24 60 ff ff 	mov    %rdx,-0xa0(%rsp)
   11d52:	ff 
   11d53:	48 89 9c 24 58 ff ff 	mov    %rbx,-0xa8(%rsp)
   11d5a:	ff 
   11d5b:	48 89 ac 24 50 ff ff 	mov    %rbp,-0xb0(%rsp)
   11d62:	ff 
   11d63:	48 89 b4 24 48 ff ff 	mov    %rsi,-0xb8(%rsp)
   11d6a:	ff 
   11d6b:	48 89 bc 24 40 ff ff 	mov    %rdi,-0xc0(%rsp)
   11d72:	ff 
   11d73:	48 8b ac 24 20 ff ff 	mov    -0xe0(%rsp),%rbp
   11d7a:	ff 
   11d7b:	48 8b b4 24 18 ff ff 	mov    -0xe8(%rsp),%rsi
   11d82:	ff 
   11d83:	48 8b 94 24 10 ff ff 	mov    -0xf0(%rsp),%rdx
   11d8a:	ff 
   11d8b:	48 8b bc 24 08 ff ff 	mov    -0xf8(%rsp),%rdi
   11d92:	ff 
   11d93:	40 d0 ed             	shr    %bpl
   11d96:	48 89 eb             	mov    %rbp,%rbx
   11d99:	73 07                	jae    11da2 <.restore_flags>
   11d9b:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx

0000000000011da2 <.restore_flags>:
   11da2:	48 8d 84 24 38 ff ff 	lea    -0xc8(%rsp),%rax
   11da9:	ff 
   11daa:	48 94                	xchg   %rax,%rsp
   11dac:	9d                   	popf   
   11dad:	48 94                	xchg   %rax,%rsp
   11daf:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11db6:	00 00 00 00 
   11dba:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11dc1:	00 00 00 00 
   11dc5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11dcc:	00 00 00 00 
   11dd0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11dd7:	00 00 00 00 
   11ddb:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11de2:	00 00 00 00 
   11de6:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11ded:	00 00 00 00 
   11df1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
   11df8:	00 00 00 00 
   11dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000011e00 <.ct_enable_aexnotify>:
   11e00:	48 8b 84 24 28 ff ff 	mov    -0xd8(%rsp),%rax
   11e07:	ff 
   11e08:	c6 00 01             	movb   $0x1,(%rax)

0000000000011e0b <__ct_mitigation_begin>:
   11e0b:	0f ae e8             	lfence 

0000000000011e0e <.ct_check_write>:
   11e0e:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   11e13:	c4 e2 f1 f7 ce       	shlx   %rcx,%rsi,%rcx
   11e18:	e3 08                	jrcxz  11e22 <.ct_clear_low_bits_of_rdx>
   11e1a:	48 8d 76 ff          	lea    -0x1(%rsi),%rsi
   11e1e:	8a 02                	mov    (%rdx),%al
   11e20:	88 02                	mov    %al,(%rdx)

0000000000011e22 <.ct_clear_low_bits_of_rdx>:
   11e22:	b9 0c 00 00 00       	mov    $0xc,%ecx
   11e27:	c4 e2 f3 f7 d2       	shrx   %rcx,%rdx,%rdx
   11e2c:	c4 e2 f1 f7 d2       	shlx   %rcx,%rdx,%rdx

0000000000011e31 <.ct_check_execute>:
   11e31:	ff d7                	call   *%rdi
   11e33:	b9 00 10 00 00       	mov    $0x1000,%ecx
   11e38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
   11e3f:	00 

0000000000011e40 <.ct_warm_caches_and_tlbs>:
   11e40:	67 8d 49 c0          	lea    -0x40(%ecx),%ecx
   11e44:	8b 04 0e             	mov    (%rsi,%rcx,1),%eax
   11e47:	8b 44 0d 00          	mov    0x0(%rbp,%rcx,1),%eax
   11e4b:	8b 04 0b             	mov    (%rbx,%rcx,1),%eax
   11e4e:	8b 04 0a             	mov    (%rdx,%rcx,1),%eax
   11e51:	e3 02                	jrcxz  11e55 <.ct_restore_state>
   11e53:	eb eb                	jmp    11e40 <.ct_warm_caches_and_tlbs>

0000000000011e55 <.ct_restore_state>:
   11e55:	40 0f b6 ce          	movzbl %sil,%ecx
   11e59:	48 8b bc 24 30 ff ff 	mov    -0xd0(%rsp),%rdi
   11e60:	ff 
   11e61:	48 89 7c 24 f8       	mov    %rdi,-0x8(%rsp)
   11e66:	48 8b bc 24 40 ff ff 	mov    -0xc0(%rsp),%rdi
   11e6d:	ff 
   11e6e:	48 8b b4 24 48 ff ff 	mov    -0xb8(%rsp),%rsi
   11e75:	ff 
   11e76:	48 8b ac 24 50 ff ff 	mov    -0xb0(%rsp),%rbp
   11e7d:	ff 
   11e7e:	48 8b 9c 24 58 ff ff 	mov    -0xa8(%rsp),%rbx
   11e85:	ff 
   11e86:	48 8b 94 24 60 ff ff 	mov    -0xa0(%rsp),%rdx
   11e8d:	ff 
   11e8e:	48 8b 84 24 70 ff ff 	mov    -0x90(%rsp),%rax
   11e95:	ff 
   11e96:	e3 50                	jrcxz  11ee8 <.ct_restore_rcx>
   11e98:	48 8d 24 24          	lea    (%rsp),%rsp
   11e9c:	48 8d 24 24          	lea    (%rsp),%rsp
   11ea0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ea4:	48 8d 24 24          	lea    (%rsp),%rsp
   11ea8:	48 8d 24 24          	lea    (%rsp),%rsp
   11eac:	48 8d 24 24          	lea    (%rsp),%rsp
   11eb0:	48 8d 24 24          	lea    (%rsp),%rsp
   11eb4:	48 8d 24 24          	lea    (%rsp),%rsp
   11eb8:	48 8d 24 24          	lea    (%rsp),%rsp
   11ebc:	48 8d 24 24          	lea    (%rsp),%rsp
   11ec0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ec4:	48 8d 24 24          	lea    (%rsp),%rsp
   11ec8:	48 8d 24 24          	lea    (%rsp),%rsp
   11ecc:	48 8d 24 24          	lea    (%rsp),%rsp
   11ed0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ed4:	48 8d 24 24          	lea    (%rsp),%rsp
   11ed8:	48 8d 24 24          	lea    (%rsp),%rsp
   11edc:	48 8d 24 24          	lea    (%rsp),%rsp
   11ee0:	48 8d 24 24          	lea    (%rsp),%rsp
   11ee4:	48 8d 24 24          	lea    (%rsp),%rsp

0000000000011ee8 <.ct_restore_rcx>:
   11ee8:	48 8b 8c 24 68 ff ff 	mov    -0x98(%rsp),%rcx
   11eef:	ff 

0000000000011ef0 <__ct_mitigation_end>:
   11ef0:	ff a4 24 78 ff ff ff 	jmp    *-0x88(%rsp)

0000000000011ef7 <__ct_mitigation_ret>:
   11ef7:	c3                   	ret    

0000000000011ef8 <get_enclave_base>:
   11ef8:	f3 0f 1e fa          	endbr64 
   11efc:	48 8d 05 fd e0 fe ff 	lea    -0x11f03(%rip),%rax        # 0 <__ImageBase>
   11f03:	c3                   	ret    

0000000000011f04 <get_enclave_state>:
   11f04:	f3 0f 1e fa          	endbr64 
   11f08:	48 8d 0d 31 82 00 00 	lea    0x8231(%rip),%rcx        # 1a140 <g_enclave_state>
   11f0f:	48 31 c0             	xor    %rax,%rax
   11f12:	8b 01                	mov    (%rcx),%eax
   11f14:	c3                   	ret    

0000000000011f15 <set_enclave_state>:
   11f15:	f3 0f 1e fa          	endbr64 
   11f19:	48 8d 05 20 82 00 00 	lea    0x8220(%rip),%rax        # 1a140 <g_enclave_state>
   11f20:	89 38                	mov    %edi,(%rax)
   11f22:	c3                   	ret    

0000000000011f23 <lock_enclave>:
   11f23:	f3 0f 1e fa          	endbr64 
   11f27:	48 8d 15 12 82 00 00 	lea    0x8212(%rip),%rdx        # 1a140 <g_enclave_state>
   11f2e:	48 31 c0             	xor    %rax,%rax
   11f31:	b8 00 00 00 00       	mov    $0x0,%eax
   11f36:	48 31 c9             	xor    %rcx,%rcx
   11f39:	b9 01 00 00 00       	mov    $0x1,%ecx
   11f3e:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
   11f42:	c3                   	ret    

0000000000011f43 <get_thread_data>:
   11f43:	f3 0f 1e fa          	endbr64 
   11f47:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   11f4e:	00 00 
   11f50:	c3                   	ret    

0000000000011f51 <get_stack_guard>:
   11f51:	f3 0f 1e fa          	endbr64 
   11f55:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
   11f5c:	00 00 
   11f5e:	c3                   	ret    

0000000000011f5f <enclave_entry>:
   11f5f:	f3 0f 1e fa          	endbr64 
   11f63:	48 31 d2             	xor    %rdx,%rdx
   11f66:	48 01 d2             	add    %rdx,%rdx
   11f69:	fc                   	cld    
   11f6a:	4d 31 c0             	xor    %r8,%r8
   11f6d:	4d 31 c9             	xor    %r9,%r9
   11f70:	4d 31 d2             	xor    %r10,%r10
   11f73:	4d 31 db             	xor    %r11,%r11
   11f76:	4d 31 e4             	xor    %r12,%r12
   11f79:	4d 31 ed             	xor    %r13,%r13
   11f7c:	4d 31 f6             	xor    %r14,%r14
   11f7f:	4d 31 ff             	xor    %r15,%r15
   11f82:	48 83 f8 00          	cmp    $0x0,%rax
   11f86:	0f 85 07 01 00 00    	jne    12093 <enclave_entry+0x134>
   11f8c:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
   11f93:	00 00 
   11f95:	48 83 f8 00          	cmp    $0x0,%rax
   11f99:	75 0f                	jne    11faa <enclave_entry+0x4b>
   11f9b:	48 89 d8             	mov    %rbx,%rax
   11f9e:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   11fa4:	48 2d 00 04 00 00    	sub    $0x400,%rax
   11faa:	48 94                	xchg   %rax,%rsp
   11fac:	51                   	push   %rcx
   11fad:	55                   	push   %rbp
   11fae:	48 89 e5             	mov    %rsp,%rbp
   11fb1:	9c                   	pushf  
   11fb2:	48 f7 14 24          	notq   (%rsp)
   11fb6:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
   11fbd:	00 
   11fbe:	48 f7 14 24          	notq   (%rsp)
   11fc2:	9d                   	popf   
   11fc3:	48 83 ec 30          	sub    $0x30,%rsp
   11fc7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11fcb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   11fcf:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
   11fd3:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
   11fd7:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
   11fdb:	48 83 ec 20          	sub    $0x20,%rsp
   11fdf:	48 8d 3d 9a 18 00 00 	lea    0x189a(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   11fe6:	e8 c6 fa ff ff       	call   11ab1 <restore_xregs>
   11feb:	0f ae e8             	lfence 
   11fee:	48 83 c4 20          	add    $0x20,%rsp
   11ff2:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
   11ff6:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11ffa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11ffe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   12002:	e8 f9 f8 ff ff       	call   11900 <enter_enclave>
   12007:	48 89 c3             	mov    %rax,%rbx
   1200a:	48 8d 3d 6f 18 00 00 	lea    0x186f(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   12011:	e8 9b fa ff ff       	call   11ab1 <restore_xregs>
   12016:	0f ae e8             	lfence 
   12019:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1201d:	48 83 f8 00          	cmp    $0x0,%rax
   12021:	75 2c                	jne    1204f <enclave_entry+0xf0>
   12023:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1202a:	00 00 
   1202c:	48 83 f8 00          	cmp    $0x0,%rax
   12030:	74 1d                	je     1204f <enclave_entry+0xf0>
   12032:	48 8b 50 20          	mov    0x20(%rax),%rdx
   12036:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1203c:	80 f9 00             	cmp    $0x0,%cl
   1203f:	74 0e                	je     1204f <enclave_entry+0xf0>
   12041:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   12048:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
   1204f:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
   12056:	48 89 de             	mov    %rbx,%rsi
   12059:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1205d:	48 89 ec             	mov    %rbp,%rsp
   12060:	5d                   	pop    %rbp
   12061:	5b                   	pop    %rbx
   12062:	48 89 d4             	mov    %rdx,%rsp
   12065:	48 31 c9             	xor    %rcx,%rcx
   12068:	48 31 d2             	xor    %rdx,%rdx
   1206b:	4d 31 c0             	xor    %r8,%r8
   1206e:	4d 31 c9             	xor    %r9,%r9
   12071:	4d 31 d2             	xor    %r10,%r10
   12074:	4d 31 db             	xor    %r11,%r11
   12077:	4d 31 e4             	xor    %r12,%r12
   1207a:	4d 31 ed             	xor    %r13,%r13
   1207d:	4d 31 f6             	xor    %r14,%r14
   12080:	4d 31 ff             	xor    %r15,%r15
   12083:	48 01 d2             	add    %rdx,%rdx
   12086:	fc                   	cld    
   12087:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   1208e:	0f 01 d7             	enclu  
   12091:	0f 0b                	ud2    
   12093:	48 89 c2             	mov    %rax,%rdx
   12096:	48 89 d8             	mov    %rbx,%rax
   12099:	48 2d 00 00 01 00    	sub    $0x10000,%rax
   1209f:	e9 06 ff ff ff       	jmp    11faa <enclave_entry+0x4b>
   120a4:	0f 0b                	ud2    

00000000000120a6 <do_ocall>:
   120a6:	f3 0f 1e fa          	endbr64 
   120aa:	55                   	push   %rbp
   120ab:	48 89 e5             	mov    %rsp,%rbp
   120ae:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
   120b2:	48 89 75 18          	mov    %rsi,0x18(%rbp)
   120b6:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   120bd:	00 00 
   120bf:	48 29 c4             	sub    %rax,%rsp
   120c2:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
   120c9:	48 f7 d0             	not    %rax
   120cc:	48 21 c4             	and    %rax,%rsp
   120cf:	48 89 e1             	mov    %rsp,%rcx
   120d2:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
   120d9:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
   120e0:	00 
   120e1:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
   120e6:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
   120eb:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
   120f0:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
   120f5:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
   120fa:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
   120ff:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
   12104:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
   12109:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   12110:	00 
   12111:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
   12118:	00 00 
   1211a:	48 89 c1             	mov    %rax,%rcx
   1211d:	48 c1 e9 02          	shr    $0x2,%rcx
   12121:	48 31 c0             	xor    %rax,%rax
   12124:	fc                   	cld    
   12125:	f3 ab                	rep stos %eax,%es:(%rdi)
   12127:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1212e:	00 
   1212f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12133:	e8 a9 f9 ff ff       	call   11ae1 <save_xregs>
   12138:	48 8d 3d 41 17 00 00 	lea    0x1741(%rip),%rdi        # 13880 <SYNTHETIC_STATE>
   1213f:	48 89 3c 24          	mov    %rdi,(%rsp)
   12143:	e8 69 f9 ff ff       	call   11ab1 <restore_xregs>
   12148:	0f ae e8             	lfence 
   1214b:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   12150:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12155:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
   1215c:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
   12161:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
   12166:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
   1216d:	00 00 
   1216f:	48 89 c3             	mov    %rax,%rbx
   12172:	48 89 e7             	mov    %rsp,%rdi
   12175:	e8 a6 4f ff ff       	call   7120 <update_ocall_lastsp>
   1217a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1217f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12184:	48 8b 53 20          	mov    0x20(%rbx),%rdx
   12188:	8a 8a a7 00 00 00    	mov    0xa7(%rdx),%cl
   1218e:	80 f9 00             	cmp    $0x0,%cl
   12191:	74 0e                	je     121a1 <do_ocall+0xfb>
   12193:	c6 82 a7 00 00 00 00 	movb   $0x0,0xa7(%rdx)
   1219a:	c7 43 50 01 00 00 00 	movl   $0x1,0x50(%rbx)
   121a1:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
   121a8:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
   121af:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
   121b3:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
   121ba:	48 31 c9             	xor    %rcx,%rcx
   121bd:	48 31 d2             	xor    %rdx,%rdx
   121c0:	4d 31 c0             	xor    %r8,%r8
   121c3:	4d 31 c9             	xor    %r9,%r9
   121c6:	4d 31 d2             	xor    %r10,%r10
   121c9:	4d 31 db             	xor    %r11,%r11
   121cc:	4d 31 e4             	xor    %r12,%r12
   121cf:	4d 31 ed             	xor    %r13,%r13
   121d2:	4d 31 f6             	xor    %r14,%r14
   121d5:	4d 31 ff             	xor    %r15,%r15
   121d8:	48 01 d2             	add    %rdx,%rdx
   121db:	fc                   	cld    
   121dc:	0f 01 d7             	enclu  

00000000000121df <__morestack>:
   121df:	f3 0f 1e fa          	endbr64 
   121e3:	55                   	push   %rbp
   121e4:	48 89 e5             	mov    %rsp,%rbp
   121e7:	48 83 ec 20          	sub    $0x20,%rsp
   121eb:	e8 b6 fe ff ff       	call   120a6 <do_ocall>
   121f0:	c9                   	leave  
   121f1:	c3                   	ret    

00000000000121f2 <asm_oret>:
   121f2:	f3 0f 1e fa          	endbr64 
   121f6:	48 89 e3             	mov    %rsp,%rbx
   121f9:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
   121fe:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
   12203:	48 8b 63 08          	mov    0x8(%rbx),%rsp
   12207:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
   1220e:	00 
   1220f:	e8 9d f8 ff ff       	call   11ab1 <restore_xregs>
   12214:	0f ae e8             	lfence 
   12217:	48 31 c0             	xor    %rax,%rax
   1221a:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
   1221f:	48 29 f9             	sub    %rdi,%rcx
   12222:	48 83 e9 08          	sub    $0x8,%rcx
   12226:	48 c1 e9 02          	shr    $0x2,%rcx
   1222a:	fc                   	cld    
   1222b:	f3 ab                	rep stos %eax,%es:(%rdi)
   1222d:	48 8b 43 10          	mov    0x10(%rbx),%rax
   12231:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
   12236:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
   1223b:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
   12240:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
   12245:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
   1224a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
   1224f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
   12254:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
   12259:	48 89 ec             	mov    %rbp,%rsp
   1225c:	5d                   	pop    %rbp
   1225d:	c3                   	ret    
   1225e:	0f 0b                	ud2    

0000000000012260 <do_egetkey>:
   12260:	f3 0f 1e fa          	endbr64 
   12264:	53                   	push   %rbx
   12265:	51                   	push   %rcx
   12266:	52                   	push   %rdx
   12267:	48 89 fb             	mov    %rdi,%rbx
   1226a:	48 89 f1             	mov    %rsi,%rcx
   1226d:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12274:	0f 01 d7             	enclu  
   12277:	74 03                	je     1227c <do_egetkey+0x1c>
   12279:	48 31 c0             	xor    %rax,%rax
   1227c:	5a                   	pop    %rdx
   1227d:	59                   	pop    %rcx
   1227e:	5b                   	pop    %rbx
   1227f:	c3                   	ret    

0000000000012280 <do_ereport>:
   12280:	f3 0f 1e fa          	endbr64 
   12284:	53                   	push   %rbx
   12285:	51                   	push   %rcx
   12286:	52                   	push   %rdx
   12287:	48 89 fb             	mov    %rdi,%rbx
   1228a:	48 89 f1             	mov    %rsi,%rcx
   1228d:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
   12294:	f8                   	clc    

0000000000012295 <Lereport_inst>:
   12295:	0f 01 d7             	enclu  
   12298:	0f 92 c0             	setb   %al
   1229b:	5a                   	pop    %rdx
   1229c:	59                   	pop    %rcx
   1229d:	5b                   	pop    %rbx
   1229e:	c3                   	ret    

000000000001229f <do_everifyreport2>:
   1229f:	f3 0f 1e fa          	endbr64 
   122a3:	53                   	push   %rbx
   122a4:	51                   	push   %rcx
   122a5:	52                   	push   %rdx
   122a6:	48 89 fb             	mov    %rdi,%rbx
   122a9:	48 89 f1             	mov    %rsi,%rcx
   122ac:	48 c7 c0 08 00 00 00 	mov    $0x8,%rax

00000000000122b3 <Leverifyreport2_inst>:
   122b3:	0f 01 d7             	enclu  
   122b6:	74 03                	je     122bb <Leverifyreport2_inst+0x8>
   122b8:	48 31 c0             	xor    %rax,%rax
   122bb:	5a                   	pop    %rdx
   122bc:	59                   	pop    %rcx
   122bd:	5b                   	pop    %rbx
   122be:	c3                   	ret    

00000000000122bf <do_eaccept>:
   122bf:	f3 0f 1e fa          	endbr64 
   122c3:	53                   	push   %rbx
   122c4:	51                   	push   %rcx
   122c5:	52                   	push   %rdx
   122c6:	48 89 fb             	mov    %rdi,%rbx
   122c9:	48 89 f1             	mov    %rsi,%rcx
   122cc:	b8 05 00 00 00       	mov    $0x5,%eax
   122d1:	0f 01 d7             	enclu  
   122d4:	83 f8 00             	cmp    $0x0,%eax
   122d7:	75 5e                	jne    12337 <abort>
   122d9:	5a                   	pop    %rdx
   122da:	59                   	pop    %rcx
   122db:	5b                   	pop    %rbx
   122dc:	c3                   	ret    

00000000000122dd <do_eacceptcopy>:
   122dd:	f3 0f 1e fa          	endbr64 
   122e1:	53                   	push   %rbx
   122e2:	51                   	push   %rcx
   122e3:	52                   	push   %rdx
   122e4:	48 89 fb             	mov    %rdi,%rbx
   122e7:	48 89 f1             	mov    %rsi,%rcx
   122ea:	b8 07 00 00 00       	mov    $0x7,%eax
   122ef:	0f 01 d7             	enclu  
   122f2:	83 f8 00             	cmp    $0x0,%eax
   122f5:	75 40                	jne    12337 <abort>
   122f7:	5a                   	pop    %rdx
   122f8:	59                   	pop    %rcx
   122f9:	5b                   	pop    %rbx
   122fa:	c3                   	ret    

00000000000122fb <do_emodpe>:
   122fb:	f3 0f 1e fa          	endbr64 
   122ff:	53                   	push   %rbx
   12300:	51                   	push   %rcx
   12301:	52                   	push   %rdx
   12302:	48 89 fb             	mov    %rdi,%rbx
   12305:	48 89 f1             	mov    %rsi,%rcx
   12308:	b8 06 00 00 00       	mov    $0x6,%eax
   1230d:	0f 01 d7             	enclu  
   12310:	5a                   	pop    %rdx
   12311:	59                   	pop    %rcx
   12312:	5b                   	pop    %rbx
   12313:	c3                   	ret    

0000000000012314 <do_rdrand>:
   12314:	f3 0f 1e fa          	endbr64 
   12318:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1231d:	0f c7 f0             	rdrand %eax
   12320:	72 08                	jb     1232a <do_rdrand+0x16>
   12322:	ff c9                	dec    %ecx
   12324:	75 f7                	jne    1231d <do_rdrand+0x9>
   12326:	48 31 c0             	xor    %rax,%rax
   12329:	c3                   	ret    
   1232a:	48 89 f9             	mov    %rdi,%rcx
   1232d:	89 01                	mov    %eax,(%rcx)
   1232f:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
   12336:	c3                   	ret    

0000000000012337 <abort>:
   12337:	f3 0f 1e fa          	endbr64 
   1233b:	48 8d 05 fe 7d 00 00 	lea    0x7dfe(%rip),%rax        # 1a140 <g_enclave_state>
   12342:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
   12348:	0f 0b                	ud2    

000000000001234a <continue_execution>:
   1234a:	f3 0f 1e fa          	endbr64 
   1234e:	48 89 f9             	mov    %rdi,%rcx
   12351:	48 8b 01             	mov    (%rcx),%rax
   12354:	50                   	push   %rax
   12355:	48 8b 41 08          	mov    0x8(%rcx),%rax
   12359:	50                   	push   %rax
   1235a:	48 8b 41 20          	mov    0x20(%rcx),%rax
   1235e:	48 2d 88 00 00 00    	sub    $0x88,%rax
   12364:	48 8b 51 10          	mov    0x10(%rcx),%rdx
   12368:	48 8b 59 18          	mov    0x18(%rcx),%rbx
   1236c:	48 8b 69 28          	mov    0x28(%rcx),%rbp
   12370:	48 8b 71 30          	mov    0x30(%rcx),%rsi
   12374:	48 8b 79 38          	mov    0x38(%rcx),%rdi
   12378:	4c 8b 41 40          	mov    0x40(%rcx),%r8
   1237c:	4c 8b 49 48          	mov    0x48(%rcx),%r9
   12380:	4c 8b 51 50          	mov    0x50(%rcx),%r10
   12384:	4c 8b 59 58          	mov    0x58(%rcx),%r11
   12388:	4c 8b 61 60          	mov    0x60(%rcx),%r12
   1238c:	4c 8b 69 68          	mov    0x68(%rcx),%r13
   12390:	4c 8b 71 70          	mov    0x70(%rcx),%r14
   12394:	4c 8b 79 78          	mov    0x78(%rcx),%r15
   12398:	ff b1 80 00 00 00    	push   0x80(%rcx)
   1239e:	9d                   	popf   
   1239f:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
   123a6:	48 89 08             	mov    %rcx,(%rax)
   123a9:	59                   	pop    %rcx
   123aa:	5c                   	pop    %rsp
   123ab:	48 94                	xchg   %rax,%rsp
   123ad:	c2 80 00             	ret    $0x80

00000000000123b0 <second_phase>:
   123b0:	f3 0f 1e fa          	endbr64 
   123b4:	48 89 f4             	mov    %rsi,%rsp
   123b7:	48 c7 c0 09 00 00 00 	mov    $0x9,%rax
   123be:	0f 01 d7             	enclu  
   123c1:	ff e2                	jmp    *%rdx
